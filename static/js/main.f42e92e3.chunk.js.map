{"version":3,"sources":["components/login/validation.js","components/constants/constants.js","components/login/Login.style.js","components/loginscreen/NavBar.style.js","components/login/Login_NavBar.js","components/login/LoginForm.js","components/login/LoginHandles.js","components/register/RegisterForm.js","components/register/Register.js","components/loginscreen/Navbar/NavBar.style.js","components/loginscreen/Navbar/NavBar.js","components/loginscreen/Sidebar/SideBar.style.js","components/loginscreen/Sidebar/SideBar.js","components/loginscreen/Main/Dashboard/Dashboard.style.js","components/loginscreen/Main/MainNavbar.style.js","components/loginscreen/Main/MainNavbar.js","components/loginscreen/Main/Dashboard/Dashboard.js","components/loginscreen/Main/PlacementDrives/Filter/Filter.style.js","components/loginscreen/Main/PlacementDrives/Filter/Filter.js","components/loginscreen/Main/PlacementDrives/PDtable/PDtable.style.js","components/loginscreen/Main/PlacementDrives/PDtable/PDtable.js","components/loginscreen/Main/PlacementDrives/PlacementDrives.js","components/loginscreen/Main/Profile/Profile.style.js","components/loginscreen/Main/Profile/Profile.js","components/loginscreen/Main/EditProfile/EditProfile.js","components/loginscreen/Main/Contactus/ContactUs.style.js","components/loginscreen/Main/Contactus/contactArray.js","components/loginscreen/Main/Contactus/ContactUs.js","components/loginscreen/Main/Main.js","components/loginscreen/LoginScreen.style.js","components/loginscreen/LoginScreen.js","components/Protection/Protected.js","components/Protection/Login_Protected.js","components/forgotpassword/ForgotPassword.js","components/loginscreenAdmin/Navbar/NavBar.style.js","components/loginscreenAdmin/Navbar/NavBar.js","components/loginscreenAdmin/Sidebar/SideBar.style.js","components/loginscreenAdmin/Sidebar/SideBar.js","components/loginscreenAdmin/Main/Dashboard/Dashboard.style.js","components/loginscreenAdmin/Main/MainNavbar.style.js","components/loginscreenAdmin/Main/MainNavbar.js","components/loginscreenAdmin/Main/Dashboard/Dashboard.js","components/loginscreenAdmin/Main/PlacementDrives/Filter/Filter.style.js","components/loginscreenAdmin/Main/PlacementDrives/Filter/Filter.js","components/loginscreenAdmin/Main/PlacementDrives/PDtable/PDtable.style.js","components/loginscreenAdmin/Main/PlacementDrives/PDtable/PDtable.js","components/loginscreenAdmin/Main/PlacementDrives/PlacementDrives.js","components/loginscreenAdmin/Main/Profile/Profile.style.js","components/loginscreenAdmin/Main/Profile/Profile.js","components/loginscreenAdmin/Main/EditProfile/EditProfile.js","components/loginscreenAdmin/Main/AddDrive/AddDrive.style.js","components/loginscreenAdmin/Main/AddDrive/AddDrive.js","components/loginscreenAdmin/Main/StudentList/SLtable/SLtable.style.js","components/loginscreenAdmin/Main/StudentList/SLtable/StudentArray.js","components/loginscreenAdmin/Main/StudentList/SLtable/SLtable.js","components/loginscreenAdmin/Main/StudentList/StudentList.js","components/loginscreenAdmin/Main/StudentLog/tableArray.js","components/loginscreenAdmin/Main/StudentLog/SLtable.js","components/loginscreenAdmin/Main/StudentLog/StudentLog.js","components/loginscreenAdmin/Main/Main.js","components/loginscreenAdmin/LoginScreen.style.js","components/loginscreenAdmin/LoginScreen.js","App.js","serviceWorker.js","index.js","components/images/ldrp_logo.png","components/images/capgemini_logo.png"],"names":["validation","email","password","c_password","first_name","last_name","enrollment","errors","isError","emailError","passwordError","c_passwordError","first_nameError","last_nameError","enrollError","emailRex","test","greenColor","whiteColor","serverApi","userById","LoginFormWrapper","styled","div","NavBarWrapper","Login_NavBar","Navbar","light","expand","className","src","Logo","alt","height","width","NavbarBrand","LoginForm","props","match","useRouteMatch","Card","Label","Input","name","type","value","invalid","placeholder","onChange","handleChange","FormFeedback","Button","onClick","login","to","path","LoginHandles","useState","isLogin","user_type","loginCred","setLoginCred","event","target","checked","erro","console","log","config","headers","axios","post","then","res","status","localStorage","setItem","data","token","id","alert","message","catch","err","response","RegisterForm","enroll","register","Register","isRegister","signupCred","setSignupCred","NavBar","isOpen","setIsOpen","popoverOpen","setPopoverOpen","doogle","tooltipOpen","setTooltipOpen","isOpenModal","setisOpenModal","toggleModal","dropdownOpen","setDropdownOpen","setFirstName","setLastName","getItem","useEffect","defaults","common","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Dropdown","toggle","prevState","size","DropdownToggle","style","backgroundColor","border","padding","caret","round","color","fgColor","DropdownMenu","textDecoration","DropdownItem","icon","faBell","Badge","pill","faPowerOff","Modal","ModalBody","ModalFooter","logout","Tooltip","placement","Popover","toogle","trigger","PopoverBody","SideBarWrapper","SideBar","vertical","faBars","tag","Link","url","faChartPie","faUserTie","faComment","faPaperPlane","DashboardWrapper","MainNavbarWrapper","MainNavbar","location","useLocation","title","pathname","toggleFilter","faFilter","faEdit","bar","labels","datasets","label","borderColor","borderWidth","hoverBackgroundColor","barPercentage","Dashboard","Row","Col","CardBody","faSitemap","faUsers","faChartLine","faRupeeSign","CardHeader","FilterWrapper","Filter","setMinCtc","onCampus","setOnCampus","offCampus","setOffCampus","handleFilterApply","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","maxLength","e","multiple","for","check","ButtonGroup","active","CardFooter","PDtableWrapper","PDtable","rowNumber","tableArray","setTableArray","dataModal","setDataModal","get","Table","map","scope","company_name","position","ctc","technologies","venue","deadline","ModalHeader","min_cpi","aggregate_10_12","backlogs","PlacementDrives","isOpenFilter","setisOpenFilter","ProfileWrapper","Profile","fullName","setFullName","setEnrollment","department","setDepartment","pYear","setpYear","mobile","setMobile","setEmail","setStatus","company","tenth","setTenth","twelve","setTwelve","cpi","setCpi","backlog","setBacklog","batch","mobile_number","placed_status","percentage_10th","percentage_12th","marginLeft","borderless","EditProfile","setEnroll","setCompany","edit_succed","setEditSucced","ContactusWrapper","contactArray","ContactUs","sm","Main","exact","component","LoginScreenWrapper","LoginScreen","isLogout","setisLogout","removeItem","Protected","Target","Login_Protected","ForgotPassword","Component","faBriefcase","faDatabase","faSearch","faTrashAlt","AddDriveWrapper","AddDrive","setLocation","setTechnologies","setCompanyName","setPosition","setCtc","vanue","setVanue","description","setDescription","marks_avg","setMarksAvg","setMinCpi","min_backlog","setMinBacklog","setDeadline","bordered","SLtableWrapper","StudentArray","studentName","SLtable","StudentList","student_name","year","cgpa","contact_no","technology","StudentLog","LoginScreenAdminWrapper","LoginScreenAdmin","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"gQAAaA,EAAa,SAACC,EAAOC,GAAyF,IAA/EC,EAA8E,uDAAjE,KAAMC,EAA2D,uDAA9C,KAAMC,EAAwC,uDAA5B,KAAMC,EAAsB,uDAAT,KACvGC,EAAS,CACXC,SAAS,EACTC,WAAY,GACZC,cAAe,GACfC,gBAAiB,GACjBC,gBAAiB,GACjBC,eAAgB,GAChBC,YAAa,IAGXC,EAAW,wJAqDjB,MAnDc,KAAVd,GACAM,EAAOC,SAAU,EACjBD,EAAOE,WAAa,sBAGfM,EAASC,KAAKf,KACfM,EAAOC,SAAU,EACjBD,EAAOE,WAAa,wBAIT,KAAfL,IACAG,EAAOC,SAAU,EACjBD,EAAOK,gBAAkB,2BAGX,KAAdP,IACAE,EAAOC,SAAU,EACjBD,EAAOM,eAAiB,0BAGT,KAAfP,IACAC,EAAOC,SAAU,EACjBD,EAAOO,YAAc,kCAGR,KAAbZ,IACAK,EAAOC,SAAU,EACjBD,EAAOG,cAAgB,yBAWR,KAAfP,GACAI,EAAOC,SAAU,EACjBD,EAAOI,gBAAkB,yBAEP,MAAdR,GACID,IAAaC,IACbI,EAAOC,SAAU,EACjBD,EAAOI,gBAAkB,4BAK9BJ,G,4DChEEU,EAAW,iBAEXC,EAAW,mBAIXC,EAAU,+BAUVC,EAAS,oB,0vBCbf,IAAMC,EAAiBC,IAAOC,IAAR,IAONL,EAKAA,EAmBAA,EAcAD,G,4OC7ChB,IAAMO,EAAgBF,IAAOC,IAAV,IAEHN,G,iBCSRQ,EAVM,WACjB,OACI,kBAACD,EAAD,KACA,kBAACE,EAAA,EAAD,CAAQC,OAAK,EAACC,OAAO,KAAKC,UAAU,oBACpC,yBAAKC,IAAKC,IAAMC,IAAI,UAAUH,UAAU,UAAUI,OAAO,KAAKC,MAAM,OAChE,kBAACC,EAAA,EAAD,KAAa,yBAAKN,UAAU,gBAAe,mCAA9B,yBCsDVO,EAzDG,SAACC,GACf,IAAIC,EAAMC,cACV,OACI,6BACI,kBAAClB,EAAD,KACI,yBAAKQ,UAAU,0BACX,kBAAC,EAAD,MACA,6BACI,kBAACW,EAAA,EAAD,CAAMX,UAAU,yBACZ,wBAAIA,UAAU,eAAc,qCAC5B,6BACI,kBAACY,EAAA,EAAD,cACA,kBAACC,EAAA,EAAD,CACIC,KAAK,QACLC,KAAK,QACLC,MAAOR,EAAMpC,MACb6C,QAAST,EAAM5B,WACfsC,YAAY,QACZC,SAAUX,EAAMY,eAEpB,kBAACC,EAAA,EAAD,KAAeb,EAAM5B,aAEzB,6BACI,kBAACgC,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACIC,KAAK,WACLC,KAAK,WACLC,MAAOR,EAAMnC,SACb4C,QAAST,EAAM3B,cACfqC,YAAY,WACZC,SAAUX,EAAMY,eACpB,kBAACC,EAAA,EAAD,KAAeb,EAAM3B,gBAEzB,6BACI,kBAACyC,EAAA,EAAD,CACItB,UAAU,OACVuB,QAASf,EAAMgB,OAFnB,UAMJ,yBAAKxB,UAAU,eACX,kBAAC,IAAD,CAAMyB,GAAE,UAAKhB,EAAMiB,KAAX,cAAR,WAGA,0BAAM1B,UAAU,OAAhB,KACA,kBAAC,IAAD,CAAMyB,GAAE,UAAKhB,EAAMiB,KAAX,eAAR,0B,gBC4BjBC,EAxEM,WAAO,IAAD,EACWC,mBAAS,CACvCxD,MAAO,GACPC,SAAU,GACVwD,SAAS,EACTC,UAAW,GAEXnD,SAAS,EACTC,WAAY,GACZC,cAAe,KATI,mBAChBkD,EADgB,KACLC,EADK,KAuDvB,OAAID,EAAUF,QACkB,UAAxBE,EAAUD,UAEN,kBAAC,IAAD,CAAUL,GAAG,uCAIb,kBAAC,IAAD,CAAUA,GAAG,kCAIrB,kBAAC,EAAD,eAAWL,aAtDM,SAACa,GAAW,IAAD,EACWA,EAAMC,OAArCpB,EADoB,EACpBA,KAAME,EADc,EACdA,MAAOD,EADO,EACPA,KAAMoB,EADC,EACDA,QAEvBH,EADK,aAATjB,EACiB,eAAKgB,EAAN,eAAkBjB,EAAQqB,IAEzB,eAAKJ,EAAN,eAAkBjB,EAAQE,MAkDtCQ,MA/CM,WACV,IAAMY,EAAOjE,EAAW4D,EAAU3D,MAAO2D,EAAU1D,UAKnD,GAHA2D,EAAa,eAAID,EAAL,GAAkBK,IAE9BC,QAAQC,IAAI,OAAQP,IACfK,EAAKzD,QAAS,CACf,IAAM4D,EAAS,CACXC,QAAS,CACL,eAAgB,oBAEpBpE,MAAO2D,EAAU3D,MACjBC,SAAU0D,EAAU1D,UAExBoE,IAAMC,KAAN,UAAcpD,GAAd,OLhCU,eKgC4BiD,GAAQI,MAAK,SAAAC,GAC/CP,QAAQC,IAAIM,EAAIC,QACG,MAAfD,EAAIC,QACJC,aAAaC,QAAQ,QAASH,EAAII,KAAKA,KAAKC,OAC5CZ,QAAQC,IAAI,WAAYM,GACxBP,QAAQC,IAAI,QAASM,EAAII,KAAKA,KAAKC,OACnCZ,QAAQC,IAAI,KAAMM,EAAII,KAAKA,KAAKE,IAChClB,EAAa,eACND,EADK,CAERF,SAAQ,EACRC,UAAWc,EAAII,KAAKA,KAAKlB,eAG7BO,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,eAkBpCrB,KC8CDyB,EAnHM,SAAAhD,GAEjB,OADA6B,QAAQC,IAAI,YAAY9B,GAEpB,6BACI,kBAAChB,EAAD,KACI,yBAAKQ,UAAU,gCACX,kBAAC,EAAD,MACA,6BACI,kBAACW,EAAA,EAAD,CAAMX,UAAU,4BACZ,wBAAIA,UAAU,eAAc,wCAC5B,6BACI,kBAACY,EAAA,EAAD,kBACA,kBAACC,EAAA,EAAD,CACIC,KAAK,aACLC,KAAK,OACLC,MAAOR,EAAMjC,WAEb0C,QAAST,EAAMzB,gBACfmC,YAAY,kBACZC,SAAUX,EAAMY,eAEpB,kBAACC,EAAA,EAAD,KAAeb,EAAMzB,kBAEzB,6BACI,kBAAC6B,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACIC,KAAK,YACLC,KAAK,OACLC,MAAOR,EAAMhC,UAEbyC,QAAST,EAAMxB,eACfkC,YAAY,iBACZC,SAAUX,EAAMY,eAEpB,kBAACC,EAAA,EAAD,KAAeb,EAAMxB,iBAEzB,6BACI,kBAAC4B,EAAA,EAAD,cACA,kBAACC,EAAA,EAAD,CACIC,KAAK,QACLC,KAAK,OACLC,MAAOR,EAAMpC,MAEb6C,QAAST,EAAM5B,WACfsC,YAAY,cACZC,SAAUX,EAAMY,eAEpB,kBAACC,EAAA,EAAD,KAAeb,EAAM5B,aAEzB,6BACI,kBAACgC,EAAA,EAAD,0BACA,kBAACC,EAAA,EAAD,CACIC,KAAK,SACLC,KAAK,OACLC,MAAOR,EAAMiD,OAEbxC,QAAST,EAAMvB,YACfiC,YAAY,0BACZC,SAAUX,EAAMY,eAEpB,kBAACC,EAAA,EAAD,KAAeb,EAAMvB,cAGzB,6BACI,kBAAC2B,EAAA,EAAD,iBACA,kBAACC,EAAA,EAAD,CACIC,KAAK,WACLC,KAAK,WACLC,MAAOR,EAAMnC,SAEb4C,QAAST,EAAM3B,cACfqC,YAAY,iBACZC,SAAUX,EAAMY,eAEpB,kBAACC,EAAA,EAAD,KAAeb,EAAM3B,gBAEzB,6BACI,kBAAC+B,EAAA,EAAD,yBACA,kBAACC,EAAA,EAAD,CACIC,KAAK,aACLC,KAAK,WACLC,MAAOR,EAAMlC,WAEb2C,QAAST,EAAM1B,gBACfoC,YAAY,mBACZC,SAAUX,EAAMY,eAEpB,kBAACC,EAAA,EAAD,KAAeb,EAAM1B,kBAEzB,6BACI,kBAACwC,EAAA,EAAD,CACItB,UAAU,OACVuB,QAASf,EAAMkD,UAFnB,aAMJ,yBAAK1D,UAAU,eACX,kBAAC,IAAD,CAAMyB,GAAG,qBAAT,UAGA,0BAAMzB,UAAU,OAAhB,KACA,kBAAC,IAAD,CAAMyB,GAAG,+BAAT,0BC5BjBkC,EAxEE,WAAO,IAAD,EAEiB/B,mBAAS,CACzCrD,WAAY,GACZC,UAAW,GACXJ,MAAO,GACPqF,OAAQ,GACRpF,SAAU,GACVC,WAAY,GACZsF,YAAY,EAEZjF,SAAS,EACTC,WAAY,GACZC,cAAe,GACfC,gBAAiB,GACjBC,gBAAiB,GACjBC,eAAgB,GAChBC,YAAa,KAjBE,mBAEZ4E,EAFY,KAEAC,EAFA,KA4DnB,OAAID,EAAWD,WAEP,kBAAC,IAAD,CAAUnC,GAAG,MAGjB,kBAAC,EAAD,eAAcL,aA7CG,SAACa,GAAW,IAAD,EACWA,EAAMC,OAArCpB,EADoB,EACpBA,KAAME,EADc,EACdA,MAAOD,EADO,EACPA,KAAMoB,EADC,EACDA,QAEvB2B,EADK,aAAT/C,EACkB,eAAK8C,EAAN,eAAmB/C,EAAOqB,IAGzB,eAAK0B,EAAN,eAAmB/C,EAAOE,MAwCvC0C,SArCS,WACb,IAAMJ,EAAMnF,EAAW0F,EAAWzF,MAAOyF,EAAWxF,SAAUwF,EAAWvF,WAAYuF,EAAWtF,WAAYsF,EAAWrF,UAAWqF,EAAWJ,QAG7I,GAFAK,EAAc,eAAID,EAAL,GAAmBP,KAE3BA,EAAI3E,QAAS,CACd,IAAM4D,EAAS,CACXC,QAAS,CACL,eAAgB,oBAEpBjE,WAAYsF,EAAWtF,WACvBC,UAAWqF,EAAWrF,UACtBJ,MAAOyF,EAAWzF,MAClBqF,OAAQI,EAAWJ,OACnBpF,SAAUwF,EAAWxF,UAEzBoE,IAAMC,KAAN,UAAcpD,GAAd,OPzCa,mBOyC4BiD,GAAQI,MAAK,SAAAC,GAClDP,QAAQC,IAAIM,EAAIC,QACG,MAAfD,EAAIC,QACJiB,EAAc,eACPD,EADM,CAETD,YAAY,KAEhBT,MAAMP,EAAII,KAAKI,UAGfD,MAAMP,EAAII,KAAKI,YAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,eAWpCS,K,0pBCvET,IAAMlE,GAAgBF,IAAOC,IAAV,KAEHN,EAsBbA,EAKAC,EACWD,G,2BCqJN2E,GAvJA,SAACvD,GAAW,IAAD,EACIoB,oBAAS,GADb,mBACjBoC,EADiB,KACTC,EADS,OAEcrC,oBAAS,GAFvB,mBAEjBsC,EAFiB,KAEJC,EAFI,KAGlBC,EAAS,kBAAMD,GAAgBD,IAHb,EAMctC,oBAAS,GANvB,mBAMjByC,EANiB,KAMJC,EANI,OASc1C,oBAAS,GATvB,mBASjB2C,EATiB,KASJC,EATI,KAUlBC,EAAc,kBAAMD,GAAgBD,IAVlB,EAYgB3C,oBAAS,GAZzB,mBAYjB8C,EAZiB,KAYHC,EAZG,OAeQ/C,mBAAS,IAfjB,mBAejBrD,EAfiB,KAeNqG,EAfM,QAgBMhD,mBAAS,IAhBf,qBAgBjBpD,GAhBiB,MAgBPqG,GAhBO,MAkBpB5B,GAAMH,aAAagC,QAAQ,SAiB/B,OAhBAC,qBAAU,WAERtC,IAAMuC,SAASxC,QAAQyC,OAAS,CAAE,QAAU,GAAV,OAAchC,KAChDR,IAAMC,KAAN,UAAcpD,GAAd,OAA0BC,GAAYkD,IAAMuC,SAASxC,QAAQyC,QAAQtC,MAAK,SAAAC,GACtEP,QAAQC,IAAIM,GACO,MAAfA,EAAIC,QACJR,QAAQC,IAAI,WAAYM,GACxBgC,EAAahC,EAAII,KAAKA,KAAKzE,YAC3BsG,GAAYjC,EAAII,KAAKA,KAAKxE,aAE1B6D,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,cAEzC,CAAC7E,EAAWC,KAEX,6BACE,kBAAC,GAAD,KAIE,kBAACqB,EAAA,EAAD,CAAQC,OAAK,EAACC,OAAO,KAAKC,UAAU,oBAClC,kBAACM,EAAA,EAAD,KAAa,yBAAKN,UAAU,gBAAe,mCAA9B,sBACb,kBAACkF,EAAA,EAAD,CAAe3D,QAvCR,kBAAM0C,GAAWD,MAwCxB,kBAACmB,EAAA,EAAD,CAAUnB,OAAQA,EAAQoB,QAAM,GAC9B,kBAACC,EAAA,EAAD,CAAKrF,UAAU,UAAUoF,QAAM,GAE7B,6BACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,iBACjB,kBAACwF,EAAA,EAAD,CAAUxB,OAAQU,EAAce,OArC3B,kBAAMd,GAAgB,SAAAe,GAAS,OAAKA,MAqCeC,KAAK,MAC3D,kBAACC,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB1G,EACjB2G,OAAQ3G,EACR4G,QAAS,KACRC,OAAK,GACR,kBAAC,KAAD,CACEnF,KAAI,UAAKvC,EAAL,YAAmBC,IACvB0H,OAAO,EACPP,KAAM,GACNQ,MAAO9G,EACP+G,QAAQ,UACP,KACH,2CAAiB7H,IAGnB,kBAAC8H,EAAA,EAAD,CAAcrG,UAAU,kBACtB,kBAAC,IAAD,CAAMyB,GAAG,wCACPoE,MAAO,CAAES,eAAgB,SAEzB,kBAACC,EAAA,EAAD,CAAcvG,UAAU,iBAAxB,YAEF,kBAAC,IAAD,CAAMyB,GAAG,IACPoE,MAAO,CAAES,eAAgB,SAEzB,kBAACC,EAAA,EAAD,CAAcvG,UAAU,iBAAxB,yBAQZ,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,gBAAgBuB,QAAS6C,GAC1C,kBAAC,KAAD,CAAiBlB,GAAG,eAAesD,KAAMC,OACzC,6BAAK,kBAACC,EAAA,EAAD,CAAOC,MAAI,EAACR,MAAM,UAAlB,QAIT,kBAACb,EAAA,EAAD,CAAStF,UAAU,QACjB,kBAACuF,EAAA,EAAD,CAASvF,UAAU,gBAAgBuB,QAASkD,GAC1C,kBAAC,KAAD,CAAiBvB,GAAG,gBAAgBsD,KAAMI,YAYpD,kBAACC,EAAA,EAAD,CAAO7C,OAAQO,EAAakB,OAAQhB,GAClC,kBAACqC,EAAA,EAAD,CAAWjB,MAAO,CAAEC,gBAAiBzG,IAArC,0BAGA,kBAAC0H,EAAA,EAAD,CAAalB,MAAO,CAAEC,gBAAiBzG,IACrC,kBAACiC,EAAA,EAAD,CAAQuE,MAAO,CAAEC,gBAAiB1G,GAAcuG,KAAK,KAAKpE,QAASf,EAAMwG,QAAzE,OAA8F,IAC9F,kBAAC1F,EAAA,EAAD,CAAQ6E,MAAM,YAAYR,KAAK,KAAKpE,QAASkD,GAA7C,QAMJ,kBAACwC,EAAA,EAAD,CAASC,UAAU,SAASlD,OAAQK,EAAanC,OAAO,gBAAgBuD,OA9GxD,kBAAMnB,GAAgBD,KA8GtC,UAMA,kBAAC8C,EAAA,EAAD,CACED,UAAU,SACVlD,OAAQE,EACRhC,OAAO,eACPkF,OAAQhD,EACRiD,QAAQ,SAKR,kBAACC,GAAA,EAAD,KACE,yBAAKtH,UAAU,iBACb,gDAEF,yBAAKA,UAAU,iBACb,gDAEF,yBAAKA,UAAU,iBACb,qD,4nCCzKP,IAAMuH,GAAe9H,IAAOC,IAAR,KAEHL,EAsBAD,EVxBI,gBUgDNC,EAMZD,EACYA,GCePoI,GAhEC,WACd,IAAI/G,EAAMC,cACV,OACE,6BACE,kBAAC6G,GAAD,KACE,yBAAKvH,UAAU,oBACb,yBAAKA,UAAU,kBACb,kBAACH,EAAA,EAAD,CAAQG,UAAU,sBAChB,yBAAKC,IAAKC,IAAMC,IAAI,UAAUC,OAAO,KAAKC,MAAM,QAElD,yBAAKL,UAAU,cACb,kBAACqF,EAAA,EAAD,CAAKoC,UAAQ,EAACzH,UAAU,sBAEtB,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,sBACjB,kBAAC,KAAD,CAAiBwG,KAAMkB,KAAQ1H,UAAU,SAD3C,SAKF,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,gBAAgB2H,IAAKC,IAAMnG,GAAE,UAAKhB,EAAMoH,MACzD,kBAAC,KAAD,CAAiBrB,KAAMsB,KAAY9H,UAAU,SAD/C,cAKF,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,gBAAgB2H,IAAKC,IAAMnG,GAAE,UAAKhB,EAAMoH,IAAX,sBAC9C,kBAAC,KAAD,CAAiBrB,KAAMuB,KAAW/H,UAAU,SAD9C,qBAiBF,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,gBAAgB2H,IAAKC,IAAMnG,GAAI,qBAChD,kBAAC,KAAD,CAAiB+E,KAAMwB,KAAWhI,UAAU,SAD9C,aAKF,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,gBAAgB2H,IAAKC,IAAMnG,GAAE,UAAKhB,EAAMoH,IAAX,gBAC9C,kBAAC,KAAD,CAAiBrB,KAAMyB,KAAcjI,UAAU,SADjD,sB,kfCvDX,IAAMkI,GAAmBzI,IAAOC,IAAV,KAENL,EZHK,gBY0BhBD,G,qkBC1BL,IAAM+I,GAAoB1I,IAAOC,IAAV,KAEPL,EbFK,gBaehBD,EbjBiB,oBa2BjBA,Eb3BiB,qBc0CdgJ,GApCI,SAAA5H,GACf,IAAM6H,EAAWC,cAEjB,OACI,6BACI,kBAACH,GAAD,KACI,kBAACtI,EAAA,EAAD,CAAQG,UAAU,oBAAoBF,OAAK,EAACC,OAAO,MAC/C,kBAACO,EAAA,EAAD,CAAaN,UAAU,kBAClBQ,EAAM+H,OAEY,mDAAtBF,EAASG,SACN,kBAACnD,EAAA,EAAD,CAAKrF,UAAU,uBAAuBoF,QAAM,GACxC,kBAACE,EAAA,EAAD,CAAS/D,QAASf,EAAMiI,cACpB,kBAAC,KAAD,CAAiBjC,KAAMkC,KAAU1I,UAAU,SAD/C,WAKJ,8BAEmB,0CAAtBqI,EAASG,SACN,kBAACnD,EAAA,EAAD,CAAKrF,UAAU,uBAAuBoF,QAAM,GACxC,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASrC,GAAG,eAAeyE,IAAKC,IAAMnG,GAAG,8CACrC,kBAAC,KAAD,CAAiB+E,KAAMmC,KAAQ3I,UAAU,SAD7C,kBAMR,kCC1BlB4I,GAAM,CACVC,OAAQ,CAAC,WAAY,KAAM,KAAM,aAAc,QAAS,aAAc,cACtEC,SAAU,CACR,CACEC,MAAO,kBACPjD,gBAAiB,oBACjBkD,YAAa5J,EACb6J,YAAa,EACbC,qBAAsB9J,EACtB+J,cAAe,GAIfnG,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAoHtBoG,GA/GG,WAChB,OACE,6BACE,kBAAClB,GAAD,KACE,yBAAKlI,UAAU,oBACb,kBAAC,GAAD,CAAYuI,MAAM,cAElB,kBAACc,GAAA,EAAD,CAAKrJ,UAAU,YACb,kBAACsJ,GAAA,EAAD,KACE,kBAAC3I,EAAA,EAAD,CAAMX,UAAU,kBACd,kBAACuJ,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,KACE,yBAAKrJ,UAAU,2BACb,kBAAC,KAAD,CAAiBwG,KAAMgD,KAAW7D,KAAK,QAEzC,yBAAK3F,UAAU,wBAAf,cAEE,6BACA,wCAOV,kBAACsJ,GAAA,EAAD,KACE,kBAAC3I,EAAA,EAAD,CAAMX,UAAU,kBACd,kBAACuJ,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,KACE,yBAAKrJ,UAAU,2BACb,kBAAC,KAAD,CAAiBwG,KAAMiD,KAAS9D,KAAK,QAEvC,yBAAK3F,UAAU,yBAAf,iBAEE,6BACA,wCAOV,kBAACsJ,GAAA,EAAD,KACE,kBAAC3I,EAAA,EAAD,CAAMX,UAAU,kBACd,kBAACuJ,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,KACE,yBAAKrJ,UAAU,2BACb,kBAAC,KAAD,CAAiBwG,KAAMkD,KAAa/D,KAAK,QAE3C,yBAAK3F,UAAU,wBAAf,iBAEE,6BACA,wCAOV,kBAACsJ,GAAA,EAAD,KACE,kBAAC3I,EAAA,EAAD,CAAMX,UAAU,kBACd,kBAACuJ,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,KACE,yBAAKrJ,UAAU,2BACb,kBAAC,KAAD,CAAiBwG,KAAMmD,KAAahE,KAAK,QAE3C,yBAAK3F,UAAU,yBAAf,kBAEE,6BACA,sCAHF,YAUR,kBAACsJ,GAAA,EAAD,KACE,kBAAC3I,EAAA,EAAD,CAAMX,UAAU,kBACd,kBAACuJ,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,KACE,yBAAKrJ,UAAU,2BACb,kBAAC,KAAD,CAAiBwG,KAAMuB,KAAWpC,KAAK,QAEzC,yBAAK3F,UAAU,yBAAf,gBAEE,6BACA,yCAQZ,kBAACW,EAAA,EAAD,CAAMX,UAAU,YACd,kBAAC4J,GAAA,EAAD,yBAGA,kBAACL,GAAA,EAAD,KACE,6BACE,kBAAC,OAAD,CAAKvG,KAAM4F,GAAKvI,MAAO,IAAKD,OAAQ,Y,0iBC5H7C,IAAMyJ,GAAgBpK,IAAOC,IAAV,KAaHN,EAcAC,EhB3BK,iBiB6GbyK,GA5GA,SAACtJ,GAAW,IAAD,EAEOoB,qBAFP,mBAENmI,GAFM,aAGUnI,oBAAS,GAHnB,mBAGfoI,EAHe,KAGLC,EAHK,OAIYrI,oBAAS,GAJrB,mBAIfsI,EAJe,KAIJC,EAJI,KAMhBC,EAAoB,aAI1B,OACI,6BACI,kBAACP,GAAD,KACI,6BACI,kBAAClJ,EAAA,EAAD,KACI,kBAAC0I,GAAA,EAAD,CAAKrJ,UAAU,cACX,kBAACsJ,GAAA,EAAD,CAAKtJ,UAAU,aAAa2F,KAAK,MAC7B,kBAAC0E,GAAA,EAAD,KACI,kBAACzJ,EAAA,EAAD,KAAO,oCACP,kBAAC0J,GAAA,EAAD,CAAYtK,UAAU,cAAc2F,KAAK,MACrC,kBAAC4E,GAAA,EAAD,CAAiBvK,UAAU,cAAcwK,UAAU,WAC/C,kBAACC,GAAA,EAAD,cAEJ,kBAAC5J,EAAA,EAAD,CAAO6J,UAAU,IACbvJ,SAAU,SAACwJ,GAAD,OAAOZ,EAAUY,EAAEzI,OAAOlB,WAE5C,kBAACsJ,GAAA,EAAD,CAAYtK,UAAU,cAAc2F,KAAK,MACrC,kBAAC4E,GAAA,EAAD,CAAiBvK,UAAU,cAAcwK,UAAU,WAC/C,kBAACC,GAAA,EAAD,cAEJ,kBAAC5J,EAAA,EAAD,CAAO6J,UAAU,SAK7B,kBAACpB,GAAA,EAAD,CAAKtJ,UAAU,cACX,kBAACqK,GAAA,EAAD,KACI,kBAACzJ,EAAA,EAAD,KAAO,yCACP,kBAACC,EAAA,EAAD,CAAOE,KAAK,SAAS6J,UAAQ,EAACjF,KAAK,MAC/B,6CACA,4CACA,+CAKZ,kBAAC2D,GAAA,EAAD,CAAKtJ,UAAU,cACX,kBAACqK,GAAA,EAAD,CAAW1E,KAAK,MACZ,kBAAC/E,EAAA,EAAD,CAAOiK,IAAI,aAAY,2CACvB,kBAACR,GAAA,EAAD,CAAWS,OAAK,GACZ,kBAAClK,EAAA,EAAD,CAAOkK,OAAK,GACR,kBAACjK,EAAA,EAAD,CAAOE,KAAK,WAAWmC,GAAG,cAD9B,QAGQ,6BACR,kBAACtC,EAAA,EAAD,CAAOkK,OAAK,GACR,kBAACjK,EAAA,EAAD,CAAOE,KAAK,WAAWmC,GAAG,cAD9B,UAGQ,6BACR,kBAACtC,EAAA,EAAD,CAAOkK,OAAK,GACR,kBAACjK,EAAA,EAAD,CAAOE,KAAK,WAAWmC,GAAG,cAD9B,YAQZ,kBAACoG,GAAA,EAAD,CAAKtJ,UAAU,cACX,kBAACqK,GAAA,EAAD,CAAW1E,KAAK,MACZ,kBAAC/E,EAAA,EAAD,CAAOiK,IAAI,aAAY,sCACvB,kBAACE,GAAA,EAAD,KACI,kBAACzJ,EAAA,EAAD,CAAQtB,UAAU,OAAO2F,KAAK,KAAKpE,QAAS,kBAAM0I,GAAaD,IAAWgB,QAAqB,IAAbhB,GAAlF,aACA,kBAAC1I,EAAA,EAAD,CAAQtB,UAAU,OAAO2F,KAAK,KAAKpE,QAAS,kBAAM4I,GAAcD,IAAYc,QAAsB,IAAdd,GAApF,iBAKZ,kBAACZ,GAAA,EAAD,CAAKtJ,UAAU,cACX,kBAACqK,GAAA,EAAD,CAAW1E,KAAK,MACZ,kBAAC/E,EAAA,EAAD,CAAOiK,IAAI,aAAY,4CACvB,kBAACR,GAAA,EAAD,CAAWS,OAAK,GACZ,kBAAClK,EAAA,EAAD,CAAOkK,OAAK,GACR,kBAACjK,EAAA,EAAD,CAAOE,KAAK,WAAWmC,GAAG,cAD9B,OAGoB,6BACpB,kBAACtC,EAAA,EAAD,CAAOkK,OAAK,GACR,kBAACjK,EAAA,EAAD,CAAOE,KAAK,WAAWmC,GAAG,aAD9B,MAGgB,gCAI5B,kBAAC+H,GAAA,EAAD,KAEI,kBAAC3J,EAAA,EAAD,CAAQqE,KAAK,KAAK3F,UAAU,qBAAqBuB,QAAS,kBAAI6I,IAA9D,SAAgG,6BAChG,kBAAC9I,EAAA,EAAD,CAAQqE,KAAK,KAAKpE,QAASf,EAAMiI,cAAjC,UAA8D,6BAC9D,kBAACnH,EAAA,EAAD,CAAQqE,KAAK,KAAK3F,UAAU,qBAAqBuB,QAASf,EAAMiI,cAAhE,gB,qqBChGzB,IAAMyC,GAAiBzL,IAAOC,IAAV,KAUfL,EAkBWA,EAIAD,ElBlCM,qBmBoJd+L,GA7IC,SAAC3K,GACb,IAAI4K,EAAY,EADO,EAGexJ,oBAAS,GAHxB,mBAGhB2C,EAHgB,KAGHC,EAHG,KAIjBC,EAAc,kBAAMD,GAAgBD,IAJnB,EAmCa3C,mBAAS,IAnCtB,mBAmChByJ,EAnCgB,KAmCJC,EAnCI,OAqCQ1J,mBAAS,IArCjB,mBAqChB2J,EArCgB,KAqCNC,EArCM,KAuCnBvI,EAAQH,aAAagC,QAAQ,SAkBjC,OAhBAC,qBAAU,WAGNtC,IAAMuC,SAASxC,QAAQyC,OAAS,CAAE,QAAU,GAAV,OAAchC,IAChDR,IAAMgJ,IAAN,UAAanM,GAAb,OnBhCoB,qBmBgCuBqD,MAAK,SAAAC,GAC5CP,QAAQC,IAAIM,GACO,MAAfA,EAAIC,QACJR,QAAQC,IAAI,WAAYM,GACxB0I,EAAc1I,EAAII,KAAKA,QAEvBX,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,cACzC,IAGC,6BACI,kBAAC8H,GAAD,KACI,kBAACQ,GAAA,EAAD,CAAO1L,UAAU,eACb,+BACI,4BACI,iCACA,oCACA,uCACA,wCACA,mCACA,wCACA,0CACA,qCAGA,wCACA,yCAGR,+BACKqL,EAAWM,KAAI,SAACnL,GACb,OACI,4BACI,wBAAIoL,MAAM,OAAOR,KACjB,4BAAI,yBAAKnL,IAAKC,KAAMC,IAAI,KAAKC,OAAO,KAAKC,MAAM,QAC/C,4BAAI,2BAAIG,EAAMqL,eACd,4BAAKrL,EAAMsL,UACX,4BAAKtL,EAAMuL,KACX,4BAAKvL,EAAM6H,UACX,4BAAK7H,EAAMwL,cACX,wBAAIhM,UAAU,eACV,kBAAC0G,EAAA,EAAD,CAAOP,MAAwB,SAAhB3F,EAAMyL,MAAmB,UAAY,WAC/CzL,EAAMyL,QAaf,4BAAKzL,EAAM0L,UACX,4BAAI,kBAAC5K,EAAA,EAAD,CAAQqE,KAAK,KAAK3F,UAAU,OAAOuB,QAAS,WAlG5D,IAAC2B,IAkG8E1C,EAAM0C,GAjGrGsB,GAAe,GACf/B,IAAMuC,SAASxC,QAAQyC,OAAS,CAAE,QAAU,GAAV,OAAchC,GAAS,GAAOC,GAChET,IAAMC,KAAN,UAAcpD,GAAd,OnBKkB,qBmBLuBmD,IAAMuC,SAASxC,QAAQyC,QAAQtC,MAAK,SAAAC,GACzEP,QAAQC,IAAIM,GACO,MAAfA,EAAIC,QACJR,QAAQC,IAAI,WAAYM,GACxB4I,EAAa5I,EAAII,KAAKA,QAEtBX,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,cAsFR,eAOxB,kBAACyD,EAAA,EAAD,CAAO7C,OAAQO,EAAakB,OAAQhB,GAChC,kBAAC0H,GAAA,EAAD,CACItG,MAAO,CAAEC,gBAAiB1G,IAE1B,4BAAQyG,MAAO,CAAEM,MAAO9G,IAAgBkM,EAAUM,eAEtD,kBAAC/E,EAAA,EAAD,CACIjB,MAAO,CAAEC,gBAAiBzG,IAE1B,wCAAiBkM,EAAUO,SAAS,6BACpC,mCAAYP,EAAUQ,IAAI,6BAC1B,yCAAkBR,EAAUlD,SAAS,6BACrC,4CAAqBkD,EAAUS,aAAa,6BAC5C,qCAAcT,EAAUU,MAAM,6BAC9B,wCAAiBV,EAAUW,SAAS,6BACpC,oDAA4B,6BAC5B,wCAAiBX,EAAUa,QAAQ,6BACnC,wDAAiCb,EAAUc,gBAAgB,6BAC3D,gDAAyBd,EAAUe,SAAS,8BAEhD,kBAACvF,EAAA,EAAD,CAAalB,MAAO,CAAEC,gBAAiBzG,IACnC,kBAACiC,EAAA,EAAD,CAAQuE,MAAO,CAAEC,gBAAiB1G,GAAcuG,KAAK,KAAKpE,QAAS,WA/GrE,IAAC2B,IA+GqFqI,EAAUrI,GA9G9GT,IAAMuC,SAASxC,QAAQyC,OAAS,CAAE,QAAU,GAAV,OAAchC,GAAS,QAAYC,GACrET,IAAMC,KAAN,UAAcpD,GAAd,OnBRc,wBmBQuBmD,IAAMuC,SAASxC,QAAQyC,QAAQtC,MAAK,SAAAC,GACrEP,QAAQC,IAAIM,GACO,MAAfA,EAAIC,QACJR,QAAQC,IAAI,WAAYM,GACxBO,MAAM,yBAENd,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,cAoGxB,SAAmH,IACnH,kBAAC9B,EAAA,EAAD,CAAQ6E,MAAM,YAAYR,KAAK,KAAKpE,QAASkD,GAA7C,eCpHT8H,GAlBS,WAAO,IAAD,EAEc3K,oBAAS,GAFvB,mBAEnB4K,EAFmB,KAELC,EAFK,KAGpBhE,EAAe,kBAAMgE,GAAiBD,IAE5C,OACI,6BACI,kBAAC,GAAD,CAAYjE,MAAM,mBAAmBE,aAAcA,IAEnD,kBAACtD,EAAA,EAAD,CAAUnB,OAAQwI,GACd,kBAAC,GAAD,CAAQ/D,aAAcA,KAG1B,kBAAC,GAAD,Q,wkCCjBL,IAAMiE,GAAejN,IAAOC,IAAR,KAUJN,ErBVK,gBqBoCLC,EACXD,EAwBWC,ErB7DK,gBqBmEFD,EACXC,EAIQD,GCgJRuN,GAjNC,WAAM,MAEc/K,mBAAS,IAFvB,mBAEXgL,EAFW,KAEDC,EAFC,OAGkBjL,mBAAS,IAH3B,mBAGXnD,EAHW,KAGCqO,EAHD,OAIkBlL,mBAAS,IAJ3B,mBAIXmL,EAJW,KAICC,EAJD,OAKQpL,mBAAS,IALjB,mBAKXqL,EALW,KAKJC,EALI,OAOUtL,mBAAS,IAPnB,mBAOXuL,EAPW,KAOHC,EAPG,OAQQxL,mBAAS,IARjB,mBAQXxD,EARW,KAQJiP,EARI,OASUzL,qBATV,mBASXiB,EATW,KASHyK,EATG,OAUY1L,mBAAS,IAVrB,mBAUX2L,EAVW,aAWQ3L,mBAAS,IAXjB,mBAWX4L,EAXW,KAWJC,EAXI,OAYU7L,mBAAS,GAZnB,mBAYX8L,EAZW,KAYHC,EAZG,OAcI/L,mBAAS,IAdb,mBAcXgM,EAdW,KAcNC,EAdM,OAeYjM,mBAAS,IAfrB,mBAeXkM,GAfW,KAeFC,GAfE,KAiBd9K,GAAQH,aAAagC,QAAQ,SAsCjC,OApCAC,qBAAU,WACNtC,IAAMuC,SAASxC,QAAQyC,OAAS,CAC5B,eAAgB,mBAChB,QAAU,GAAV,OAAchC,KAGlBR,IAAMC,KAAN,UAAcpD,GAAd,OAA0BC,GAAYkD,IAAMuC,SAASxC,QAAQyC,QAAQtC,MAAK,SAAAC,GACtEP,QAAQC,IAAIM,EAAIC,QACG,MAAfD,EAAIC,QACJgK,EAAY,GAAD,OAAIjK,EAAII,KAAKA,KAAKzE,WAAlB,YAAgCqE,EAAII,KAAKA,KAAKxE,YACzDsO,EAAclK,EAAII,KAAKA,KAAKS,QAC5BuJ,EAAcpK,EAAII,KAAKA,KAAK+J,YAC5BG,EAAStK,EAAII,KAAKA,KAAKgL,OACvBX,EAASzK,EAAII,KAAKA,KAAK5E,QAEvBiE,QAAQC,IAAI,OAAQM,EAAIC,WAE7BQ,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,YAExCX,IAAMC,KAAN,UAAcpD,GAAd,OtB/BiB,gCsB+BwBmD,IAAMuC,SAASxC,QAAQyC,QAAQtC,MAAK,SAAAC,GACzEP,QAAQC,IAAIM,EAAIC,QACG,MAAfD,EAAIC,QACJuK,EAAUxK,EAAII,KAAKA,KAAKiL,eACxBX,EAAU1K,EAAII,KAAKA,KAAKkL,eACxBT,EAAS7K,EAAII,KAAKA,KAAKmL,iBACvBR,EAAU/K,EAAII,KAAKA,KAAKoL,iBACxBP,EAAOjL,EAAII,KAAKA,KAAK4K,KACrBG,GAAWnL,EAAII,KAAKA,KAAK8K,WAGzBzL,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,cACzC,IAGC,kBAACsJ,GAAD,KACI,kBAAC,GAAD,CAAYnE,MAAM,YAClB,kBAAC5H,EAAA,EAAD,CAAMX,UAAU,gBACZ,kBAAC4J,GAAA,EAAD,CAAY5J,UAAU,uBAClB,qDAGJ,kBAACuJ,GAAA,EAAD,KACI,kBAACF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,6BACI,kBAAC,KAAD,CACIxI,KAAM8L,EACNzG,MAAO9G,EACP+G,QAAShH,EACT8G,OAAO,EACPP,KAAK,MAGLE,MAAO,CACHwI,WAAY,WAIxB,6BACI,kBAAC3C,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,iBACxB,+BACI,4BACI,oCACA,4BAAK4M,IAET,4BACI,8CACA,4BAAKnO,IAET,4BACI,0CACA,4BAAKsO,IAET,4BACI,4CACA,4BAAKE,QAMzB,kBAAC3D,GAAA,EAAD,KACI,6BACI,kBAACoC,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,iBACxB,+BACI,wBAAIkD,GAAG,aACH,4CACA,8BAEJ,4BACI,0CACA,mCAASiK,IAEb,4BACI,wCACA,4BAAK/O,OAKrB,6BACI,kBAACsN,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,iBACxB,+BACI,wBAAIkD,GAAG,aACH,8CACA,8BAEJ,4BACI,sCACA,4BAAKL,EAAO,SAAS,aAEzB,4BACI,uCACA,4BAAK0K,WAWrC,kBAAC5M,EAAA,EAAD,CAAMX,UAAU,gBACZ,kBAAC4J,GAAA,EAAD,CAAY5J,UAAU,uBAClB,wDAEJ,kBAACuJ,GAAA,EAAD,KACI,6BACI,kBAACmC,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,gBAAgBkD,GAAG,YAC3C,+BACI,wBAAIA,GAAG,aACH,gDACA,6BACA,6BACA,8BAGJ,4BACI,oCACA,4CAGJ,4BACI,oCACA,4BAAI,8BAAOsK,GAAX,OAGJ,4BACI,oCACA,4BAAI,8BAAOE,GAAX,UAKhB,6BACI,kBAAChC,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,gBAAgBkD,GAAG,YAC3C,+BACI,wBAAIA,GAAG,aACH,oCACA,6BACA,6BACA,6BACA,6BACA,6BACA,8BAGJ,4BACI,mCACA,4BAAK0K,IAET,4BACI,wCACA,4BAAKE,YCiK1BS,GAxWK,WAChB,IAAItL,EAAQH,aAAagC,QAAQ,SADX,EAGUlD,mBAAS,IAHnB,mBAGfgL,EAHe,KAGLC,EAHK,OAIUjL,mBAAS,IAJnB,mBAIfnD,EAJe,KAIH+P,EAJG,OAKc5M,mBAAS,IALvB,mBAKfmL,EALe,KAKHC,EALG,OAMIpL,mBAAS,IANb,mBAMfqL,EANe,KAMRC,EANQ,OAmCMtL,mBAAS,IAnCf,mBAmCfuL,EAnCe,KAmCPC,EAnCO,OAoCIxL,mBAAS,IApCb,mBAoCfxD,EApCe,KAoCRiP,EApCQ,OAqCMzL,oBAAS,GArCf,mBAqCfiB,EArCe,KAqCPyK,EArCO,OAsCQ1L,mBAAS,IAtCjB,mBAsCf2L,EAtCe,KAsCNkB,EAtCM,OAuCI7M,mBAAS,GAvCb,mBAuCf4L,EAvCe,KAuCRC,EAvCQ,OAwCM7L,mBAAS,GAxCf,mBAwCf8L,EAxCe,KAwCPC,GAxCO,QAyCA/L,mBAAS,IAzCT,qBAyCfgM,GAzCe,MAyCVC,GAzCU,SA0CQjM,mBAAS,IA1CjB,qBA0CfkM,GA1Ce,MA0CNC,GA1CM,SA2CenM,oBAAS,GA3CxB,qBA2Cf8M,GA3Ce,MA2CFC,GA3CE,MAqFtB,OAvCA5J,qBAAU,WAENtC,IAAMuC,SAASxC,QAAQyC,OAAS,CAAE,QAAU,GAAV,OAAchC,IAChDR,IAAMC,KAAN,UAAcpD,GAAd,OAA0BC,GAAYkD,IAAMuC,SAASxC,QAAQyC,QAAQtC,MAAK,SAAAC,GACtEP,QAAQC,IAAIM,GACO,MAAfA,EAAIC,QACJR,QAAQC,IAAI,WAAYM,GACxBiK,EAAY,GAAD,OAAIjK,EAAII,KAAKA,KAAKzE,WAAlB,YAAgCqE,EAAII,KAAKA,KAAKxE,YACzDgQ,EAAU5L,EAAII,KAAKA,KAAKS,QACxBuJ,EAAcpK,EAAII,KAAKA,KAAK+J,YAC5BG,EAAStK,EAAII,KAAKA,KAAKgL,OACvBX,EAASzK,EAAII,KAAKA,KAAK5E,SAEvBiE,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,YAGxCX,IAAMC,KAAN,UAAcpD,GAAd,OvBxDiB,gCuBwDwBmD,IAAMuC,SAASxC,QAAQyC,QAAQtC,MAAK,SAAAC,GACzEP,QAAQC,IAAIM,GACO,MAAfA,EAAIC,QACJR,QAAQC,IAAI,WAAYM,GACxBwK,EAAUxK,EAAII,KAAKA,KAAKiL,eACxBX,EAAU1K,EAAII,KAAKA,KAAKkL,eACxBT,EAAS7K,EAAII,KAAKA,KAAKmL,iBACvBR,GAAU/K,EAAII,KAAKA,KAAKoL,iBACxBP,GAAOjL,EAAII,KAAKA,KAAK4K,KACrBG,GAAWnL,EAAII,KAAKA,KAAK8K,WAEzBzL,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,cAIzC,IAGC,6BACI,kBAACsJ,GAAD,KACI,kBAAC,GAAD,CAAYnE,MAAM,iBAElB,kBAAC5H,EAAA,EAAD,CAAMX,UAAU,gBACZ,kBAAC4J,GAAA,EAAD,CAAY5J,UAAU,uBAClB,qDAEJ,kBAACuJ,GAAA,EAAD,KACI,kBAACF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,6BACI,kBAAC,KAAD,CACIxI,KAAM8L,EACNzG,MAAO9G,EACP+G,QAAShH,EACT8G,OAAO,EACPP,KAAK,MAGLE,MAAO,CACHwI,WAAY,WAIxB,6BACI,kBAAC3C,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,iBACxB,+BACI,4BACI,oCACA,4BAAK4M,IAET,4BACI,8CACA,4BAAKnO,IAET,4BACI,0CACA,4BAAKsO,IAET,4BACI,4CACA,4BAAKE,QAMzB,kBAAC3D,GAAA,EAAD,KACI,6BACI,kBAACoC,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,iBACxB,+BACI,wBAAIkD,GAAG,aACH,4CACA,8BAEJ,4BACI,0CACA,4BAAK,kBAACmG,GAAA,EAAD,YACG,kBAACxI,EAAA,EAAD,CAAOE,KAAK,OACZ2J,UAAU,KACV/E,KAAK,KACL3E,MAAOmM,EACPhM,SAAU,SAACwJ,GAAQyC,EAAUzC,EAAEzI,OAAOlB,QACtChB,UAAU,wBAMtB,4BACI,wCACA,4BACI,kBAACa,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KACLzC,GAAG,aACHlC,MAAO5C,EAEP+C,SAAU,SAACwJ,GAAQ0C,EAAS1C,EAAEzI,OAAOlB,QACrChB,UAAU,0BAsBlC,6BACI,kBAAC0L,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,iBACxB,+BACI,wBAAIkD,GAAG,aACH,8CACA,8BAEJ,4BACI,sCACA,4BACI,kBAAC6H,GAAA,EAAD,KACI,kBAACzJ,EAAA,EAAD,CAAQtB,UAAU,eAAe2F,KAAK,KAAKpE,QAAS,kBAAM+L,GAAU,IAAOtC,QAAmB,IAAXnI,GAAnF,UACA,kBAACvB,EAAA,EAAD,CAAQtB,UAAU,eAAe2F,KAAK,KAAKpE,QAAS,kBAAM+L,GAAU,IAAQtC,QAAmB,IAAXnI,GAApF,eAIZ,4BACI,uCACA,4BACI,kBAAChC,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KACLxE,SAAU,SAACwJ,GAAQ8D,EAAW9D,EAAEzI,OAAOlB,QACvCA,MAAOuM,EACPvN,UAAU,8BAalD,kBAACW,EAAA,EAAD,CAAMX,UAAU,gBACZ,kBAAC4J,GAAA,EAAD,CAAY5J,UAAU,uBAClB,wDAEJ,kBAACuJ,GAAA,EAAD,KACI,6BACI,kBAACmC,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,gBAAgBkD,GAAG,YAC3C,+BACI,wBAAIA,GAAG,aACH,gDACA,6BACA,8BAIJ,4BACI,oCACA,4CAGJ,4BACI,wCACA,4BACI,kBAACrC,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KACLxE,SAAU,SAACwJ,GAAQ8C,EAAS9C,EAAEzI,OAAOlB,QACrCA,MAAOwM,MAOnB,4BACI,wCACA,4BACI,kBAAC3M,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KACLxE,SAAU,SAACwJ,GAAQgD,GAAUhD,EAAEzI,OAAOlB,QACtCA,MAAO0M,SAQ/B,6BACI,kBAAChC,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,gBAAgBkD,GAAG,YAC3C,+BACI,wBAAIA,GAAG,aACH,oCACA,6BACA,6BACA,6BACA,6BACA,6BACA,8BAGJ,4BACI,mCACA,gCAAK,kBAACrC,EAAA,EAAD,CAAOE,KAAK,OACb4E,KAAK,KACL3F,UAAU,mBACVmB,SAAU,SAACwJ,GAAQkD,GAAOlD,EAAEzI,OAAOlB,QACnCA,MAAO4M,OAIf,4BACI,wCACA,gCAAK,kBAAC/M,EAAA,EAAD,CAAOE,KAAK,OACb4E,KAAK,KACLxE,SAAU,SAACwJ,GAAQoD,GAAWpD,EAAEzI,OAAOlB,QACvCA,MAAO8M,GACP9N,UAAU,2BAQlC,kBAACiL,GAAA,EAAD,KACI,kBAAC3J,EAAA,EAAD,CAAQqE,KAAK,KAAK3F,UAAU,YAAYuB,QA7SvC,WAEjBkB,IAAMuC,SAASxC,QAAQyC,OAAS,CAC5B,eAAgB,mBAChB,QAAU,GAAV,OAAchC,IAElB,IAAMD,EAAO,CACT8K,QAASA,GACTG,cAAed,EACfS,IAAKA,GACLO,gBAAiBX,EACjBY,gBAAiBV,EACjBQ,cAAerL,GAEnBJ,IAAMC,KAAN,UAAcpD,GAAd,OvBXiB,+BuBWwB0D,EAAMP,IAAMuC,SAASxC,QAAQyC,QAAQtC,MAAK,SAAAC,GAC/EP,QAAQC,IAAIM,EAAIC,QACG,MAAfD,EAAIC,QAEJR,QAAQC,IAAI,WAAYM,GACxB+L,IAAc,KAGdtM,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,cAoRxB,UAIR,kBAACyD,EAAA,EAAD,CAAO7C,OAAQ0K,IACX,kBAAC5H,EAAA,EAAD,CAAWnB,KAAK,MAAhB,sBAGA,kBAACoB,EAAA,EAAD,KACI,kBAACzF,EAAA,EAAD,CAAQuE,MAAO,CAAEC,gBAAiB1G,GAAcuG,KAAK,KAAK3F,UAAU,YAAYuB,QAAS,WAAQoN,IAAc,KAA/G,W,mVClUjB,IAAMC,GAAiBnP,IAAOC,IAAR,KAMjBN,GCTCyP,GAAa,CACtB,CACI/N,KAAK,kBACL4B,KAAK,MACLtE,MAAM,iBACN+O,OAAO,cAEX,CACIrM,KAAK,WACL4B,KAAK,WACLtE,MAAM,kBACN+O,OAAO,mBCmDA2B,GArDG,WACd,OACI,6BACI,kBAACF,GAAD,KACI,kBAAC,GAAD,CAAYrG,MAAM,eAClB,kBAACc,GAAA,EAAD,KACKwF,GAAalD,KAAI,SAACnL,GACf,OACI,kBAAC8I,GAAA,EAAD,CAAKyF,GAAG,KAAK/O,UAAU,YACnB,kBAACW,EAAA,EAAD,CAAMX,UAAU,kBACZ,kBAAC4J,GAAA,EAAD,KACI,gCACI,kBAAC,KAAD,CACI5J,UAAU,SACVc,KAAMN,EAAMM,KACZoF,OAAO,EACPP,KAAM,IACNQ,MAAO9G,EACP+G,QAAQ,UACV,6BACF,2BAAI5F,EAAMkC,QAGlB,kBAACuI,GAAA,EAAD,KACI,kBAACS,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,eACxB,+BACI,4BACI,qCACA,4BAAKQ,EAAMM,OAEf,4BACI,sCACA,4BAAKN,EAAMpC,QAEf,4BACI,uCACA,4BAAKoC,EAAM2M,qBCrBhD6B,GAhBF,WACX,IAAIvO,EAAQC,cAEZ,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuO,OAAK,EAACvN,KAAI,UAAKjB,EAAMiB,MAAQwN,UAAW9F,KAC/C,kBAAC,IAAD,CAAO6F,OAAK,EAACvN,KAAI,UAAKjB,EAAMiB,KAAX,qBAAoCwN,UAAW3C,KAChE,kBAAC,IAAD,CAAO0C,OAAK,EAACvN,KAAI,UAAKjB,EAAMiB,KAAX,YAA2BwN,UAAWvC,KACvD,kBAAC,IAAD,CAAOsC,OAAK,EAACvN,KAAI,UAAKjB,EAAMiB,KAAX,iBAAgCwN,UAAWX,KAC5D,kBAAC,IAAD,CAAOU,OAAK,EAACvN,KAAI,UAAKjB,EAAMiB,KAAX,eAA8BwN,UAAWJ,Q,yJChB3D,IAAMK,GAAqB1P,IAAOC,IAAV,MC+Bd0P,GA1BG,WAAO,IAAD,EACQxN,oBAAS,GADjB,mBACjByN,EADiB,KACPC,EADO,KAMxB,OAAID,EACK,kBAAC,IAAD,CAAU5N,GAAG,sBAGlB,6BACE,kBAAC0N,GAAD,KACE,yBAAKnP,UAAU,iBACb,6BACE,kBAAC,GAAD,OAEF,6BACE,kBAAC,GAAD,CAAQgH,OAfL,WACblE,aAAayM,WAAW,SACxBD,GAAY,MAcF,kBAAC,GAAD,WCdCE,OANf,SAAmBhP,GACf,IAAMiP,EAASjP,EAAMiP,OACjBxM,EAAQH,aAAagC,QAAQ,SACjC,OAAO,6BAAM7B,EAAQ,kBAAC,IAAD,CAAUxB,GAAI,iCAAoC,kBAACgO,EAAD,QCG5DC,OANf,SAAyBlP,GACrB,IAAMiP,EAASjP,EAAMiP,OACjBxM,EAAQH,aAAagC,QAAQ,SACjC,OAAO,6BAAM7B,EAAQ,kBAACwM,EAAD,MAAY,kBAAC,IAAD,CAAUhO,GAAI,wB,kDCoCpCkO,G,sLAtCP,OACI,yBAAK3P,UAAU,OACX,6BACA,sCAEI,2BACIc,KAAK,QACLC,KAAK,OAELG,YAAY,UAGhB,4CAEJ,6BACA,0CAEI,2BACIJ,KAAK,MACLC,KAAK,OACL2J,UAAU,KAEVxJ,YAAY,sBAGhB,2CAEJ,6BACA,6BACI,kBAAC,IAAD,CAAMO,GAAG,qBAAT,e,GAhCSmO,a,ygBCAtB,IAAMjQ,GAAgBF,IAAOC,IAAV,KAEHN,EAsBbA,EAKAC,EACWD,GCoIN2E,GArJA,SAACvD,GAAW,IAAD,EACIoB,oBAAS,GADb,mBACjBoC,EADiB,KACTC,EADS,OAEcrC,oBAAS,GAFvB,mBAEjBsC,EAFiB,KAEJC,EAFI,KAGlBC,EAAS,kBAAMD,GAAgBD,IAHb,EAMctC,oBAAS,GANvB,mBAMjByC,EANiB,KAMJC,EANI,OASc1C,oBAAS,GATvB,mBASjB2C,EATiB,KASJC,EATI,KAUlBC,EAAc,kBAAMD,GAAgBD,IAVlB,EAYgB3C,oBAAS,GAZzB,mBAYjB8C,EAZiB,KAYHC,EAZG,OAeQ/C,mBAAS,IAfjB,mBAejBrD,EAfiB,KAeNqG,EAfM,QAgBMhD,mBAAS,IAhBf,qBAgBjBpD,GAhBiB,MAgBPqG,GAhBO,MAkBpB5B,GAAMH,aAAagC,QAAQ,SAqB/B,OAlBAC,qBAAU,WAERtC,IAAMuC,SAASxC,QAAQyC,OAAS,CAAE,QAAU,GAAV,OAAchC,KAChDR,IAAMC,KAAN,UAAcpD,GAAd,OAA0BC,GAAYkD,IAAMuC,SAASxC,QAAQyC,QAAQtC,MAAK,SAAAC,GACtEP,QAAQC,IAAIM,GACO,MAAfA,EAAIC,QACJR,QAAQC,IAAI,WAAYM,GACxBgC,EAAahC,EAAII,KAAKA,KAAKzE,YAC3BsG,GAAYjC,EAAII,KAAKA,KAAKxE,aAE1B6D,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,cAEzC,CAAC7E,EAAWC,KAIX,6BACE,kBAAC,GAAD,KAGE,kBAACqB,EAAA,EAAD,CAAQC,OAAK,EAACC,OAAO,KAAKC,UAAU,oBAClC,kBAACM,EAAA,EAAD,KAAa,yBAAKN,UAAU,gBAAe,mCAA9B,sBACb,kBAACkF,EAAA,EAAD,CAAe3D,QA1CR,kBAAM0C,GAAWD,MA2CxB,kBAACmB,EAAA,EAAD,CAAUnB,OAAQA,EAAQoB,QAAM,GAC9B,kBAACC,EAAA,EAAD,CAAKrF,UAAU,UAAUoF,QAAM,GAE7B,6BACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,iBACjB,kBAACwF,EAAA,EAAD,CAAUxB,OAAQU,EAAce,OAxC3B,kBAAMd,GAAgB,SAAAe,GAAS,OAAKA,MAwCeC,KAAK,MAC3D,kBAACC,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB1G,EACjB2G,OAAQ3G,EACR4G,QAAS,KACRC,OAAK,GACR,kBAAC,KAAD,CACEnF,KAAI,UAAKvC,EAAL,YAAmBC,IACvB0H,OAAO,EACPP,KAAM,GACNQ,MAAO9G,EACP+G,QAAQ,UACP,KACH,2CAAiB7H,IAGnB,kBAAC8H,EAAA,EAAD,CAAcrG,UAAU,kBACtB,kBAAC,IAAD,CAAMyB,GAAG,qBACPoE,MAAO,CAAES,eAAgB,SAEzB,kBAACC,EAAA,EAAD,CAAcvG,UAAU,iBAAxB,yBAQZ,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,gBAAgBuB,QAAS6C,GAC1C,kBAAC,KAAD,CAAiBlB,GAAG,eAAesD,KAAMC,OACzC,6BAAK,kBAACC,EAAA,EAAD,CAAOC,MAAI,EAACR,MAAM,UAAlB,QAIT,kBAACb,EAAA,EAAD,CAAStF,UAAU,QACjB,kBAACuF,EAAA,EAAD,CAASvF,UAAU,gBAAgBuB,QAASkD,GAC1C,kBAAC,KAAD,CAAiBvB,GAAG,gBAAgBsD,KAAMI,YAYpD,kBAACC,EAAA,EAAD,CAAO7C,OAAQO,EAAakB,OAAQhB,GAClC,kBAACqC,EAAA,EAAD,CAAWjB,MAAO,CAAEC,gBAAiBzG,IAArC,0BAGA,kBAAC0H,EAAA,EAAD,CAAalB,MAAO,CAAEC,gBAAiBzG,IACrC,kBAACiC,EAAA,EAAD,CAAQuE,MAAO,CAAEC,gBAAiB1G,GAAcuG,KAAK,KAAKpE,QAASf,EAAMwG,QAAzE,OAA8F,IAC9F,kBAAC1F,EAAA,EAAD,CAAQ6E,MAAM,YAAYR,KAAK,KAAKpE,QAASkD,GAA7C,QAMJ,kBAACwC,EAAA,EAAD,CAASC,UAAU,SAASlD,OAAQK,EAAanC,OAAO,gBAAgBuD,OA5GxD,kBAAMnB,GAAgBD,KA4GtC,UAMA,kBAAC8C,EAAA,EAAD,CACED,UAAU,SACVlD,OAAQE,EACRhC,OAAO,eACPkF,OAAQhD,EACRiD,QAAQ,SAKR,kBAACC,GAAA,EAAD,KACE,yBAAKtH,UAAU,iBACb,gDAEF,yBAAKA,UAAU,iBACb,gDAEF,yBAAKA,UAAU,iBACb,qD,4nCCxJP,IAAMuH,GAAe9H,IAAOC,IAAR,KAEHL,EAsBAD,EnCxBI,gBmCgDNC,EAMZD,EACYA,GCEPoI,GAnDC,WACd,IAAI/G,EAAMC,cACV,OACE,6BACE,kBAAC,GAAD,KACE,yBAAKV,UAAU,oBACb,yBAAKA,UAAU,kBACb,kBAACH,EAAA,EAAD,CAAQG,UAAU,sBAChB,yBAAKC,IAAKC,IAAMC,IAAI,UAAUC,OAAO,KAAKC,MAAM,QAElD,yBAAKL,UAAU,cACb,kBAACqF,EAAA,EAAD,CAAKoC,UAAQ,EAACzH,UAAU,sBACtB,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,sBACjB,kBAAC,KAAD,CAAiBwG,KAAMkB,KAAQ1H,UAAU,SAD3C,SAKF,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,gBAAgB2H,IAAKC,IAAMnG,GAAE,UAAKhB,EAAMoH,MACzD,kBAAC,KAAD,CAAiBrB,KAAMsB,KAAY9H,UAAU,SAD/C,cAKF,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,gBAAgB2H,IAAKC,IAAMnG,GAAE,UAAKhB,EAAMoH,IAAX,sBAC9C,kBAAC,KAAD,CAAiBrB,KAAMuB,KAAW/H,UAAU,SAD9C,qBAKF,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,gBAAgB2H,IAAKC,IAAMnG,GAAE,UAAKhB,EAAMoH,IAAX,eAC9C,kBAAC,KAAD,CAAiBrB,KAAMqJ,KAAa7P,UAAU,SADhD,cAKF,kBAACsF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASvF,UAAU,gBAAgB2H,IAAKC,IAAMnG,GAAE,UAAKhB,EAAMoH,IAAX,iBAC9C,kBAAC,KAAD,CAAiBrB,KAAMsJ,KAAY9P,UAAU,SAD/C,uB,ofC1CX,IAAMkI,GAAmBzI,IAAOC,IAAV,KAENL,ErCHK,gBqC2BhBD,G,k5BC3BL,IAAM+I,GAAoB1I,IAAOC,IAAV,KAEPL,EtCFK,gBsCehBD,EtCjBiB,oBsCkCNA,EAEHA,EAYVA,EtChDmB,qBuCsDdgJ,GAhDI,SAAA5H,GACf,IAAM6H,EAAWC,cAEjB,OACI,6BACI,kBAAC,GAAD,KACI,kBAACzI,EAAA,EAAD,CAAQG,UAAU,oBAAoBF,OAAK,EAACC,OAAO,MAC/C,kBAACO,EAAA,EAAD,CAAaN,UAAU,kBAClBQ,EAAM+H,OAEY,wCAAtBF,EAASG,SACN,kBAACnD,EAAA,EAAD,CAAKrF,UAAU,uBAAuBoF,QAAM,GACxC,kBAACE,EAAA,EAAD,CAAS/D,QAASf,EAAMiI,cACpB,kBAAC,KAAD,CAAiBjC,KAAMkC,KAAU1I,UAAU,SAD/C,WAKJ,8BAEmB,+BAAtBqI,EAASG,SACN,kBAACnD,EAAA,EAAD,CAAKrF,UAAU,uBAAuBoF,QAAM,GACxC,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASrC,GAAG,eAAeyE,IAAKC,IAAMnG,GAAG,mCACrC,kBAAC,KAAD,CAAiB+E,KAAMmC,KAAQ3I,UAAU,SAD7C,kBAMR,8BAEmB,mCAAtBqI,EAASG,SACN,kBAACnD,EAAA,EAAD,CAAKrF,UAAU,uBAAuBoF,QAAM,GACxC,kBAACE,EAAA,EAAD,CAAS/D,QAASf,EAAMiI,cACpB,yBAAKzI,UAAU,oBACX,kBAACa,EAAA,EAAD,CAAO8E,KAAK,KAAKzE,YAAY,SAASJ,KAAK,WAC3C,kBAACQ,EAAA,EAAD,CAAQqE,KAAK,MAAK,kBAAC,KAAD,CAAiBa,KAAMuJ,KAAU/P,UAAU,aAKzE,kCCtClB4I,GAAM,CACVC,OAAQ,CAAC,WAAY,KAAM,KAAM,aAAc,QAAS,aAAc,cACtEC,SAAU,CACR,CACEC,MAAO,kBACPjD,gBAAiB,oBACjBkD,YAAa5J,EACb6J,YAAa,EACbC,qBAAsB9J,EACtB+J,cAAe,GAIfnG,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAoHtBoG,GA/GG,WAChB,OACE,6BACE,kBAAC,GAAD,KACE,yBAAKpJ,UAAU,oBACb,kBAAC,GAAD,CAAYuI,MAAM,cAElB,kBAACc,GAAA,EAAD,CAAKrJ,UAAU,YACb,kBAACsJ,GAAA,EAAD,KACE,kBAAC3I,EAAA,EAAD,CAAMX,UAAU,kBACd,kBAACuJ,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,KACE,yBAAKrJ,UAAU,2BACb,kBAAC,KAAD,CAAiBwG,KAAMgD,KAAW7D,KAAK,QAEzC,yBAAK3F,UAAU,wBAAf,cAEE,6BACA,wCAOV,kBAACsJ,GAAA,EAAD,KACE,kBAAC3I,EAAA,EAAD,CAAMX,UAAU,kBACd,kBAACuJ,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,KACE,yBAAKrJ,UAAU,2BACb,kBAAC,KAAD,CAAiBwG,KAAMiD,KAAS9D,KAAK,QAEvC,yBAAK3F,UAAU,yBAAf,iBAEE,6BACA,wCAOV,kBAACsJ,GAAA,EAAD,KACE,kBAAC3I,EAAA,EAAD,CAAMX,UAAU,kBACd,kBAACuJ,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,KACE,yBAAKrJ,UAAU,2BACb,kBAAC,KAAD,CAAiBwG,KAAMkD,KAAa/D,KAAK,QAE3C,yBAAK3F,UAAU,wBAAf,iBAEE,6BACA,wCAOV,kBAACsJ,GAAA,EAAD,KACE,kBAAC3I,EAAA,EAAD,CAAMX,UAAU,kBACd,kBAACuJ,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,KACE,yBAAKrJ,UAAU,2BACb,kBAAC,KAAD,CAAiBwG,KAAMmD,KAAahE,KAAK,QAE3C,yBAAK3F,UAAU,yBAAf,kBAEE,6BACA,sCAHF,YAUR,kBAACsJ,GAAA,EAAD,KACE,kBAAC3I,EAAA,EAAD,CAAMX,UAAU,kBACd,kBAACuJ,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,KACE,yBAAKrJ,UAAU,2BACb,kBAAC,KAAD,CAAiBwG,KAAMuB,KAAWpC,KAAK,QAEzC,yBAAK3F,UAAU,yBAAf,gBAEE,6BACA,yCAQZ,kBAACW,EAAA,EAAD,CAAMX,UAAU,YACd,kBAAC4J,GAAA,EAAD,yBAGA,kBAACL,GAAA,EAAD,KACE,6BACE,kBAAC,OAAD,CAAKvG,KAAM4F,GAAKvI,MAAO,IAAKD,OAAQ,Y,4YC5H7C,IAAMyJ,GAAgBpK,IAAOC,IAAV,KAaHN,GCgFR0K,GA5FA,SAACtJ,GACZ,OACI,6BACI,kBAAC,GAAD,KACI,6BACI,kBAACG,EAAA,EAAD,KACI,kBAAC0I,GAAA,EAAD,CAAKrJ,UAAU,cACX,kBAACsJ,GAAA,EAAD,CAAKtJ,UAAU,aAAa2F,KAAK,MAC7B,kBAAC0E,GAAA,EAAD,KACI,kBAACzJ,EAAA,EAAD,KAAO,oCACP,kBAAC0J,GAAA,EAAD,CAAYtK,UAAU,cAAc2F,KAAK,MACrC,kBAAC4E,GAAA,EAAD,CAAiBvK,UAAU,cAAcwK,UAAU,WAC/C,kBAACC,GAAA,EAAD,cAEJ,kBAAC5J,EAAA,EAAD,CAAO6J,UAAU,OAErB,kBAACJ,GAAA,EAAD,CAAYtK,UAAU,cAAc2F,KAAK,MACrC,kBAAC4E,GAAA,EAAD,CAAiBvK,UAAU,cAAcwK,UAAU,WAC/C,kBAACC,GAAA,EAAD,cAEJ,kBAAC5J,EAAA,EAAD,CAAO6J,UAAU,SAK7B,kBAACpB,GAAA,EAAD,CAAKtJ,UAAU,cACX,kBAACqK,GAAA,EAAD,KACI,kBAACzJ,EAAA,EAAD,KAAO,yCACP,kBAACC,EAAA,EAAD,CAAOE,KAAK,SAAS6J,UAAQ,EAACjF,KAAK,MAC/B,qCACA,qCACA,qCACA,qCACA,qCACA,wCAKZ,kBAAC2D,GAAA,EAAD,CAAKtJ,UAAU,cACX,kBAACqK,GAAA,EAAD,CAAW1E,KAAK,MACZ,kBAAC/E,EAAA,EAAD,CAAOiK,IAAI,aAAY,2CACvB,kBAACR,GAAA,EAAD,CAAWS,OAAK,GACZ,kBAAClK,EAAA,EAAD,CAAOkK,OAAK,GACR,kBAACjK,EAAA,EAAD,CAAOE,KAAK,WAAWmC,GAAG,cAD9B,QAGoB,6BACpB,kBAACtC,EAAA,EAAD,CAAOkK,OAAK,GACR,kBAACjK,EAAA,EAAD,CAAOE,KAAK,WAAWmC,GAAG,cAD9B,UAGoB,6BACpB,kBAACtC,EAAA,EAAD,CAAOkK,OAAK,GACR,kBAACjK,EAAA,EAAD,CAAOE,KAAK,WAAWmC,GAAG,cAD9B,YAQZ,kBAACoG,GAAA,EAAD,CAAKtJ,UAAU,cACX,kBAACqK,GAAA,EAAD,CAAW1E,KAAK,MACZ,kBAAC/E,EAAA,EAAD,CAAOiK,IAAI,aAAY,sCACvB,kBAACR,GAAA,EAAD,CAAWS,OAAK,GACZ,kBAAClK,EAAA,EAAD,CAAOkK,OAAK,GACR,kBAACjK,EAAA,EAAD,CAAOE,KAAK,WAAWmC,GAAG,cAD9B,aAGoB,6BACpB,kBAACtC,EAAA,EAAD,CAAOkK,OAAK,GACR,kBAACjK,EAAA,EAAD,CAAOE,KAAK,WAAWmC,GAAG,cAD9B,cAGgB,gCAK5B,kBAAC+H,GAAA,EAAD,KAEI,kBAAC3J,EAAA,EAAD,CAAQqE,KAAK,KAAK3F,UAAU,qBAAqBuB,QAASf,EAAMiI,cAAhE,SAA4F,6BAC5F,kBAACnH,EAAA,EAAD,CAAQqE,KAAK,KAAKpE,QAASf,EAAMiI,cAAjC,UAA8D,6BAC9D,kBAACnH,EAAA,EAAD,CAAQqE,KAAK,KAAK3F,UAAU,qBAAqBuB,QAASf,EAAMiI,cAAhE,gB,6nBChFzB,IAAMyC,GAAiBzL,IAAOC,IAAV,KAUfL,EAkBWA,EAIAD,E3ClCM,qB4CsId+L,GA9HC,SAAC3K,GACb,IAAI4K,EAAY,EADO,EAEexJ,oBAAS,GAFxB,mBAEhB2C,EAFgB,KAEHC,EAFG,KAGjBC,EAAc,kBAAMD,GAAgBD,IAHnB,EAmBa3C,mBAAS,IAnBtB,mBAmBhByJ,EAnBgB,KAmBJC,EAnBI,OAqBQ1J,mBAAS,IArBjB,mBAqBhB2J,EArBgB,KAqBNC,EArBM,KAuBnBvI,EAAQH,aAAagC,QAAQ,SAiBjC,OAhBAC,qBAAU,WAGNtC,IAAMuC,SAASxC,QAAQyC,OAAS,CAAE,QAAU,GAAV,OAAchC,IAChDR,IAAMgJ,IAAN,UAAanM,GAAb,O5ChBoB,qB4CgBuBqD,MAAK,SAAAC,GAC5CP,QAAQC,IAAIM,GACO,MAAfA,EAAIC,QACJR,QAAQC,IAAI,WAAYM,GACxB0I,EAAc1I,EAAII,KAAKA,QAEvBX,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,cACzC,IAGC,6BACI,kBAAC,GAAD,KACI,kBAACsI,GAAA,EAAD,CAAO1L,UAAU,eACb,+BACI,4BACI,iCACA,oCACA,uCACA,wCACA,mCACA,wCACA,0CACA,qCACA,wCACA,uCACA,4CACA,4CACA,yCAGR,+BACKqL,EAAWM,KAAI,SAACnL,GACb,OACI,4BACI,wBAAIoL,MAAM,OAAOR,KACjB,4BAAI,yBAAKnL,IAAKC,KAAMC,IAAI,KAAKC,OAAO,KAAKC,MAAM,QAC/C,4BAAI,2BAAIG,EAAMqL,eACd,4BAAKrL,EAAMsL,UACX,4BAAKtL,EAAMuL,KACX,4BAAKvL,EAAM6H,UACX,4BAAK7H,EAAMwL,cACX,wBAAIhM,UAAU,eACV,kBAAC0G,EAAA,EAAD,CAAOP,MAAwB,SAAhB3F,EAAMyL,MAAmB,UAAY,WAC/CzL,EAAMyL,QASf,4BAAKzL,EAAM0L,UACX,4BAAI,kBAAC5K,EAAA,EAAD,CAAQqE,KAAK,KAAK3F,UAAU,OAAOuB,QAAS,WA/E5D,IAAC2B,IA+E8E1C,EAAM0C,GA9ErGsB,GAAe,GACf/B,IAAMuC,SAASxC,QAAQyC,OAAS,CAAE,QAAU,GAAV,OAAchC,GAAS,GAAOC,GAChET,IAAMC,KAAN,UAAcpD,GAAd,O5CKkB,qB4CLuBmD,IAAMuC,SAASxC,QAAQyC,QAAQtC,MAAK,SAAAC,GACzEP,QAAQC,IAAIM,GACO,MAAfA,EAAIC,QACJR,QAAQC,IAAI,WAAYM,GACxB4I,EAAa5I,EAAII,KAAKA,QAEtBX,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,cAmER,SACJ,iCACA,4BAAI,kBAAC9B,EAAA,EAAD,CAAQqE,KAAK,KAAK3F,UAAU,QAA5B,SACJ,4BAAI,kBAAC+K,GAAA,EAAD,KACA,kBAACzJ,EAAA,EAAD,CAAQqE,KAAK,KAAK3F,UAAU,QAAQ,kBAAC,KAAD,CAAiBwG,KAAMmC,QAC3D,kBAACrH,EAAA,EAAD,CAAQqE,KAAK,KAAKQ,MAAM,UAAS,kBAAC,KAAD,CAAiBK,KAAMwJ,gBAQhF,kBAACnJ,EAAA,EAAD,CAAO7C,OAAQO,EAAakB,OAAQhB,GAChC,kBAAC0H,GAAA,EAAD,CACItG,MAAO,CAAEC,gBAAiB1G,IAE1B,4BAAQyG,MAAO,CAAEM,MAAO9G,IAAgBkM,EAAUM,eAEtD,kBAAC/E,EAAA,EAAD,CACIjB,MAAO,CAAEC,gBAAiBzG,IAE1B,wCAAiBkM,EAAUO,SAAS,6BACpC,mCAAYP,EAAUQ,IAAI,6BAC1B,yCAAkBR,EAAUlD,SAAS,6BACrC,4CAAqBkD,EAAUS,aAAa,6BAC5C,qCAAcT,EAAUU,MAAM,6BAC9B,wCAAiBV,EAAUW,SAAS,6BACpC,oDAA4B,6BAC5B,wCAAiBX,EAAUa,QAAQ,6BACnC,wDAAiCb,EAAUc,gBAAgB,6BAC3D,gDAAyBd,EAAUe,SAAS,8BAEhD,kBAACvF,EAAA,EAAD,CAAalB,MAAO,CAAEC,gBAAiBzG,IACnC,kBAACiC,EAAA,EAAD,CAAQuE,MAAO,CAAEC,gBAAiB1G,GAAcuG,KAAK,KAAKpE,QAASkD,GAAnE,eCtGT8H,GAlBS,WAAO,IAAD,EAEc3K,oBAAS,GAFvB,mBAEnB4K,EAFmB,KAELC,EAFK,KAGpBhE,EAAe,kBAAMgE,GAAiBD,IAE5C,OACI,6BACI,kBAAC,GAAD,CAAYjE,MAAM,mBAAmBE,aAAcA,IAEnD,kBAACtD,EAAA,EAAD,CAAUnB,OAAQwI,GACd,kBAAC,GAAD,CAAQ/D,aAAcA,KAG1B,kBAAC,GAAD,Q,i2BCjBL,IAAMiE,GAAejN,IAAOC,IAAR,KAUJN,E9CVK,gB8CoCLC,EACXD,GCuCGuN,GAxEC,WACZ,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAYpE,MAAM,YAClB,kBAAC5H,EAAA,EAAD,CAAMX,UAAU,gBACZ,kBAAC4J,GAAA,EAAD,CAAY5J,UAAU,uBAClB,qDAEJ,kBAACuJ,GAAA,EAAD,KACI,kBAACF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,6BACI,kBAAC,KAAD,CACIjJ,MAAO,IACPD,OAAQ,IAGRyF,MAAO,CACHwI,WAAY,WAIxB,6BACI,kBAAC3C,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,iBACxB,+BACI,4BACI,oCACA,oCAEJ,4BACI,wCACA,0CAEJ,4BACI,uCACA,yCAOpB,kBAACsJ,GAAA,EAAD,KACI,6BACI,kBAACoC,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,iBACxB,+BACI,wBAAIkD,GAAG,aACH,4CACA,8BAEJ,4BACI,0CACA,+CAEJ,4BACI,wCACA,qDAEJ,4BACI,uCACA,qEC6E7BqL,GA3IK,WAqBhB,OACI,6BACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAYhG,MAAM,iBAElB,kBAAC5H,EAAA,EAAD,CAAMX,UAAU,gBACZ,kBAAC4J,GAAA,EAAD,CAAY5J,UAAU,uBAClB,qDAEJ,kBAACuJ,GAAA,EAAD,KACI,kBAACF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,6BACI,kBAAC,KAAD,CACIjJ,MAAO,IACPD,OAAQ,IAGRyF,MAAO,CACHwI,WAAY,WAIxB,6BACI,kBAAC3C,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,iBACxB,+BACI,4BACI,oCACA,oCAGJ,4BACI,uCACA,yCAMpB,kBAACsJ,GAAA,EAAD,KACI,6BACI,kBAACoC,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,iBACxB,+BACI,wBAAIkD,GAAG,aACH,4CACA,8BAEJ,4BACI,0CACA,4BAAK,kBAACmG,GAAA,EAAD,YACG,kBAACxI,EAAA,EAAD,CAAOE,KAAK,OACZ2J,UAAU,KACV/E,KAAK,KACL3F,UAAU,wBAKtB,4BACI,wCACA,4BACI,kBAACa,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KACLzC,GAAG,aACHlD,UAAU,uBAItB,4BACI,uCACA,4BACI,kBAACa,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KACLzC,GAAG,aACHlD,UAAU,qBAEd,kBAACa,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KACLzC,GAAG,aACHlD,UAAU,0BAOlC,6BACI,kBAAC0L,GAAA,EAAD,CAAO4C,YAAU,EAACtO,UAAU,iBACxB,+BACI,wBAAIkD,GAAG,aACH,8CACA,8BAEJ,4BACI,sCACA,uCAEJ,4BACI,uCACA,gDAS5B,kBAAC+H,GAAA,EAAD,KACI,kBAAC3J,EAAA,EAAD,CAAQqE,KAAK,MAAb,QAAgC,IAChC,kBAACrE,EAAA,EAAD,CAAQqE,KAAK,MAAb,e,g2CCrIjB,IAAMsK,GAAkBxQ,IAAOC,IAAV,KAKFN,EAYHA,EjDjBK,gBiDoELC,EjDpEK,gBiD2ELD,EAEXC,EAMAD,EAKWA,EACXC,GC2QG6Q,GAhWE,WAEb,IAAIjN,EAAQH,aAAagC,QAAQ,SAFd,EA6BalD,mBAAS,IA7BtB,mBA6BZyG,EA7BY,KA6BF8H,EA7BE,OA8BqBvO,mBAAS,IA9B9B,mBA8BZoK,EA9BY,KA8BEoE,EA9BF,OAgCoBxO,mBAAS,IAhC7B,mBAgCZiK,EAhCY,KAgCEwE,EAhCF,OAiCazO,mBAAS,IAjCtB,mBAiCZkK,EAjCY,KAiCFwE,EAjCE,OAkCG1O,qBAlCH,mBAkCZmK,EAlCY,KAkCPwE,EAlCO,OAoCO3O,mBAAS,IApChB,mBAoCZ4O,EApCY,KAoCLC,EApCK,OAsCmB7O,mBAAS,IAtC5B,mBAsCZ8O,EAtCY,KAsCCC,EAtCD,OAwCc/O,qBAxCd,mBAwCZgP,EAxCY,KAwCDC,EAxCC,OAyCUjP,qBAzCV,mBAyCZwK,EAzCY,KAyCH0E,EAzCG,OA0CkBlP,qBA1ClB,mBA0CZmP,EA1CY,KA0CCC,EA1CD,OA2CapP,mBAAS,IA3CtB,mBA2CZsK,EA3CY,KA2CF+E,EA3CE,KA+EnB,OACI,6BACI,kBAAChB,GAAD,KACI,yBAAKjQ,UAAU,oBACX,kBAAC,GAAD,CAAYuI,MAAM,cAElB,kBAAC5H,EAAA,EAAD,CAAMX,UAAU,iBACZ,kBAAC4J,GAAA,EAAD,CAAY5J,UAAU,wBAClB,8CAEJ,kBAACuJ,GAAA,EAAD,KACI,6BACI,kBAACmC,GAAA,EAAD,CAAOwF,UAAQ,EAAClR,UAAU,kBACtB,+BACI,4BACI,4CACA,4BACI,kBAACa,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KAELxE,SAAU,SAACwJ,GAAQ0F,EAAe1F,EAAEzI,OAAOlB,QAC3CA,MAAO6K,EACP7L,UAAU,uBAgBtB,4BACI,wCACA,4BACI,kBAACa,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KAEL3E,MAAO8K,EACP3K,SAAU,SAACwJ,GAAQ2F,EAAY3F,EAAEzI,OAAOlB,QACxChB,UAAU,uBAItB,4BACI,mCAAQ,4CACR,4BAEI,kBAACa,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KACLzC,GAAG,eACHwH,UAAU,IACVxJ,YAAY,YACZlB,UAAU,mBACVgB,MAAO+K,EACP5K,SAAU,SAACwJ,GAAQ4F,EAAO5F,EAAEzI,OAAOlB,YAK/C,4BACI,wCACA,4BACI,yBAAKkC,GAAG,YACJ,kBAACrC,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KACLzC,GAAG,iBACHhC,YAAY,iBACZlB,UAAU,mBACVmB,SAAU,SAACwJ,GAAQwF,EAAYxF,EAAEzI,OAAOlB,aAmBxD,4BACI,4CACA,4BACI,yBAAKkC,GAAG,cACJ,kBAACrC,EAAA,EAAD,CACIE,KAAK,OACL4E,KAAK,KACLzC,GAAG,iBACHhC,YAAY,cACZlB,UAAU,mBACVgB,MAAOgL,EACP7K,SAAU,SAACwJ,GAAQyF,EAAgBzF,EAAEzI,OAAOlB,aAO5D,4BACI,qCACA,4BACI,kBAACH,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KAEL3F,UAAU,mBACVgB,MAAOwP,EACPrP,SAAU,SAACwJ,GAAQ8F,EAAS9F,EAAEzI,OAAOlB,YAiCjD,4BACI,2CACA,4BACI,kBAACH,EAAA,EAAD,CAAOE,KAAK,WACR4E,KAAK,KAGL3E,MAAO0P,EACPvP,SAAU,SAACwJ,GAAQgG,EAAehG,EAAEzI,OAAOlB,YAKvD,4BACI,oDACA,4BACI,kBAAC0K,GAAA,EAAD,CAAOwF,UAAQ,EAAClR,UAAU,eACtB,+BACI,4BACI,wCACA,iDAEJ,4BACI,mDACA,4BACI,kBAACa,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KACLzE,YAAY,UACZwJ,UAAU,IACV1J,MAAO4P,EACPzP,SAAU,SAACwJ,GAAQkG,EAAYlG,EAAEzI,OAAOlB,QACxChB,UAAU,uBActB,4BACI,mCACA,4BAAI,kBAACa,EAAA,EAAD,CAAOE,KAAK,OACZ4E,KAAK,KACL+E,UAAU,IACVxJ,YAAY,YACZlB,UAAU,mBACVgB,MAAOoL,EACPjL,SAAU,SAACwJ,GAAQmG,EAAUnG,EAAEzI,OAAOlB,YAG9C,4BACI,wCACA,4BAAI,kBAACH,EAAA,EAAD,CAAOE,KAAK,OACZ4E,KAAK,KACL+E,UAAU,IACVxJ,YAAY,QACZlB,UAAU,mBACVgB,MAAO+P,EACP5P,SAAU,SAACwJ,GAAQqG,EAAcrG,EAAEzI,OAAOlB,gBA4BlE,4BACI,yDACA,4BACI,kBAACH,EAAA,EAAD,CAAOE,KAAK,OACR4E,KAAK,KAEL3F,UAAU,mBACVgB,MAAOkL,EACP/K,SAAU,SAACwJ,GAAQsG,EAAYtG,EAAEzI,OAAOlB,gBASpE,kBAACiK,GAAA,EAAD,KACI,kBAAC3J,EAAA,EAAD,CAAQqE,KAAK,KAAKpE,QAzSxB,WACdkB,IAAMuC,SAASxC,QAAQyC,OAAS,CAC5B,eAAgB,mBAChB,QAAU,GAAV,OAAchC,IAElB,IAAMD,EAAO,CACT6I,aAAcA,EACdC,SAAUA,EACVC,IAAKA,EACL1D,SAAUA,EACV2D,aAAcA,EACdC,MAAOuE,EAGPE,YAAaA,EACbrE,gBAAiBuE,EACjBxE,QAASA,EACT0B,QAASiD,EACT7E,SAASA,GAGbzJ,IAAMC,KAAN,UAAcpD,GAAd,OlD5CiB,uBkD4CwB0D,EAAMP,IAAMuC,SAASxC,QAAQyC,QAAQtC,MAAK,SAAAC,GAC/EP,QAAQC,IAAIM,EAAIC,QACG,MAAfD,EAAIC,OAEJR,QAAQC,IAAI,WAAYM,IAExBP,QAAQC,IAAI,OAAQM,EAAIC,QACxBM,MAAMP,EAAII,KAAKI,aAEpBC,OAAM,SAAAC,GAAG,OAAIH,MAAMG,EAAIC,SAASP,KAAKI,cA2QpB,OAAmD,IACnD,kBAAC9B,EAAA,EAAD,CAAQqE,KAAK,MAAb,e,wnBC3VrB,IAAMwL,GAAiB1R,IAAOC,IAAV,KAYfL,EAcWA,EAIAD,EnDhCM,qBoDDhBgS,GAAa,CACtB,CACI3S,WAAW,gBACX4S,YAAY,qBCoCLC,GAlCC,WACZ,IAAIlG,EAAU,EACd,OACI,6BACI,kBAAC+F,GAAD,KACI,kBAACzF,GAAA,EAAD,CAAO1L,UAAU,eACb,+BACI,4BACI,iCACA,8CACA,oCACA,wCAGR,+BACKoR,GAAazF,KAAI,SAACnL,GACf,OACI,4BACI,wBAAIoL,MAAM,OAAOR,KACjB,4BAAK5K,EAAM/B,YACX,4BAAI,2BAAI+B,EAAM6Q,cACd,4BACI,kBAAC/P,EAAA,EAAD,CAAQqE,KAAK,KAAK3F,UAAU,QAA5B,uBCbzBuR,GAVK,WAEhB,OACI,6BACI,kBAAC,GAAD,CAAYhJ,MAAM,iBAClB,kBAAC,GAAD,QCTC8C,GAAa,CACtB,CACI5H,OAAQ,gBACR+N,aAAc,gBACdzE,WAAW,WACX0E,KAAM,OACNC,KAAM,OACNtT,MAAO,gBACPuT,WAAW,aACX9O,QAAQ,EACRgJ,aAAa,YACb+F,WAAW,cAEf,CACInO,OAAQ,gBACR+N,aAAc,mBACdzE,WAAW,WACX0E,KAAM,OACNC,KAAM,OACNtT,MAAO,2BACPuT,WAAW,aACX9O,QAAQ,EACRgJ,aAAa,IACb+F,WAAW,KAEf,CACInO,OAAQ,gBACR+N,aAAc,gBACdzE,WAAW,WACX0E,KAAM,OACNC,KAAM,OACNtT,MAAO,kBACPuT,WAAW,aACX9O,QAAQ,EACRgJ,aAAa,UACb+F,WAAW,QAEf,CACInO,OAAQ,gBACR+N,aAAc,eACdzE,WAAW,WACX0E,KAAM,OACNC,KAAM,OACNtT,MAAO,mBACPuT,WAAW,aACX9O,QAAQ,EACRgJ,aAAa,SACb+F,WAAW,WCaJN,GArDC,SAAC9Q,GACb,IAAI4K,EAAY,EAEhB,OACI,6BACI,kBAAC,GAAD,KACI,kBAACM,GAAA,EAAD,CAAO1L,UAAU,eACb,+BACI,4BACI,iCAEA,wCACA,oCACA,0CACA,oCACA,oCACA,wCACA,0CACA,sCACA,uCACA,4CAGR,+BACKqL,GAAWM,KAAI,SAACnL,GACb,OACI,4BACI,wBAAIoL,MAAM,OAAOR,KAEjB,4BAAI,2BAAI5K,EAAMiD,SACd,4BAAKjD,EAAMgR,cACX,4BAAKhR,EAAMuM,YACX,4BAAKvM,EAAMiR,MACX,4BAAKjR,EAAMkR,MACX,4BAAKlR,EAAMpC,OACX,4BAAKoC,EAAMmR,YACX,wBAAI3R,UAAU,eACV,kBAAC0G,EAAA,EAAD,CAAOP,MAAQ3F,EAAMqC,OAAS,UAAY,UACrCrC,EAAMqC,OAAS,SAAW,aAGnC,4BAAKrC,EAAMqL,cACX,4BAAKrL,EAAMoR,qBCjChCC,GAXI,WAEf,OACI,6BACI,kBAAC,GAAD,CAAYtJ,MAAM,gBAElB,kBAAC,GAAD,QCmBGyG,GApBF,WACX,IAAIvO,EAAQC,cAEZ,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuO,OAAK,EAACvN,KAAI,UAAKjB,EAAMiB,MAAQwN,UAAW9F,KAC/C,kBAAC,IAAD,CAAO6F,OAAK,EAACvN,KAAI,UAAKjB,EAAMiB,KAAX,qBAAoCwN,UAAW3C,KAChE,kBAAC,IAAD,CAAO0C,OAAK,EAACvN,KAAI,UAAKjB,EAAMiB,KAAX,YAA2BwN,UAAWvC,KACvD,kBAAC,IAAD,CAAOsC,OAAK,EAACvN,KAAI,UAAKjB,EAAMiB,KAAX,iBAAgCwN,UAAWX,KAC5D,kBAAC,IAAD,CAAOU,OAAK,EAACvN,KAAI,UAAKjB,EAAMiB,KAAX,cAA6BwN,UAAWgB,KACzD,kBAAC,IAAD,CAAOjB,OAAK,EAACvN,KAAI,UAAKjB,EAAMiB,KAAX,iBAAgCwN,UAAWqC,KAC5D,kBAAC,IAAD,CAAOtC,OAAK,EAACvN,KAAI,UAAKjB,EAAMiB,KAAX,gBAA+BwN,UAAW2C,Q,yJCpB5D,IAAMC,GAA0BrS,IAAOC,IAAV,MCgCnBqS,GA1BQ,WAAO,IAAD,EACGnQ,oBAAS,GADZ,mBACtByN,EADsB,KACZC,EADY,KAM7B,OAAID,EACK,kBAAC,IAAD,CAAU5N,GAAG,MAGlB,6BACE,kBAACqQ,GAAD,KACE,yBAAK9R,UAAU,iBACb,6BACE,kBAAC,GAAD,OAEF,6BACE,kBAAC,GAAD,CAAQgH,OAfL,WACblE,aAAayM,WAAW,SACxBD,GAAY,MAcF,kBAAC,GAAD,WCsBC0C,OAjCf,WACE,OAEE,6BACI,kBAAC,IAAD,KACE,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOtQ,KAAK,8BACV,kBAAC,GAAD,CAAW+N,OAAQ9L,KAGrB,kBAAC,IAAD,CAAOjC,KAAK,uCACV,kBAAC,GAAD,CAAiB+N,OAAQsC,MAG3B,kBAAC,IAAD,CAAOrQ,KAAK,iCACV,kBAAC,GAAD,CAAiB+N,OAAQL,MAG3B,kBAAC,IAAD,CAAO1N,KAAK,+BACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,qBACV,kBAAC,GAAD,CAAW+N,OAAQ9N,UC3BbsQ,QACW,cAA7BC,OAAO7J,SAAS8J,UAEe,UAA7BD,OAAO7J,SAAS8J,UAEhBD,OAAO7J,SAAS8J,SAAS1R,MACvB,2D,OCXN2R,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/P,MAAK,SAAAgQ,GACJA,EAAaC,gBAEdvP,OAAM,SAAAwP,GACLxQ,QAAQwQ,MAAMA,EAAMzP,a,mBEzI5B0P,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,6C","file":"static/js/main.f42e92e3.chunk.js","sourcesContent":["export const validation = (email, password, c_password = null, first_name = null, last_name = null, enrollment = null) => {\r\n    const errors = {\r\n        isError: false,\r\n        emailError: \"\",\r\n        passwordError: \"\",\r\n        c_passwordError: \"\",\r\n        first_nameError: \"\",\r\n        last_nameError: \"\",\r\n        enrollError: ''\r\n    }\r\n\r\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    if (email === \"\") {\r\n        errors.isError = true;\r\n        errors.emailError = \"Please Enter email\";\r\n    }\r\n    else {\r\n        if (!emailRex.test(email)) {\r\n            errors.isError = true;\r\n            errors.emailError = \"Requires valid email\";\r\n        }\r\n    }\r\n\r\n    if (first_name === \"\") {\r\n        errors.isError = true;\r\n        errors.first_nameError = \"Please Enter First name\";\r\n    }\r\n\r\n    if (last_name === \"\") {\r\n        errors.isError = true;\r\n        errors.last_nameError = \"Please Enter Last name\";\r\n    }\r\n\r\n    if (enrollment === \"\") {\r\n        errors.isError = true;\r\n        errors.enrollError = \"Please Enter Enrollment number\";\r\n    }\r\n\r\n    if (password === \"\") {\r\n        errors.isError = true;\r\n        errors.passwordError = \"Please Enter Password\";\r\n    }\r\n    // else {\r\n    //     if (c_password != null) {\r\n    //         if (password !== c_password) {\r\n    //             errors.isError = true;\r\n    //             errors.passwordError = \"Passwords does not match\";\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    if (c_password === \"\") {\r\n        errors.isError = true;\r\n        errors.c_passwordError = \"Please Enter Password\";\r\n    } else {\r\n        if (c_password != null) {\r\n            if (password !== c_password) {\r\n                errors.isError = true;\r\n                errors.c_passwordError = \"Passwords does not match\";\r\n            }\r\n        }\r\n    }\r\n    // console.log(errors)\r\n    return errors;\r\n};","export const greenColor=\"rgb(1,162,129)\";  //#01a981\r\nexport const greenColorLight=\"rgb(10, 196, 158)\";\r\nexport const whiteColor=\"rgb(239,239,239)\"; \r\nexport const fontBlackColor=\"rgb(41,41,41)\";\r\n\r\n//--------APIs--------------\r\nexport const serverApi=\"http://d908f4c2c553.ngrok.io\"\r\n\r\n//--------------login/register-------------\r\nexport const loginApi=\"/user/login\";\r\nexport const registerApi=\"/user/addupdate\";\r\n\r\n//-----------------------------loginscreen-student----------------------------------\r\n\r\n//=------------profile----------\r\n\r\nexport const userById=\"/user/getUserById\"\r\nexport const viewProfile=\"/userProfile/viewUserProfile\"\r\nexport const editProfile=\"/userProfile/addUserProfile\"\r\n//==========campus drive=============\r\n\r\nexport const campusDriveApi=\"/post/getAllPost\"\r\nexport const getDriveById=\"/post/getPostById\"\r\nexport const applyApi=\"/user/addToIntrested\"\r\n\r\n\r\n//-----------------------------loginscreen-Admin----------------------------------\r\n\r\n//------------Add job---------------\r\nexport const addDriveApi=\"/post/addUpdatePost\"","import styled from \"styled-components\"\r\nimport { greenColor, whiteColor } from \"../constants/constants\"\r\n\r\nexport const LoginFormWrapper=styled.div`\r\n.login-form{\r\n    max-width:330px;\r\n    padding:15px;\r\n    margin: auto auto;\r\n    box-shadow: 0 4px 8px 0 rgba(1,162,129,0.2);\r\n    font-size:10pt;\r\n    background-color:${whiteColor};\r\n    \r\n}\r\n\r\n.login-form Input{ \r\n    background-color:${whiteColor};\r\n}\r\n\r\n.login-form Label{\r\n    margin-bottom:0px;\r\n    margin-top:4px;\r\n}\r\n\r\n.card-login{\r\n    margin-top: 3cm;\r\n}\r\n\r\n.card-register{\r\n    margin-top: 1cm;\r\n}\r\n\r\n.login-background-style{\r\n    height: 100vh;\r\n    width:100%;\r\n    background-color:${whiteColor};\r\n    backdround-size:cover;\r\n}\r\n\r\n.h-117{\r\n    height: 117vh;\r\n}\r\n\r\n.bttn{\r\n    width: 100%;\r\n    max-width:330px;\r\n    padding:5px;\r\n    margin:auto;\r\n    margin-top:20px;\r\n    background-color:${greenColor};\r\n}\r\n\r\n`","import styled from \"styled-components\";\r\nimport { greenColor } from \"../constants/constants\";\r\n\r\nexport const NavBarWrapper = styled.div`\r\n.background-style {\r\n    background-color:${greenColor};\r\n  }\r\n\r\n.header-style{\r\n  font-size:15pt;\r\n  color:white;\r\n}\r\n\r\n.clgLogo{\r\n  margin-right: 8px;\r\n}\r\n`\r\n","import React from \"react\"\r\nimport {Navbar, NavbarBrand } from \"reactstrap\";\r\nimport { NavBarWrapper } from \"../loginscreen/NavBar.style.js\";\r\nimport Logo from \"../images/ldrp_logo.png\"\r\nconst Login_NavBar = () => {\r\n    return (\r\n        <NavBarWrapper>\r\n        <Navbar light expand=\"md\" className=\"background-style\">\r\n        <img src={Logo} alt=\"loading\" className=\"clgLogo\" height=\"50\" width=\"50\"/>\r\n            <NavbarBrand><div className=\"header-style\"><b>LDRP</b> PLACEMENT PORTAL</div></NavbarBrand> \r\n        </Navbar>\r\n        </NavBarWrapper>\r\n    )\r\n}\r\nexport default Login_NavBar","import React from 'react'\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\nimport { Button, Input, Label, FormFeedback, Card } from 'reactstrap'\r\nimport { LoginFormWrapper } from './Login.style'\r\nimport Login_NavBar from './Login_NavBar'\r\n\r\nconst LoginForm = (props) => {\r\n    let match=useRouteMatch();\r\n    return (\r\n        <div>\r\n            <LoginFormWrapper >\r\n                <div className=\"login-background-style\">\r\n                    <Login_NavBar />\r\n                    <div>\r\n                        <Card className=\"login-form card-login\">\r\n                            <h4 className=\"text-center\"><b>LOGIN</b></h4>\r\n                            <div>\r\n                                <Label>Gmail</Label>\r\n                                <Input\r\n                                    name='email'\r\n                                    type='email'\r\n                                    value={props.email}\r\n                                    invalid={props.emailError}\r\n                                    placeholder=\"Email\"\r\n                                    onChange={props.handleChange}\r\n                                />\r\n                                <FormFeedback>{props.emailError}</FormFeedback>\r\n                            </div>\r\n                            <div >\r\n                                <Label>Password</Label>\r\n                                <Input\r\n                                    name='password'\r\n                                    type='password'\r\n                                    value={props.password}\r\n                                    invalid={props.passwordError}\r\n                                    placeholder=\"Password\"\r\n                                    onChange={props.handleChange} />\r\n                                <FormFeedback>{props.passwordError}</FormFeedback>\r\n                            </div>\r\n                            <div>\r\n                                <Button\r\n                                    className=\"bttn\"\r\n                                    onClick={props.login} >\r\n                                    Login\r\n                            </Button>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <Link to={`${match.path}/register`}>\r\n                                    Sign Up\r\n                                </Link>\r\n                                <span className=\"p-2\">|</span>\r\n                                <Link to={`${match.path}/fpassword`}>\r\n                                    Forgot password\r\n                                </Link>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </LoginFormWrapper>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default LoginForm;","import React, { Component, useState } from 'react';\r\nimport { validation } from './validation'\r\nimport LoginForm from './LoginForm';\r\nimport axios from \"axios\"\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { loginApi, serverApi } from '../constants/constants';\r\n\r\nconst LoginHandles = () => {\r\n    const [loginCred, setLoginCred] = useState({\r\n        email: '',\r\n        password: '',\r\n        isLogin: false,\r\n        user_type: '',\r\n\r\n        isError: false,\r\n        emailError: \"\",\r\n        passwordError: \"\"        \r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ?\r\n            setLoginCred({ ...loginCred, [name] : checked })\r\n            :\r\n            setLoginCred({ ...loginCred, [name] : value}) \r\n    }\r\n\r\n    const login = () => {\r\n        const erro = validation(loginCred.email, loginCred.password);\r\n        // loginCred.isError=erro.isErrors\r\n        setLoginCred({...loginCred,...erro})\r\n\r\n        console.log(\"cred\", loginCred)\r\n        if (!erro.isError) {\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                email: loginCred.email,\r\n                password: loginCred.password,\r\n            }\r\n            axios.post(`${serverApi}${loginApi}`, config).then(res => {\r\n                console.log(res.status)\r\n                if (res.status === 200) {\r\n                    localStorage.setItem(\"token\", res.data.data.token)\r\n                    console.log(\"response\", res)\r\n                    console.log(\"token\", res.data.data.token)\r\n                    console.log(\"id\", res.data.data.id)\r\n                    setLoginCred({\r\n                        ...loginCred,\r\n                        isLogin:true,\r\n                        user_type: res.data.data.user_type\r\n                    })\r\n                } else {\r\n                    console.log(\"else\", res.status)\r\n                    alert(res.data.message)\r\n                }\r\n            }).catch(err => alert(err.response.data.message))\r\n        \r\n        }\r\n    }\r\n\r\n    if (loginCred.isLogin) {\r\n        if (loginCred.user_type === \"Admin\")\r\n            return (\r\n                <Redirect to=\"placement-portal/loginscreen-admin\" />\r\n            )\r\n        else\r\n            return (\r\n                <Redirect to=\"/placement-portal/loginscreen\" />\r\n            )\r\n    }\r\n    return (\r\n        <LoginForm handleChange={handleChange}\r\n            login={login}\r\n            {...loginCred} />\r\n    )\r\n}\r\n\r\nexport default LoginHandles;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Input, Label, FormFeedback, Card } from 'reactstrap'\r\nimport { LoginFormWrapper } from '../login/Login.style';\r\nimport Login_NavBar from '../login/Login_NavBar';\r\n\r\nconst RegisterForm = props => {\r\n    console.log(\"props_reg\",props)\r\n    return (\r\n        <div>\r\n            <LoginFormWrapper>\r\n                <div className=\"login-background-style h-117\" >\r\n                    <Login_NavBar />\r\n                    <div>\r\n                        <Card className=\"login-form card-register\">\r\n                            <h4 className=\"text-center\"><b>REGISTER</b></h4>\r\n                            <div >\r\n                                <Label >Firstname</Label>\r\n                                <Input\r\n                                    name='first_name'\r\n                                    type='text'\r\n                                    value={props.first_name}\r\n                                    // onBlur={props.validation}\r\n                                    invalid={props.first_nameError}\r\n                                    placeholder=\"Enter Firstname\"\r\n                                    onChange={props.handleChange}\r\n                                />\r\n                                <FormFeedback>{props.first_nameError}</FormFeedback>\r\n                            </div>\r\n                            <div >\r\n                                <Label>Lastname</Label>\r\n                                <Input\r\n                                    name='last_name'\r\n                                    type='text'\r\n                                    value={props.last_name}\r\n                                    // onBlur={props.validation}\r\n                                    invalid={props.last_nameError}\r\n                                    placeholder=\"Enter Lastname\"\r\n                                    onChange={props.handleChange}\r\n                                />\r\n                                <FormFeedback>{props.last_nameError}</FormFeedback>\r\n                            </div>\r\n                            <div >\r\n                                <Label >Email</Label>\r\n                                <Input\r\n                                    name='email'\r\n                                    type='text'\r\n                                    value={props.email}\r\n                                    // onBlur={props.validation}\r\n                                    invalid={props.emailError}\r\n                                    placeholder=\"Enter Email\"\r\n                                    onChange={props.handleChange}\r\n                                />\r\n                                <FormFeedback>{props.emailError}</FormFeedback>\r\n                            </div>\r\n                            <div >\r\n                                <Label>Enrollment number</Label>\r\n                                <Input\r\n                                    name='enroll'\r\n                                    type='text'\r\n                                    value={props.enroll}\r\n                                    // onBlur={props.validation}\r\n                                    invalid={props.enrollError}\r\n                                    placeholder=\"Enter Enrollment Number\"\r\n                                    onChange={props.handleChange}\r\n                                />\r\n                                <FormFeedback>{props.enrollError}</FormFeedback>\r\n                            </div>\r\n\r\n                            <div >\r\n                                <Label>Password</Label>\r\n                                <Input\r\n                                    name='password'\r\n                                    type='password'\r\n                                    value={props.password}\r\n                                    // onBlur={props.validation}\r\n                                    invalid={props.passwordError}\r\n                                    placeholder=\"Enter Password\"\r\n                                    onChange={props.handleChange}\r\n                                />\r\n                                <FormFeedback>{props.passwordError}</FormFeedback>\r\n                            </div>\r\n                            <div >\r\n                                <Label>Confirm Password</Label>\r\n                                <Input\r\n                                    name='c_password'\r\n                                    type='password'\r\n                                    value={props.c_password}\r\n                                    // onBlur={props.validation}\r\n                                    invalid={props.c_passwordError}\r\n                                    placeholder=\"Confirm Password\"\r\n                                    onChange={props.handleChange}\r\n                                />\r\n                                <FormFeedback>{props.c_passwordError}</FormFeedback>\r\n                            </div>\r\n                            <div>\r\n                                <Button\r\n                                    className='bttn'\r\n                                    onClick={props.register} >\r\n                                    Register\r\n                            </Button>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <Link to=\"/placement-portal\">\r\n                                    Log In\r\n                                </Link>\r\n                                <span className=\"p-2\">|</span>\r\n                                <Link to=\"/placement-portal/fpassword\">\r\n                                    Forgot password\r\n                                </Link>\r\n                                \r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n\r\n                </div>\r\n            </LoginFormWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","import React, { Component, useState } from 'react';\r\nimport RegisterForm from './RegisterForm';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from \"axios\"\r\nimport { registerApi, serverApi } from '../constants/constants';\r\nimport { validation } from '../login/validation'\r\n\r\nconst Register = () => {\r\n\r\n    const [signupCred, setSignupCred] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        enroll: '',\r\n        password: '',\r\n        c_password: '',\r\n        isRegister: false,\r\n\r\n        isError: false,\r\n        emailError: \"\",\r\n        passwordError: \"\",\r\n        c_passwordError: \"\",\r\n        first_nameError: \"\",\r\n        last_nameError: \"\",\r\n        enrollError: ''      \r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ?\r\n            setSignupCred({ ...signupCred, [name]: checked })\r\n\r\n            :\r\n            setSignupCred({ ...signupCred, [name]: value })\r\n    }\r\n\r\n    const register = () => {\r\n        const err = validation(signupCred.email, signupCred.password, signupCred.c_password, signupCred.first_name, signupCred.last_name, signupCred.enroll);        \r\n        setSignupCred({...signupCred,...err})\r\n\r\n        if (!err.isError) {\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                first_name: signupCred.first_name,\r\n                last_name: signupCred.last_name,\r\n                email: signupCred.email,\r\n                enroll: signupCred.enroll,\r\n                password: signupCred.password,\r\n            }\r\n            axios.post(`${serverApi}${registerApi}`, config).then(res => {\r\n                console.log(res.status)\r\n                if (res.status === 200) {\r\n                    setSignupCred({\r\n                        ...signupCred,\r\n                        isRegister: true\r\n                    })\r\n                    alert(res.data.message)\r\n                    //   this.setState(res.data[0].c)\r\n                } else {\r\n                    alert(res.data.message)\r\n                }\r\n            }).catch(err => alert(err.response.data.message))\r\n        }\r\n    }\r\n\r\n    if (signupCred.isRegister)\r\n        return (\r\n            <Redirect to=\"/\" />\r\n        )\r\n    return (\r\n        <RegisterForm handleChange={handleChange}\r\n            register={register}\r\n            {...signupCred}\r\n        />\r\n        )\r\n}\r\n\r\nexport default Register;","import styled from \"styled-components\"\r\nimport { greenColor, whiteColor } from \"../../constants/constants\";\r\n\r\nexport const NavBarWrapper = styled.div`\r\n.background-style {\r\n    background-color:${greenColor};\r\n  }\r\n\r\n.header-style{\r\n  font-size:15pt;\r\n  color:white;\r\n}\r\n\r\n.navlink-style{\r\n  cursor:pointer;\r\n  margin:0;\r\n  margin-top:8px;\r\n  margin-bottom:8px;\r\n  padding:0;\r\n}\r\n\r\n.dropdown-style{\r\n  font-size:13px;\r\n  padding:0;\r\n}\r\n\r\n.dropdown-item{\r\n  color:${greenColor};\r\n  border-bottom: 1px solid ;\r\n  border-bottom-color:rgb(213,213,213);\r\n}\r\n.dropdown-item:hover{\r\n  color:${whiteColor};\r\n  background-color:${greenColor};\r\n}\r\n\r\n`;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarBrand,\r\n  Popover,\r\n  PopoverBody,\r\n  Tooltip,\r\n  Badge,\r\n  Modal,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport axios from \"axios\"\r\nimport { NavBarWrapper } from \"./NavBar.style\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBell, faPowerOff } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Avatar from \"react-avatar\";\r\nimport { whiteColor, greenColor, userById, serverApi } from \"../../constants/constants\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n  const doogle = () => setPopoverOpen(!popoverOpen);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const toggleTooltip = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  const [isOpenModal, setisOpenModal] = useState(false);\r\n  const toggleModal = () => setisOpenModal(!isOpenModal);\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\r\n\r\n  const [first_name,setFirstName]=useState(\"\");\r\n  const [last_name,setLastName]=useState(\"\");\r\n\r\n  let token=localStorage.getItem(\"token\")\r\n  useEffect(() => {\r\n\r\n    axios.defaults.headers.common = { 'api_key': `${token}` }\r\n    axios.post(`${serverApi}${userById}`, axios.defaults.headers.common).then(res => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n            console.log(\"response\", res)\r\n            setFirstName(res.data.data.first_name)\r\n            setLastName(res.data.data.last_name)\r\n        } else {\r\n            console.log(\"else\", res.status)\r\n            alert(res.data.message)\r\n        }\r\n    }).catch(err => alert(err.response.data.message))\r\n\r\n}, [first_name,last_name])\r\n  return (\r\n    <div>\r\n      <NavBarWrapper>\r\n\r\n        {/* //Navbar */}\r\n\r\n        <Navbar light expand=\"md\" className=\"background-style\">\r\n          <NavbarBrand><div className=\"header-style\"><b>LDRP</b> PLACEMENT PORTAL</div></NavbarBrand>\r\n          <NavbarToggler onClick={toggle} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n\r\n              <div>\r\n                <NavItem  >\r\n                  <NavLink className=\"navlink-style\">\r\n                    <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown} size=\"sm\">\r\n                      <DropdownToggle\r\n                        style={{\r\n                          backgroundColor: greenColor,\r\n                          border: greenColor,\r\n                          padding: \"0\"\r\n                        }} caret>\r\n                        <Avatar\r\n                          name={`${first_name} ${last_name}`}\r\n                          round={true}\r\n                          size={30}\r\n                          color={whiteColor}\r\n                          fgColor=\"black\"\r\n                        />{'  '}\r\n                        <small>welcome, {first_name}</small>\r\n                      </DropdownToggle>\r\n\r\n                      <DropdownMenu className=\"dropdown-style\">\r\n                        <Link to=\"/placement-portal/loginscreen/profile\"\r\n                          style={{ textDecoration: \"none\" }}\r\n                        >\r\n                          <DropdownItem className=\"dropdown-item\">Profile</DropdownItem>\r\n                        </Link>\r\n                        <Link to=\"/\"\r\n                          style={{ textDecoration: \"none\" }}\r\n                        >\r\n                          <DropdownItem className=\"dropdown-item\">Change Password</DropdownItem>\r\n                        </Link>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  </NavLink>\r\n                </NavItem>\r\n              </div>\r\n\r\n              <NavItem >\r\n                <NavLink className=\"navlink-style\" onClick={doogle}>\r\n                  <FontAwesomeIcon id=\"Noti-Popover\" icon={faBell} />\r\n                  <sup><Badge pill color=\"danger\">3</Badge></sup>\r\n                </NavLink>\r\n              </NavItem>\r\n\r\n              <NavItem className=\"mr-5\">\r\n                <NavLink className=\"navlink-style\" onClick={toggleModal}>\r\n                  <FontAwesomeIcon id=\"logoutTooltip\" icon={faPowerOff} />\r\n                </NavLink>\r\n              </NavItem>\r\n\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n\r\n\r\n        {/* // Modal */}\r\n\r\n        <Modal isOpen={isOpenModal} toggle={toggleModal}>\r\n          <ModalBody style={{ backgroundColor: whiteColor }}>\r\n            Do you want to logout?\r\n          </ModalBody>\r\n          <ModalFooter style={{ backgroundColor: whiteColor }}>\r\n            <Button style={{ backgroundColor: greenColor }} size=\"sm\" onClick={props.logout}>Yes</Button>{' '}\r\n            <Button color=\"secondary\" size=\"sm\" onClick={toggleModal}>No</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        {/* // Tooltip */}\r\n\r\n        <Tooltip placement=\"bottom\" isOpen={tooltipOpen} target=\"logoutTooltip\" toggle={toggleTooltip}>\r\n          Logout\r\n        </Tooltip>\r\n\r\n        {/* //popover */}\r\n\r\n        <Popover\r\n          placement=\"bottom\"\r\n          isOpen={popoverOpen}\r\n          target=\"Noti-Popover\"\r\n          toogle={doogle}\r\n          trigger=\"hover\"\r\n        >\r\n          {/* <PopoverHeader className=\"font-weight-bold\">\r\n            Notifications\r\n          </PopoverHeader> */}\r\n          <PopoverBody>\r\n            <div className=\"popover-style\">\r\n              <div>Notification-1</div>\r\n            </div>\r\n            <div className=\"popover-style\">\r\n              <div>Notification-2</div>\r\n            </div>\r\n            <div className=\"popover-style\">\r\n              <div>Notification-3</div>\r\n            </div>\r\n          </PopoverBody>\r\n        </Popover>\r\n\r\n      </NavBarWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from \"styled-components\"\r\nimport { greenColor, whiteColor, fontBlackColor } from \"../../constants/constants\";\r\n\r\nexport const SideBarWrapper=styled.div`\r\n.background-style {\r\n    background-color: ${whiteColor};\r\n    box-shadow: rgba(1, 162, 129, 0.2) 0px 4px 7px 0px;\r\n    height: 100vh;\r\n    position: fixed;\r\n    width:15%;\r\n    z-index: 2;\r\n  }\r\n\r\n  .sidebar-header {\r\n    text-align: center;\r\n  }\r\n\r\n  // .active {\r\n  //   background: linear-gradient(\r\n  //     45deg,\r\n  //     rgb(167, 139, 252),\r\n  //     rgb(82, 107, 248)\r\n  //   ) !important;\r\n  //   color: white !important;\r\n  // }\r\n\r\n  .clgLogo-background{\r\n    background-color: ${greenColor};\r\n    background-style:cover;\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 10px 0px;\r\n    padding:6px;  \r\n  }\r\n\r\n  .clgLogo-background img{\r\n    margin-left:65px;\r\n  }\r\n\r\n//  .sidebar-navitem-style:hover{\r\n//    blackground-color:yellow;\r\n//  }\r\n\r\n.menu-navlink-style{\r\n  background-color:rgb(10, 196, 158);\r\n  color:white;\r\n  paadding:0;\r\n}\r\n\r\n.navlink-style{\r\n  color:${fontBlackColor};\r\n  font-size:11pt;\r\n  border-left: 4px solid;\r\n  border-left-color:${whiteColor};\r\n  border-bottom: 1px solid ;\r\n  border-bottom-color:rgb(213,213,213);\r\n}\r\n\r\n.navlink-style:hover{\r\n  color:${greenColor};\r\n  border-left-color:${greenColor};\r\n}\r\n\r\n`;","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaperPlane, faBars, faList, faChartPie, faComment, faUserEdit, faUserTie} from '@fortawesome/free-solid-svg-icons';\r\nimport { NavItem, NavLink, Nav, Navbar } from 'reactstrap';\r\nimport { SideBarWrapper } from \"./SideBar.style\";\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\n\r\nimport Logo from \"../../images/ldrp_logo.png\";\r\n\r\nconst SideBar = () => {\r\n  let match=useRouteMatch();\r\n  return (\r\n    <div>\r\n      <SideBarWrapper>\r\n        <div className=\"background-style\">\r\n          <div className=\"sidebar-header\">\r\n            <Navbar className=\"clgLogo-background\">\r\n              <img src={Logo} alt=\"loading\" height=\"50\" width=\"50\" />\r\n            </Navbar>\r\n            <div className=\"text-left \">\r\n              <Nav vertical className=\"list-unstyled pb-3\">\r\n\r\n                <NavItem >\r\n                  <NavLink className=\"menu-navlink-style\"> \r\n                    <FontAwesomeIcon icon={faBars} className=\"mr-2\" />MENU\r\n                  </NavLink>\r\n                </NavItem >\r\n          \r\n                <NavItem>\r\n                  <NavLink className=\"navlink-style\" tag={Link} to={`${match.url}`}>\r\n                    <FontAwesomeIcon icon={faChartPie} className=\"mr-2\" />Dashboard\r\n                  </NavLink>\r\n                </NavItem >\r\n\r\n                <NavItem >\r\n                  <NavLink className=\"navlink-style\" tag={Link} to={`${match.url}/placement-drives`}>\r\n                    <FontAwesomeIcon icon={faUserTie} className=\"mr-2\" />Placement Drives\r\n                  </NavLink>\r\n                </NavItem >\r\n\r\n                {/* <NavItem >\r\n                  <NavLink className=\"navlink-style\" tag={Link} to={'/'}>\r\n                    <FontAwesomeIcon icon={faList} className=\"mr-2\" />List of Application\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem >\r\n                  <NavLink className=\"navlink-style\" tag={Link} to={'/'}>\r\n                    <FontAwesomeIcon icon={faUserEdit} className=\"mr-2\" />TPO Updates\r\n                  </NavLink>\r\n                </NavItem> */}\r\n\r\n                <NavItem >\r\n                  <NavLink className=\"navlink-style\" tag={Link} to={'/placement-portal'}>\r\n                    <FontAwesomeIcon icon={faComment} className=\"mr-2\" />FeedBack\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <NavLink className=\"navlink-style\" tag={Link} to={`${match.url}/contact-us`}>\r\n                    <FontAwesomeIcon icon={faPaperPlane} className=\"mr-2\" />Contact Us\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n              </Nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </SideBarWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import styled from \"styled-components\";\r\nimport { whiteColor, fontBlackColor, greenColor } from \"../../../constants/constants\";\r\n\r\n\r\nexport const DashboardWrapper = styled.div`\r\n  .background-style {\r\n    background-color:${whiteColor}; \r\n    height: 92vh;\r\n  }\r\n\r\n  .card-style {\r\n    box-shadow:  rgba(1, 162, 129, 0.2) 0px 4px 7px 0px;\r\n  }\r\n\r\n  .card-right-text{\r\n    font-size:15px;\r\n    color:${fontBlackColor};\r\n  //  border: 1px solid;\r\n    padding:0;\r\n    text-align:center;\r\n  }\r\n\r\n  .card-right-text span{\r\n    font-size:22px;\r\n    color:black;\r\n    font-weight:bold;\r\n  }\r\n\r\n  .card-left-icon{\r\n    color:${greenColor}\r\n  }\r\n`;\r\n//#d8d8d8","import styled from \"styled-components\";\r\nimport { whiteColor, fontBlackColor, greenColor, greenColorLight } from \"../../constants/constants\";\r\n\r\nexport const MainNavbarWrapper = styled.div`\r\n.main-navbar-style{\r\n    background-color:${whiteColor};\r\n    box-shadow:  rgba(1, 162, 129, 0.2) 0px 4px 7px 0px;\r\n    padding:0;\r\n  }\r\n\r\n  .navbrand-style {\r\n    color:${fontBlackColor};\r\n    font-size:15px;\r\n    margin-left:5px;\r\n    padding:8.5px;\r\n  }\r\n\r\n  .filter-style{\r\n    color:${greenColor};\r\n    margin-right:240px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .filter-style:hover{\r\n    color:${greenColorLight};\r\n  }\r\n\r\n  #edit-profile{\r\n    color:${greenColor};\r\n  }\r\n\r\n  #edit-profile:hover{\r\n    color:${greenColorLight};\r\n  }\r\n\r\n`;","import React from \"react\"\r\nimport { MainNavbarWrapper } from \"./MainNavbar.style\"\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFilter, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\n\r\nconst MainNavbar = props => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div>\r\n            <MainNavbarWrapper>\r\n                <Navbar className=\"main-navbar-style\" light expand=\"md\">\r\n                    <NavbarBrand className=\"navbrand-style\">\r\n                        {props.title}\r\n                    </NavbarBrand>\r\n                    {location.pathname === \"/placement-portal/loginscreen/placement-drives\" ?\r\n                        <Nav className=\"ml-auto filter-style\" navbar>\r\n                            <NavItem onClick={props.toggleFilter}>\r\n                                <FontAwesomeIcon icon={faFilter} className=\"mr-1\" />Filter\r\n                        </NavItem>\r\n                        </Nav>\r\n                        :\r\n                        <div></div>\r\n                    }\r\n                    {location.pathname === \"/placement-portal/loginscreen/profile\" ?\r\n                        <Nav className=\"ml-auto filter-style\" navbar>\r\n                            <NavItem  >\r\n                                <NavLink id=\"edit-profile\" tag={Link} to=\"/placement-portal/loginscreen/edit-profile\">\r\n                                    <FontAwesomeIcon icon={faEdit} className=\"mr-1\" />Edit Profile\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        :\r\n                        <div></div>\r\n                    }\r\n                </Navbar>\r\n            </MainNavbarWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainNavbar;","import React from \"react\";\r\nimport { DashboardWrapper } from \"./Dashboard.style\";\r\nimport { Row, Card, CardBody, Col, CardHeader } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUsers, faSitemap, faChartLine, faUserTie, faRupeeSign } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { greenColor } from \"../../../constants/constants\";\r\nimport MainNavbar from \"../MainNavbar\";\r\n\r\nconst bar = {\r\n  labels: ['Computer', 'IT', 'EC', 'Electrical', 'Civil', 'Automobile', 'Machanical'],\r\n  datasets: [\r\n    {\r\n      label: 'Placed Students',\r\n      backgroundColor: \"rgb(10, 196, 158)\",\r\n      borderColor: greenColor,\r\n      borderWidth: 2,\r\n      hoverBackgroundColor: greenColor,\r\n      barPercentage: 0.5,\r\n      // categoryPercentage:0.5,\r\n      // barThickness: 6,\r\n      // hoverBorderColor: 'rgba(255,99,132,1)',\r\n      data: [65, 59, 80, 81, 56, 55, 19],\r\n    },\r\n  ],\r\n};\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <DashboardWrapper>\r\n        <div className=\"background-style\">\r\n          <MainNavbar title=\"Dashboard\" />\r\n\r\n          <Row className=\"m-1 mt-5\">\r\n            <Col>\r\n              <Card className=\"m-0 card-style\">\r\n                <CardBody>\r\n                  <Row>\r\n                    <div className=\"m-3 mr-4 card-left-icon\">\r\n                      <FontAwesomeIcon icon={faSitemap} size=\"2x\" />\r\n                    </div>\r\n                    <div className=\"mt-2 card-right-text\">\r\n                      Departments\r\n                      <br />\r\n                      <span>7</span>\r\n                    </div>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card className=\"m-0 card-style\">\r\n                <CardBody>\r\n                  <Row>\r\n                    <div className=\"m-3 mr-4 card-left-icon\">\r\n                      <FontAwesomeIcon icon={faUsers} size=\"2x\" />\r\n                    </div>\r\n                    <div className=\"mt-2  card-right-text\">\r\n                      Total Students\r\n                      <br />\r\n                      <span>7</span>\r\n                    </div>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card className=\"m-0 card-style\">\r\n                <CardBody>\r\n                  <Row>\r\n                    <div className=\"m-3 mr-4 card-left-icon\">\r\n                      <FontAwesomeIcon icon={faChartLine} size=\"2x\" />\r\n                    </div>\r\n                    <div className=\"mt-2 card-right-text\">\r\n                      Placed Student\r\n                      <br />\r\n                      <span>7</span>\r\n                    </div>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card className=\"m-0 card-style\">\r\n                <CardBody>\r\n                  <Row>\r\n                    <div className=\"m-3 mr-4 card-left-icon\">\r\n                      <FontAwesomeIcon icon={faRupeeSign} size=\"2x\" />\r\n                    </div>\r\n                    <div className=\"mt-2  card-right-text\">\r\n                      Highest Package\r\n                      <br />\r\n                      <span>7.00</span> LPA\r\n                    </div>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card className=\"m-0 card-style\">\r\n                <CardBody>\r\n                  <Row>\r\n                    <div className=\"m-3 mr-4 card-left-icon\">\r\n                      <FontAwesomeIcon icon={faUserTie} size=\"2x\" />\r\n                    </div>\r\n                    <div className=\"mt-2  card-right-text\">\r\n                      Campus Drives\r\n                      <br />\r\n                      <span>7</span>\r\n                    </div>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card className=\"m-4 mt-4\">\r\n            <CardHeader>\r\n              PLACEMENT RECORD\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div>\r\n                <Bar data={bar} width={100} height={30} />\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n\r\n        </div>\r\n      </DashboardWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import styled from \"styled-components\";\r\nimport { greenColor, whiteColor, fontBlackColor } from \"../../../../constants/constants\";\r\n\r\nexport const FilterWrapper = styled.div`\r\n.filter-row{\r\n    margin:0;\r\n    padding:0;\r\n    font-size:13px;\r\n}\r\n\r\n.filter-col{\r\n    border-right:1px solid;\r\n    border-right-color:rgb(213,213,213);\r\n}\r\n\r\n.card-footer-button{\r\n    background-color:${greenColor};\r\n    margin:3px;\r\n}\r\n\r\n.input-group{\r\n    width:90px;\r\n    height:50px;\r\n}\r\n\r\n.input-addon{\r\n    height:31px;\r\n}\r\n\r\n.bttn{\r\n    background-color:${whiteColor};\r\n    border:none;\r\n    color:${fontBlackColor};\r\n    margin-right:30px;\r\n}\r\n`;","import React, { useState } from 'react';\r\nimport { Card, CardFooter, Row, Col, FormGroup, Label, InputGroup, InputGroupAddon, InputGroupText, Input, Button, ButtonGroup } from 'reactstrap';\r\nimport { FilterWrapper } from './Filter.style';\r\n\r\nconst Filter = (props) => {\r\n\r\n    const [min_ctc, setMinCtc] = useState();\r\n    const [onCampus, setOnCampus] = useState(false);\r\n    const [offCampus, setOffCampus] = useState(false);\r\n\r\n    const handleFilterApply = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FilterWrapper>\r\n                <div>\r\n                    <Card>\r\n                        <Row className=\"filter-row\">\r\n                            <Col className=\"filter-col\" size=\"sm\">\r\n                                <FormGroup>\r\n                                    <Label><b>CTC:</b></Label>\r\n                                    <InputGroup className=\"input-group\" size=\"sm\">\r\n                                        <InputGroupAddon className=\"input-addon\" addonType=\"prepend\">\r\n                                            <InputGroupText>Min:</InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input maxLength=\"4\"\r\n                                            onChange={(e) => setMinCtc(e.target.value)} />\r\n                                    </InputGroup>\r\n                                    <InputGroup className=\"input-group\" size=\"sm\">\r\n                                        <InputGroupAddon className=\"input-addon\" addonType=\"prepend\">\r\n                                            <InputGroupText>Max:</InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input maxLength=\"4\" />\r\n                                    </InputGroup>\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col className=\"filter-col\">\r\n                                <FormGroup>\r\n                                    <Label><b>Location:</b></Label>\r\n                                    <Input type=\"select\" multiple size=\"sm\">\r\n                                        <option>Ahmedabad</option>\r\n                                        <option>Bagaluru</option>\r\n                                        <option>Vadodara</option>\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col className=\"filter-col\">\r\n                                <FormGroup size=\"sm\">\r\n                                    <Label for=\"checkbox2\"><b>Technology:</b></Label>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" id=\"checkbox2\" />\r\n                                            Java\r\n                                        </Label><br />\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" id=\"checkbox2\" />\r\n                                            Python\r\n                                        </Label><br />\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" id=\"checkbox2\" />\r\n                                            React\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col className=\"filter-col\">\r\n                                <FormGroup size=\"sm\">\r\n                                    <Label for=\"checkbox3\"><b>Vanue:</b></Label>\r\n                                    <ButtonGroup>\r\n                                        <Button className=\"bttn\" size=\"sm\" onClick={() => setOnCampus(!onCampus)} active={onCampus === true}>On-Campus</Button>\r\n                                        <Button className=\"bttn\" size=\"sm\" onClick={() => setOffCampus(!offCampus)} active={offCampus === true}>Off-Campus</Button>\r\n                                    </ButtonGroup>\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col className=\"filter-col\">\r\n                                <FormGroup size=\"sm\">\r\n                                    <Label for=\"checkbox3\"><b>Eligibility:</b></Label>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" id=\"checkbox4\" />\r\n                                            Yes\r\n                                                    </Label><br />\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" id=\"checkbox\" />\r\n                                            No\r\n                                                </Label><br />\r\n                                    </FormGroup>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <CardFooter>\r\n\r\n                                <Button size=\"sm\" className=\"card-footer-button\" onClick={()=>handleFilterApply} >Apply</Button><br />\r\n                                <Button size=\"sm\" onClick={props.toggleFilter}>Cancel</Button><br />\r\n                                <Button size=\"sm\" className=\"card-footer-button\" onClick={props.toggleFilter}>Reset</Button>\r\n\r\n                            </CardFooter>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n\r\n            </FilterWrapper>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import styled from \"styled-components\";\r\nimport { whiteColor, greenColor, greenColorLight } from \"../../../../constants/constants\";\r\n\r\nexport const PDtableWrapper = styled.div`\r\n.table-style{\r\n    // background-color:Black; \r\n    // color:white;\r\n    font-size:10pt;\r\n    text-align:center;\r\n}\r\n\r\n.table-style thead{\r\n    background-image: linear-gradient(to bottom, rgb(108,108,108) , rgb(69,69,69)); \r\n    color:${whiteColor}\r\n}\r\n\r\n.table-style thead tr th{\r\n    margin:10px;\r\n    padding:9px;\r\n} \r\n\r\n.table-style tbody tr td,th{\r\n    margin:0;\r\n    padding:3px;\r\n}\r\n\r\n.badge-style{\r\n  font-size:15px;\r\n}\r\n\r\n.table-style tbody tr th{\r\n    background-color:${whiteColor};\r\n}\r\n\r\n.bttn{\r\n    background-color:${greenColor}\r\n}\r\n\r\n.bttn:hover{\r\n    background-color:${greenColorLight};\r\n}\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Badge, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Logo from \"../../../../images/capgemini_logo.png\"\r\nimport { TableArray } from '../TableArray';\r\nimport { greenColor, whiteColor, serverApi,campusDriveApi, getDriveById ,applyApi} from '../../../../constants/constants';\r\nimport { PDtableWrapper } from './PDtable.style';\r\nimport axios from \"axios\";\r\n\r\nconst PDtable = (props) => {\r\n    let rowNumber = 1;\r\n    \r\n    const [isOpenModal, setisOpenModal] = useState(false);\r\n    const toggleModal = () => setisOpenModal(!isOpenModal);\r\n    \r\n    const openModalById=(id)=>{\r\n        setisOpenModal(true);\r\n        axios.defaults.headers.common = { 'api_key': `${token}`, \"id\" : id }\r\n        axios.post(`${serverApi}${getDriveById}`,axios.defaults.headers.common).then(res => {\r\n            console.log(res)\r\n            if (res.status === 200) {\r\n                console.log(\"response\", res)\r\n                setDataModal(res.data.data);\r\n            } else {\r\n                console.log(\"else\", res.status)\r\n                alert(res.data.message)\r\n            }\r\n        }).catch(err => alert(err.response.data.message))\r\n    }\r\n\r\n    const handleApply=(id)=>{\r\n        axios.defaults.headers.common = { 'api_key': `${token}`, \"post_id\" : id }\r\n        axios.post(`${serverApi}${applyApi}`,axios.defaults.headers.common).then(res => {\r\n            console.log(res)\r\n            if (res.status === 200) {\r\n                console.log(\"response\", res)\r\n                alert(\"succesfully applied\")\r\n            } else {\r\n                console.log(\"else\", res.status)\r\n                alert(res.data.message)\r\n            }\r\n        }).catch(err => alert(err.response.data.message))\r\n    }\r\n\r\n    const [tableArray, setTableArray] = useState([]);\r\n    \r\n    const [dataModal,setDataModal]=useState([]);\r\n\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    useEffect(() => {\r\n        // setTableArray(TableArray);\r\n\r\n        axios.defaults.headers.common = { 'api_key': `${token}` }\r\n        axios.get(`${serverApi}${campusDriveApi}`).then(res => {\r\n            console.log(res)\r\n            if (res.status === 200) {\r\n                console.log(\"response\", res)\r\n                setTableArray(res.data.data);\r\n            } else {\r\n                console.log(\"else\", res.status)\r\n                alert(res.data.message)\r\n            }\r\n        }).catch(err => alert(err.response.data.message))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <PDtableWrapper>\r\n                <Table className=\"table-style\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Logo</th>\r\n                            <th>Company</th>\r\n                            <th>Position</th>\r\n                            <th>CTC</th>\r\n                            <th>Location</th>\r\n                            <th>Technology</th>\r\n                            <th>Venue</th>\r\n                            {/* <th>Elegibility</th> */}\r\n                            {/* <th>Status</th> */}\r\n                            <th>Deadline</th>\r\n                            <th>Details</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableArray.map((props) => {\r\n                            return (\r\n                                <tr>\r\n                                    <th scope=\"row\">{rowNumber++}</th>\r\n                                    <td><img src={Logo} alt=\"NA\" height=\"30\" width=\"30\" /></td>\r\n                                    <td><b>{props.company_name}</b></td>\r\n                                    <td>{props.position}</td>\r\n                                    <td>{props.ctc}</td>\r\n                                    <td>{props.location}</td>\r\n                                    <td>{props.technologies}</td>\r\n                                    <td className=\"badge-style\">\r\n                                        <Badge color={(props.venue === \"LDRP\" ? \"primary\" : \"warning\")}>\r\n                                            {props.venue}\r\n                                        </Badge>\r\n                                    </td>\r\n                                    {/* <td className=\"badge-style\">\r\n                                        <Badge color={props.eligibility ? \"success\" : \"danger\"}>\r\n                                            {props.eligibility ? \"YES\" : \"NO\"}\r\n                                        </Badge>\r\n                                    </td> */}\r\n                                    {/* <td className=\"badge-style\">\r\n                                        <Badge color={props.status ? \"success\" : \"danger\"}>\r\n                                            {props.status ? \"APPLIED\" : \"NOT APPLIED\"}\r\n                                        </Badge>\r\n                                    </td> */}\r\n                                    <td>{props.deadline}</td>\r\n                                    <td><Button size=\"sm\" className=\"bttn\" onClick={()=>{openModalById(props.id)}}>View</Button></td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Modal isOpen={isOpenModal} toggle={toggleModal}>\r\n                    <ModalHeader\r\n                        style={{ backgroundColor: greenColor }}\r\n                    >\r\n                        <strong style={{ color: whiteColor }} >{dataModal.company_name}</strong>\r\n                    </ModalHeader>\r\n                    <ModalBody\r\n                        style={{ backgroundColor: whiteColor }}\r\n                    >\r\n                        <b>Position:</b>{dataModal.position}<br />\r\n                        <b>CTC:</b>{dataModal.ctc}<br />\r\n                        <b>Locations:</b>{dataModal.location}<br />\r\n                        <b>Technologies:</b>{dataModal.technologies}<br />\r\n                        <b>Venue:</b>{dataModal.venue}<br />\r\n                        <b>Deadline:</b>{dataModal.deadline}<br />\r\n                        <b>Minimum Requirements:</b><br />\r\n                        <b>Min. CPI:</b>{dataModal.min_cpi}<br />\r\n                        <b>Min. 10th + 12th Average:</b>{dataModal.aggregate_10_12}<br />\r\n                        <b>Allowed Backlogs:</b>{dataModal.backlogs}<br />\r\n                    </ModalBody>\r\n                    <ModalFooter style={{ backgroundColor: whiteColor }}>\r\n                        <Button style={{ backgroundColor: greenColor }} size=\"sm\" onClick={()=>{handleApply(dataModal.id)}}>Apply</Button>{' '}\r\n                        <Button color=\"secondary\" size=\"sm\" onClick={toggleModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </PDtableWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PDtable;","import React, { useState } from \"react\"\r\nimport { Collapse } from \"reactstrap\";\r\n\r\nimport MainNavbar from \"../MainNavbar\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport PDtable from \"./PDtable/PDtable\";\r\n\r\nconst PlacementDrives = () => {\r\n\r\n    const [isOpenFilter, setisOpenFilter] = useState(false);\r\n    const toggleFilter = () => setisOpenFilter(!isOpenFilter);\r\n\r\n    return (\r\n        <div>\r\n            <MainNavbar title=\"Placement Drives\" toggleFilter={toggleFilter} />\r\n\r\n            <Collapse isOpen={isOpenFilter}>\r\n                <Filter toggleFilter={toggleFilter} />\r\n            </Collapse>\r\n\r\n            <PDtable />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlacementDrives;","import styled from \"styled-components\"\r\nimport { greenColor, whiteColor, fontBlackColor } from \"../../../constants/constants\";\r\n\r\nexport const ProfileWrapper=styled.div`\r\n\r\n.card-profile{\r\n    font-size:13px;\r\n    width:70%;\r\n    margin:auto;\r\n    margin-top:20px;\r\n}\r\n\r\n.card-profile-header{\r\n    background-color:${greenColor};\r\n    color:white;\r\n}\r\n\r\n.table-profile{\r\n    margin-top:10px;\r\n    font-size:13px;\r\n}\r\n\r\n.table-profile tbody tr th{\r\n    color:rgb(100,100,100);\r\n    width:35%;\r\n}\r\n\r\n.table-profile tbody tr th,td{\r\n    margin:0px;\r\n    padding:4px;\r\n\r\n}\r\n\r\n.table-profile tbody tr td{\r\n    color:${fontBlackColor};\r\n    font-weight:bold;\r\n}\r\n\r\n#rawHeader td{\r\n    background-color:${whiteColor};\r\n    color:${greenColor};\r\n}\r\n\r\n#eduTable tbody tr th{\r\n    width:15%;\r\n}\r\n#eduTable{\r\n    text-align:center;\r\n}\r\n \r\n//----------edit profilr-----------\r\n\r\n.edit-input-style{\r\n    width:50%;\r\n    height:25px;\r\n}\r\n#input-long{\r\n    width:100%;\r\n    margin-bottom:7px;\r\n\r\n    // height:25px;\r\n}\r\n\r\n.checkBox-btn{\r\n    background-color:${whiteColor};\r\n    color:${fontBlackColor};\r\n    margin-right:10px;\r\n}\r\n\r\n// .checkBox-btn:hover{\r\n//     background-color:${greenColor};\r\n//     color:${whiteColor};\r\n// }\r\n\r\n.bttn-save{\r\n    background-color:${greenColor};\r\n    float:right;\r\n}\r\n`;","import React, { useState, useEffect } from \"react\";\r\nimport MainNavbar from \"../MainNavbar\";\r\nimport { ProfileWrapper } from \"./Profile.style\";\r\nimport { Card, CardHeader, CardBody, Row, Col, Table } from \"reactstrap\";\r\nimport Avatar from \"react-avatar\";\r\nimport { viewProfile, serverApi, userById, whiteColor, greenColor } from \"../../../constants/constants\";\r\nimport axios from \"axios\";\r\n\r\n// import Logo from \"../../../images/ldrp_logo.png\"\r\n\r\nconst Profile = () => {\r\n    // const[array,setArray]=useState([\"shurvir\",\"1653465313\",\"ce\"]);\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [enrollment, setEnrollment] = useState(\"\")\r\n    const [department, setDepartment] = useState(\"\");\r\n    const [pYear, setpYear] = useState(\"\")\r\n\r\n    const [mobile, setMobile] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [status, setStatus] = useState()\r\n    const [company, setCompany] = useState(\"\")\r\n    const [tenth, setTenth] = useState(0)\r\n    const [twelve, setTwelve] = useState(0)\r\n\r\n    const [cpi, setCpi] = useState(\"\")\r\n    const [backlog, setBacklog] = useState(\"\")\r\n\r\n    let token = localStorage.getItem(\"token\")\r\n\r\n    useEffect(() => {\r\n        axios.defaults.headers.common = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"api_key\": `${token}`\r\n        }\r\n\r\n        axios.post(`${serverApi}${userById}`, axios.defaults.headers.common).then(res => {\r\n            console.log(res.status)\r\n            if (res.status === 200) {\r\n                setFullName(`${res.data.data.first_name} ${res.data.data.last_name}`)\r\n                setEnrollment(res.data.data.enroll)\r\n                setDepartment(res.data.data.department)\r\n                setpYear(res.data.data.batch)\r\n                setEmail(res.data.data.email)\r\n            } else {\r\n                console.log(\"else\", res.status)       \r\n            }\r\n        }).catch(err => alert(err.response.data.message))\r\n        \r\n        axios.post(`${serverApi}${viewProfile}`, axios.defaults.headers.common).then(res => {\r\n            console.log(res.status)\r\n            if (res.status === 200) {\r\n                setMobile(res.data.data.mobile_number)\r\n                setStatus(res.data.data.placed_status)\r\n                setTenth(res.data.data.percentage_10th)\r\n                setTwelve(res.data.data.percentage_12th)\r\n                setCpi(res.data.data.cpi)\r\n                setBacklog(res.data.data.backlog)\r\n\r\n            } else {\r\n                console.log(\"else\", res.status)\r\n                alert(res.data.message)\r\n            }\r\n        }).catch(err => alert(err.response.data.message))\r\n    }, [])\r\n    \r\n    return (\r\n        <ProfileWrapper>\r\n            <MainNavbar title=\"Profile\" />\r\n            <Card className=\"card-profile\">\r\n                <CardHeader className=\"card-profile-header\">\r\n                    <strong>Personal Details</strong>\r\n                    {/* {array}<button onClick={()=>{setArray([name,enrollment,department])}}>change</button> */}\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Row>\r\n                        <Col>\r\n                            <div>\r\n                                <Avatar\r\n                                    name={fullName}\r\n                                    color={whiteColor}\r\n                                    fgColor={greenColor}\r\n                                    round={true}\r\n                                    size='120'\r\n                                    // round={true}\r\n                                    // src={Logo}\r\n                                    style={{\r\n                                        marginLeft: \"50px\",\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Table borderless className=\"table-profile\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <td>{fullName}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Enrollment No.</th>\r\n                                            <td>{enrollment}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Department</th>\r\n                                            <td>{department}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Passing year</th>\r\n                                            <td>{pYear}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div>\r\n                                <Table borderless className=\"table-profile\">\r\n                                    <tbody>\r\n                                        <tr id=\"rawHeader\">\r\n                                            <td>Contact Info</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Mobile No.</th>\r\n                                            <td>+91 {mobile}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Email-id</th>\r\n                                            <td>{email}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                            <div>\r\n                                <Table borderless className=\"table-profile\">\r\n                                    <tbody>\r\n                                        <tr id=\"rawHeader\">\r\n                                            <td>Placement Info</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Status</th>\r\n                                            <td>{status?\"PLACED\":\"UNPLACED\"}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Company</th>\r\n                                            <td>{company}</td>\r\n                                        </tr>\r\n\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n\r\n            <Card className=\"card-profile\">\r\n                <CardHeader className=\"card-profile-header\">\r\n                    <strong>Educational Details</strong>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <div>\r\n                        <Table borderless className=\"table-profile\" id=\"eduTable\">\r\n                            <tbody>\r\n                                <tr id=\"rawHeader\">\r\n                                    <td>School Education</td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Std.</th>\r\n                                    <th>Percentages</th>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>10th</td>\r\n                                    <td><span>{tenth}</span> %</td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>12th</td>\r\n                                    <td><span>{twelve}</span> %</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    <div>\r\n                        <Table borderless className=\"table-profile\" id=\"eduTable\">\r\n                            <tbody>\r\n                                <tr id=\"rawHeader\">\r\n                                    <td>B.E.</td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>CPI</th>\r\n                                    <td>{cpi}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Backlogs</th>\r\n                                    <td>{backlog}</td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </ProfileWrapper>\r\n    )\r\n}\r\nexport default Profile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport MainNavbar from '../MainNavbar';\r\nimport { ProfileWrapper } from '../Profile/Profile.style';\r\nimport { Card, CardHeader, CardBody, Row, Col, Table, Input, CardFooter, Button, ButtonGroup, Modal, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport Avatar from \"react-avatar\";\r\nimport axios from \"axios\";\r\nimport { serverApi, editProfile, userById, viewProfile, greenColor, whiteColor } from '../../../constants/constants';\r\n\r\nconst EditProfile = () => {\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [enrollment, setEnroll] = useState(\"\");\r\n    const [department, setDepartment] = useState(\"\");\r\n    const [pYear, setpYear] = useState(\"\");\r\n    const handleSubmit = () => {\r\n\r\n        axios.defaults.headers.common = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"api_key\": `${token}`\r\n        }\r\n        const data = {\r\n            backlog: backlog,\r\n            mobile_number: mobile,\r\n            cpi: cpi,\r\n            percentage_10th: tenth,\r\n            percentage_12th: twelve,\r\n            placed_status: status,\r\n        }\r\n        axios.post(`${serverApi}${editProfile}`, data, axios.defaults.headers.common).then(res => {\r\n            console.log(res.status)\r\n            if (res.status === 200) {\r\n                // localStorage.setItem(\"token\", res.data.data.token)\r\n                console.log(\"response\", res)\r\n                setEditSucced(true)\r\n\r\n            } else {\r\n                console.log(\"else\", res.status)\r\n                alert(res.data.message)\r\n            }\r\n        }).catch(err => alert(err.response.data.message))\r\n    }\r\n\r\n    const [mobile, setMobile] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [status, setStatus] = useState(false)\r\n    const [company, setCompany] = useState(\"\")\r\n    const [tenth, setTenth] = useState(0)\r\n    const [twelve, setTwelve] = useState(0)\r\n    const [cpi, setCpi] = useState(\"\")\r\n    const [backlog, setBacklog] = useState(\"\")\r\n    const [edit_succed, setEditSucced] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        axios.defaults.headers.common = { 'api_key': `${token}` }\r\n        axios.post(`${serverApi}${userById}`, axios.defaults.headers.common).then(res => {\r\n            console.log(res)\r\n            if (res.status === 200) {\r\n                console.log(\"response\", res)\r\n                setFullName(`${res.data.data.first_name} ${res.data.data.last_name}`)\r\n                setEnroll(res.data.data.enroll)\r\n                setDepartment(res.data.data.department)\r\n                setpYear(res.data.data.batch)\r\n                setEmail(res.data.data.email)\r\n            } else {\r\n                console.log(\"else\", res.status)\r\n                alert(res.data.message)\r\n            }\r\n        }).catch(err => alert(err.response.data.message))\r\n\r\n\r\n        axios.post(`${serverApi}${viewProfile}`, axios.defaults.headers.common).then(res => {\r\n            console.log(res)\r\n            if (res.status === 200) {\r\n                console.log(\"response\", res)\r\n                setMobile(res.data.data.mobile_number)\r\n                setStatus(res.data.data.placed_status)\r\n                setTenth(res.data.data.percentage_10th)\r\n                setTwelve(res.data.data.percentage_12th)\r\n                setCpi(res.data.data.cpi)\r\n                setBacklog(res.data.data.backlog)\r\n            } else {\r\n                console.log(\"else\", res.status)\r\n                alert(res.data.message)\r\n            }\r\n        }).catch(err => alert(err.response.data.message))\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <ProfileWrapper>\r\n                <MainNavbar title=\"Edit Profile\" />\r\n\r\n                <Card className=\"card-profile\">\r\n                    <CardHeader className=\"card-profile-header\">\r\n                        <strong>Personal Details</strong>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <Row>\r\n                            <Col>\r\n                                <div>\r\n                                    <Avatar\r\n                                        name={fullName}\r\n                                        color={whiteColor}\r\n                                        fgColor={greenColor}\r\n                                        round={true}\r\n                                        size='120'\r\n                                        // round={true}\r\n                                        // src={Logo}\r\n                                        style={{\r\n                                            marginLeft: \"50px\",\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <Table borderless className=\"table-profile\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th>Name</th>\r\n                                                <td>{fullName}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Enrollment No.</th>\r\n                                                <td>{enrollment}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Department</th>\r\n                                                <td>{department}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Passing year</th>\r\n                                                <td>{pYear}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </Col>\r\n                            <Col>\r\n                                <div>\r\n                                    <Table borderless className=\"table-profile\">\r\n                                        <tbody>\r\n                                            <tr id=\"rawHeader\">\r\n                                                <td>Contact Info</td>\r\n                                                <td></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Mobile No.</th>\r\n                                                <td ><Row>\r\n                                                    +91 <Input type=\"text\"\r\n                                                        maxLength=\"10\"\r\n                                                        size=\"sm\"\r\n                                                        value={mobile}\r\n                                                        onChange={(e) => { setMobile(e.target.value) }}\r\n                                                        className=\"edit-input-style\"\r\n                                                    />\r\n\r\n                                                </Row>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Email-id</th>\r\n                                                <td>\r\n                                                    <Input type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        id=\"input-long\"\r\n                                                        value={email}\r\n\r\n                                                        onChange={(e) => { setEmail(e.target.value) }}\r\n                                                        className=\"edit-input-style\"\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                            {/* <tr>\r\n                                                <th>Address</th>\r\n                                                <td>\r\n                                                    <Input type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        id=\"input-long\"\r\n                                                        className=\"edit-input-style\"\r\n                                                    />\r\n                                                    <Input type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        id=\"input-long\"\r\n                                                        className=\"edit-input-style\"\r\n                                                    />\r\n                                                </td>\r\n                                            </tr> */}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                                <div>\r\n                                    <Table borderless className=\"table-profile\">\r\n                                        <tbody>\r\n                                            <tr id=\"rawHeader\">\r\n                                                <td>Placement Info</td>\r\n                                                <td></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Status</th>\r\n                                                <td>\r\n                                                    <ButtonGroup>\r\n                                                        <Button className=\"checkBox-btn\" size=\"sm\" onClick={() => setStatus(true)} active={status === true}>Placed</Button>\r\n                                                        <Button className=\"checkBox-btn\" size=\"sm\" onClick={() => setStatus(false)} active={status === false}>UnPlaced</Button>\r\n                                                    </ButtonGroup>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Company</th>\r\n                                                <td>\r\n                                                    <Input type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        onChange={(e) => { setCompany(e.target.value) }}\r\n                                                        value={company}\r\n                                                        className=\"edit-input-style\"\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </CardBody>\r\n\r\n                </Card>\r\n\r\n                <Card className=\"card-profile\">\r\n                    <CardHeader className=\"card-profile-header\">\r\n                        <strong>Educational Details</strong>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <div>\r\n                            <Table borderless className=\"table-profile\" id=\"eduTable\">\r\n                                <tbody>\r\n                                    <tr id=\"rawHeader\">\r\n                                        <td>School Education</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Std.</th>\r\n                                        <th>Percentages</th>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>10th (%)</td>\r\n                                        <td>\r\n                                            <Input type=\"text\"\r\n                                                size=\"sm\"\r\n                                                onChange={(e) => { setTenth(e.target.value) }}\r\n                                                value={tenth}\r\n\r\n                                            // className=\"edit-input-style\"\r\n                                            />\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>12th (%)</td>\r\n                                        <td>\r\n                                            <Input type=\"text\"\r\n                                                size=\"sm\"\r\n                                                onChange={(e) => { setTwelve(e.target.value) }}\r\n                                                value={twelve}\r\n                                            // className=\"edit-input-style\"\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                        <div>\r\n                            <Table borderless className=\"table-profile\" id=\"eduTable\">\r\n                                <tbody>\r\n                                    <tr id=\"rawHeader\">\r\n                                        <td>B.E.</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>CPI</th>\r\n                                        <td> <Input type=\"text\"\r\n                                            size=\"sm\"\r\n                                            className=\"edit-input-style\"\r\n                                            onChange={(e) => { setCpi(e.target.value) }}\r\n                                            value={cpi}\r\n\r\n                                        /></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Backlogs</th>\r\n                                        <td> <Input type=\"text\"\r\n                                            size=\"sm\"\r\n                                            onChange={(e) => { setBacklog(e.target.value) }}\r\n                                            value={backlog}\r\n                                            className=\"edit-input-style\"\r\n                                        /></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </CardBody>\r\n\r\n                    <CardFooter>\r\n                        <Button size=\"sm\" className='bttn-save' onClick={handleSubmit}>Save</Button>\r\n                    </CardFooter>\r\n                </Card>\r\n\r\n                <Modal isOpen={edit_succed}>\r\n                    <ModalBody size='sm'>\r\n                        Successfully Saved\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button style={{ backgroundColor: greenColor }} size=\"sm\" className='bttn-save' onClick={() => { setEditSucced(false) }}>Ok</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </ProfileWrapper>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n// import axios from \"axios\";\r\n// import { BaseUrl } from \"../helper/enviroment\";\r\n// import Headers from \"./Header\";\r\n\r\n// export default class AdminServices {\r\n//   static changepassword(params) {\r\n//     Headers.setHeaders();\r\n//     return axios.put(`${BaseUrl}/admin/changepassword`, params);\r\n//   }\r\n\r\n//   static update(params) {\r\n//     Headers.setHeaders();\r\n//     return axios.put(`${BaseUrl}/admin/update`, params);\r\n//   }\r\n\r\n//   static logout() {\r\n//     Headers.setHeaders();\r\n//     return axios.delete(`${BaseUrl}/admin/logout`);\r\n//   }\r\n// }\r\n\r\n// import { store } from \"../redux/store\";\r\n// import axios from \"axios\";\r\n\r\n// class Headers {\r\n//   static setHeaders = () => {\r\n//     axios.defaults.headers.common[\r\n//       \"access-token\"\r\n//     ] = store.getState().auth.accessToken;\r\n//   };\r\n// }\r\n\r\n// export default Headers;\r\n\r\nexport default EditProfile;","import styled from 'styled-components'\r\nimport { greenColor } from '../../../constants/constants'\r\n\r\nexport const ContactusWrapper=styled.div`\r\n.contactus-card {\r\n    box-shadow:  rgba(1, 162, 129, 0.2) 0px 4px 7px 0px;\r\n    font-size:14px;\r\n}\r\np {\r\n    color:${greenColor};\r\n    margin:10px;\r\n    font-weight:bold;\r\n}\r\n.table-style{\r\n    font-weight:bold;\r\n}\r\n.table-style tbody tr th{\r\n    color:rgb(100,100,100);\r\n}\r\n`","export const contactArray=[\r\n    {\r\n        name:'Ketan Chaudhary',\r\n        post:'TPO',\r\n        email:'ketan@ldrp.com',\r\n        mobile:'9876543210'\r\n    },\r\n    {\r\n        name:'LDRP-ITR',\r\n        post:'LDRP-ITR',\r\n        email:'info@ldrp.ac.in',\r\n        mobile:'079 - 23241492'\r\n    },\r\n    \r\n]","import React from 'react';\r\nimport MainNavbar from '../MainNavbar';\r\nimport { Card, CardHeader, CardFooter, Table, Row, Col } from 'reactstrap';\r\nimport Avatar from \"react-avatar\";\r\nimport { whiteColor, greenColor } from '../../../constants/constants';\r\nimport { ContactusWrapper } from './ContactUs.style';\r\nimport { contactArray } from './contactArray';\r\n\r\n\r\nconst ContactUs = () => {\r\n    return (\r\n        <div>\r\n            <ContactusWrapper>\r\n                <MainNavbar title=\"Contact Us\" />\r\n                <Row>\r\n                    {contactArray.map((props) => {\r\n                        return (\r\n                            <Col sm='20' className=\"m-3 ml-4\">\r\n                                <Card className='contactus-card'>\r\n                                    <CardHeader>\r\n                                        <center>\r\n                                            <Avatar\r\n                                                className='avatar'\r\n                                                name={props.name}\r\n                                                round={true}\r\n                                                size={150}\r\n                                                color={whiteColor}\r\n                                                fgColor=\"black\"\r\n                                            /><br />\r\n                                            <p>{props.post}</p>\r\n                                        </center>\r\n                                    </CardHeader>\r\n                                    <CardFooter>\r\n                                        <Table borderless className='table-style' >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <th>Name:</th>\r\n                                                    <td>{props.name}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>Email:</th>\r\n                                                    <td>{props.email}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>Mobile:</th>\r\n                                                    <td>{props.mobile}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </CardFooter>\r\n                                </Card>\r\n                            </Col>\r\n                        );\r\n                    }\r\n                    )}\r\n                </Row>\r\n            </ContactusWrapper>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ContactUs;","import React from \"react\";\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport PlacementDrives from \"./PlacementDrives/PlacementDrives\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport EditProfile from \"./EditProfile/EditProfile\";\r\nimport ContactUs from \"./Contactus/ContactUs\";\r\n\r\nconst Main = () => {\r\n  let match = useRouteMatch();\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={`${match.path}`} component={Dashboard} />\r\n        <Route exact path={`${match.path}/placement-drives`} component={PlacementDrives} /> \r\n        <Route exact path={`${match.path}/profile`} component={Profile} /> \r\n        <Route exact path={`${match.path}/edit-profile`} component={EditProfile} /> \r\n        <Route exact path={`${match.path}/contact-us`} component={ContactUs} /> \r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import styled from \"styled-components\"\r\n\r\nexport const LoginScreenWrapper = styled.div`\r\n.sidebar-style {\r\n    display: grid;\r\n    grid-template-columns: 15% 85%;\r\n  }\r\n`;","import React, { useState } from \"react\";\r\nimport NavBar from \"./Navbar/NavBar\";\r\nimport SideBar from \"./Sidebar/SideBar\";\r\nimport Main from \"./Main/Main\";\r\nimport { LoginScreenWrapper } from \"./LoginScreen.style\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst LoginScreen = () => {\r\n  const [isLogout, setisLogout] = useState(false);\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\")\r\n    setisLogout(true);\r\n  }\r\n  if (isLogout)\r\n    return(<Redirect to=\"/placement-portal\"/>)\r\n  else\r\n      return (\r\n      <div>\r\n        <LoginScreenWrapper>\r\n          <div className=\"sidebar-style\">\r\n            <div>\r\n              <SideBar />\r\n            </div>\r\n            <div>\r\n              <NavBar logout={logout} />\r\n              <Main />\r\n            </div>\r\n          </div>\r\n        </LoginScreenWrapper>\r\n      </div>\r\n      );\r\n  };\r\n  \r\n  export default LoginScreen;\r\n","import React from 'react';\r\nimport {\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nfunction Protected(props) {\r\n    const Target = props.Target\r\n    var token = localStorage.getItem('token')\r\n    return <div>{token ? <Redirect to =\"placement-portal/loginscreen\" /> : <Target />}</div>\r\n}\r\n\r\nexport default Protected;","import React from 'react';\r\nimport {\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nfunction Login_Protected(props) {\r\n    const Target = props.Target\r\n    var token = localStorage.getItem('token')\r\n    return <div>{token ? <Target/> : <Redirect to =\"/placement-portal\" />}</div>\r\n}\r\n\r\nexport default Login_Protected;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ForgotPassword extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <br />\r\n                <div>\r\n                    Email:\r\n                    <input\r\n                        name='email'\r\n                        type='text'\r\n                        // value={props.email}\r\n                        placeholder=\"Email\"\r\n                    // onChange={props.handleChange}\r\n                    />\r\n                    <button  >Get OTP</button>\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    Enter OTP:\r\n                    <input\r\n                        name='otp'\r\n                        type='text'\r\n                        maxLength=\"41\"\r\n                        // value={props.email}\r\n                        placeholder=\"Enter 6 digit OTP\"\r\n                    // onChange={props.handleChange}\r\n                    />\r\n                    <button  >Submit</button>\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <Link to=\"/placement-portal\">\r\n                        Login\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ForgotPassword;","import styled from \"styled-components\"\r\nimport { greenColor, whiteColor } from \"../../constants/constants\";\r\n\r\nexport const NavBarWrapper = styled.div`\r\n.background-style {\r\n    background-color:${greenColor};\r\n  }\r\n\r\n.header-style{\r\n  font-size:15pt;\r\n  color:white;\r\n}\r\n\r\n.navlink-style{\r\n  cursor:pointer;\r\n  margin:0;\r\n  margin-top:8px;\r\n  margin-bottom:8px;\r\n  padding:0;\r\n}\r\n\r\n.dropdown-style{\r\n  font-size:13px;\r\n  padding:0;\r\n}\r\n\r\n.dropdown-item{\r\n  color:${greenColor};\r\n  border-bottom: 1px solid ;\r\n  border-bottom-color:rgb(213,213,213);\r\n}\r\n.dropdown-item:hover{\r\n  color:${whiteColor};\r\n  background-color:${greenColor};\r\n}\r\n\r\n`;","import React, { useState ,useEffect} from \"react\";\r\nimport {\r\n  Button,Collapse,Navbar,NavbarToggler,Nav,NavItem,NavLink,NavbarBrand,Popover,PopoverBody,Tooltip,Badge,Modal,ModalFooter,\r\n  ModalBody,Dropdown,DropdownToggle,DropdownMenu,DropdownItem\r\n} from \"reactstrap\";\r\n\r\nimport { NavBarWrapper } from \"./NavBar.style\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBell, faPowerOff } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Avatar from \"react-avatar\";\r\nimport { whiteColor, greenColor,userById, serverApi} from \"../../constants/constants\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\"\r\n\r\nconst NavBar = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n  const doogle = () => setPopoverOpen(!popoverOpen);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  const toggleTooltip = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  const [isOpenModal, setisOpenModal] = useState(false);\r\n  const toggleModal = () => setisOpenModal(!isOpenModal);\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\r\n\r\n  const [first_name,setFirstName]=useState(\"\");\r\n  const [last_name,setLastName]=useState(\"\");\r\n\r\n  let token=localStorage.getItem(\"token\")\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    axios.defaults.headers.common = { 'api_key': `${token}` }\r\n    axios.post(`${serverApi}${userById}`, axios.defaults.headers.common).then(res => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n            console.log(\"response\", res)\r\n            setFirstName(res.data.data.first_name)\r\n            setLastName(res.data.data.last_name)\r\n        } else {\r\n            console.log(\"else\", res.status)\r\n            alert(res.data.message)\r\n        }\r\n    }).catch(err => alert(err.response.data.message))\r\n\r\n}, [first_name,last_name])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <NavBarWrapper>\r\n        {/* //Navbar */}\r\n\r\n        <Navbar light expand=\"md\" className=\"background-style\">\r\n          <NavbarBrand><div className=\"header-style\"><b>LDRP</b> PLACEMENT PORTAL</div></NavbarBrand>\r\n          <NavbarToggler onClick={toggle} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n\r\n              <div>\r\n                <NavItem  >\r\n                  <NavLink className=\"navlink-style\">\r\n                    <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown} size=\"sm\">\r\n                      <DropdownToggle\r\n                        style={{\r\n                          backgroundColor: greenColor,\r\n                          border: greenColor,\r\n                          padding: \"0\"\r\n                        }} caret>\r\n                        <Avatar\r\n                          name={`${first_name} ${last_name}`}\r\n                          round={true}\r\n                          size={30}\r\n                          color={whiteColor}\r\n                          fgColor=\"black\"\r\n                        />{'  '}\r\n                        <small>welcome, {first_name}</small>\r\n                      </DropdownToggle>\r\n\r\n                      <DropdownMenu className=\"dropdown-style\">\r\n                        <Link to=\"/loginscreen-admin\"\r\n                          style={{ textDecoration: \"none\" }}\r\n                        >\r\n                          <DropdownItem className=\"dropdown-item\">Change Password</DropdownItem>\r\n                        </Link>\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  </NavLink>\r\n                </NavItem>\r\n              </div>\r\n\r\n              <NavItem >\r\n                <NavLink className=\"navlink-style\" onClick={doogle}>\r\n                  <FontAwesomeIcon id=\"Noti-Popover\" icon={faBell} />\r\n                  <sup><Badge pill color=\"danger\">3</Badge></sup>\r\n                </NavLink>\r\n              </NavItem>\r\n\r\n              <NavItem className=\"mr-5\">\r\n                <NavLink className=\"navlink-style\" onClick={toggleModal}>\r\n                  <FontAwesomeIcon id=\"logoutTooltip\" icon={faPowerOff} />\r\n                </NavLink>\r\n              </NavItem>\r\n\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n\r\n\r\n        {/* // Modal */}\r\n\r\n        <Modal isOpen={isOpenModal} toggle={toggleModal}>\r\n          <ModalBody style={{ backgroundColor: whiteColor }}>\r\n            Do you want to logout?\r\n          </ModalBody>\r\n          <ModalFooter style={{ backgroundColor: whiteColor }}>\r\n            <Button style={{ backgroundColor: greenColor }} size=\"sm\" onClick={props.logout}>Yes</Button>{' '}\r\n            <Button color=\"secondary\" size=\"sm\" onClick={toggleModal}>No</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        {/* // Tooltip */}\r\n\r\n        <Tooltip placement=\"bottom\" isOpen={tooltipOpen} target=\"logoutTooltip\" toggle={toggleTooltip}>\r\n          Logout\r\n        </Tooltip>\r\n\r\n        {/* //popover */}\r\n\r\n        <Popover\r\n          placement=\"bottom\"\r\n          isOpen={popoverOpen}\r\n          target=\"Noti-Popover\"\r\n          toogle={doogle}\r\n          trigger=\"hover\"\r\n        >\r\n          {/* <PopoverHeader className=\"font-weight-bold\">\r\n            Notifications\r\n          </PopoverHeader> */}\r\n          <PopoverBody>\r\n            <div className=\"popover-style\">\r\n              <div>Notification-1</div>\r\n            </div>\r\n            <div className=\"popover-style\">\r\n              <div>Notification-2</div>\r\n            </div>\r\n            <div className=\"popover-style\">\r\n              <div>Notification-3</div>\r\n            </div>\r\n          </PopoverBody>\r\n        </Popover>\r\n\r\n      </NavBarWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from \"styled-components\"\r\nimport { greenColor, whiteColor, fontBlackColor } from \"../../constants/constants\";\r\n\r\nexport const SideBarWrapper=styled.div`\r\n.background-style {\r\n    background-color: ${whiteColor};\r\n    box-shadow: rgba(1, 162, 129, 0.2) 0px 4px 7px 0px;\r\n    height: 100vh;\r\n    position: fixed;\r\n    width:15%;\r\n    z-index: 2;\r\n  }\r\n\r\n  .sidebar-header {\r\n    text-align: center;\r\n  }\r\n\r\n  // .active {\r\n  //   background: linear-gradient(\r\n  //     45deg,\r\n  //     rgb(167, 139, 252),\r\n  //     rgb(82, 107, 248)\r\n  //   ) !important;\r\n  //   color: white !important;\r\n  // }\r\n\r\n  .clgLogo-background{\r\n    background-color: ${greenColor};\r\n    background-style:cover;\r\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 0px 10px 0px;\r\n    padding:6px;  \r\n  }\r\n\r\n  .clgLogo-background img{\r\n    margin-left:65px;\r\n  }\r\n\r\n//  .sidebar-navitem-style:hover{\r\n//    blackground-color:yellow;\r\n//  }\r\n\r\n.menu-navlink-style{\r\n  background-color:rgb(10, 196, 158);\r\n  color:white;\r\n  paadding:0;\r\n}\r\n\r\n.navlink-style{\r\n  color:${fontBlackColor};\r\n  font-size:11pt;\r\n  border-left: 4px solid;\r\n  border-left-color:${whiteColor};\r\n  border-bottom: 1px solid ;\r\n  border-bottom-color:rgb(213,213,213);\r\n}\r\n\r\n.navlink-style:hover{\r\n  color:${greenColor};\r\n  border-left-color:${greenColor};\r\n}\r\n\r\n`;","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faList, faChartPie, faUserTie, faBriefcase, faDatabase} from '@fortawesome/free-solid-svg-icons';\r\nimport { NavItem, NavLink, Nav, Navbar } from 'reactstrap';\r\nimport { SideBarWrapper } from \"./SideBar.style\";\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\n\r\nimport Logo from \"../../images/ldrp_logo.png\";\r\n\r\nconst SideBar = () => {\r\n  let match=useRouteMatch();\r\n  return (\r\n    <div>\r\n      <SideBarWrapper>\r\n        <div className=\"background-style\">\r\n          <div className=\"sidebar-header\">\r\n            <Navbar className=\"clgLogo-background\">\r\n              <img src={Logo} alt=\"loading\" height=\"50\" width=\"50\" />\r\n            </Navbar>\r\n            <div className=\"text-left \">\r\n              <Nav vertical className=\"list-unstyled pb-3\">\r\n                <NavItem >\r\n                  <NavLink className=\"menu-navlink-style\"> \r\n                    <FontAwesomeIcon icon={faBars} className=\"mr-2\" />MENU\r\n                  </NavLink>\r\n                </NavItem >\r\n          \r\n                <NavItem>\r\n                  <NavLink className=\"navlink-style\" tag={Link} to={`${match.url}`}>\r\n                    <FontAwesomeIcon icon={faChartPie} className=\"mr-2\" />Dashboard\r\n                  </NavLink>\r\n                </NavItem >\r\n\r\n                <NavItem >\r\n                  <NavLink className=\"navlink-style\" tag={Link} to={`${match.url}/placement-drives`}>\r\n                    <FontAwesomeIcon icon={faUserTie} className=\"mr-2\" />Placement Drives\r\n                  </NavLink>\r\n                </NavItem >\r\n\r\n                <NavItem >\r\n                  <NavLink className=\"navlink-style\" tag={Link} to={`${match.url}/add-drive`}>\r\n                    <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" />Add Drive\r\n                  </NavLink>\r\n                </NavItem>\r\n                \r\n                <NavItem >\r\n                  <NavLink className=\"navlink-style\" tag={Link} to={`${match.url}/student-log`}>\r\n                    <FontAwesomeIcon icon={faDatabase} className=\"mr-2\" />Student Log\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n              </Nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </SideBarWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import styled from \"styled-components\";\r\nimport { whiteColor, fontBlackColor, greenColor } from \"../../../constants/constants\";\r\n\r\n\r\nexport const DashboardWrapper = styled.div`\r\n  .background-style {\r\n    background-color:${whiteColor}; \r\n    height: 92vh;\r\n  }\r\n\r\n  .card-style {\r\n    box-shadow:  rgba(1, 162, 129, 0.2) 0px 4px 7px 0px;\r\n\r\n  }\r\n\r\n  .card-right-text{\r\n    font-size:15px;\r\n    color:${fontBlackColor};\r\n  //  border: 1px solid;\r\n    padding:0;\r\n    text-align:center;\r\n  }\r\n\r\n  .card-right-text span{\r\n    font-size:22px;\r\n    color:black;\r\n    font-weight:bold;\r\n  }\r\n\r\n  .card-left-icon{\r\n    color:${greenColor}\r\n  }\r\n`;\r\n//#d8d8d8","import styled from \"styled-components\";\r\nimport { whiteColor, fontBlackColor, greenColor, greenColorLight } from \"../../constants/constants\";\r\n\r\nexport const MainNavbarWrapper = styled.div`\r\n.main-navbar-style{\r\n    background-color:${whiteColor};\r\n    box-shadow:  rgba(1, 162, 129, 0.2) 0px 4px 7px 0px;\r\n    padding:0;\r\n  }\r\n\r\n  .navbrand-style {\r\n    color:${fontBlackColor};\r\n    font-size:15px;\r\n    margin-left:5px;\r\n    padding:8.5px;\r\n  }\r\n\r\n  .filter-style{\r\n    color:${greenColor};\r\n    margin-right:240px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .filter-style:hover{\r\n    color:${greenColorLight};\r\n  }\r\n\r\n  .search-container{\r\n    margin-top:4px;\r\n  }\r\n\r\n  .search-container Button{\r\n    font-size:15px;\r\n    padding-top:3px;\r\n    padding-bottom:3px;\r\n    background-color:${greenColor};\r\n    margin-bottom:3px;\r\n    border-color: ${greenColor};\r\n\r\n    border-radius:0px 15px 15px 0px;\r\n  }\r\n  .search-container Input{\r\n    display:inline-block;\r\n    margin:0px;\r\n    width:70%;\r\n    border-radius:15px 0px 0px 15px;\r\n}\r\n\r\n#edit-profile{\r\n  color:${greenColor};\r\n}\r\n#edit-profile:hover{\r\n  color:${greenColorLight};\r\n}\r\n`;","import React from \"react\"\r\nimport { MainNavbarWrapper } from \"./MainNavbar.style\"\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink, Input, Button } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFilter, faEdit, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\n\r\nconst MainNavbar = props => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div>\r\n            <MainNavbarWrapper>\r\n                <Navbar className=\"main-navbar-style\" light expand=\"md\">\r\n                    <NavbarBrand className=\"navbrand-style\">\r\n                        {props.title}\r\n                    </NavbarBrand>\r\n                    {location.pathname === \"/loginscreen-admin/placement-drives\" ?\r\n                        <Nav className=\"ml-auto filter-style\" navbar>\r\n                            <NavItem onClick={props.toggleFilter}>\r\n                                <FontAwesomeIcon icon={faFilter} className=\"mr-1\" />Filter\r\n                        </NavItem>\r\n                        </Nav>\r\n                        :\r\n                        <div></div>\r\n                    }\r\n                    {location.pathname === \"/loginscreen-admin/profile\" ?\r\n                        <Nav className=\"ml-auto filter-style\" navbar>\r\n                            <NavItem  >\r\n                                <NavLink id=\"edit-profile\" tag={Link} to=\"/loginscreen-admin/edit-profile\">\r\n                                    <FontAwesomeIcon icon={faEdit} className=\"mr-1\" />Edit Profile\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        :\r\n                        <div></div>\r\n                    }\r\n                    {location.pathname === \"/loginscreen-admin/student-log\" ?\r\n                        <Nav className=\"ml-auto filter-style\" navbar>\r\n                            <NavItem onClick={props.toggleFilter}>\r\n                                <div className='search-container'>\r\n                                    <Input size='sm' placeholder='Search' name='search' />\r\n                                    <Button size='sm'><FontAwesomeIcon icon={faSearch} className=\"mr-1\" /></Button>\r\n                                </div>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        :\r\n                        <div></div>\r\n                    }\r\n                </Navbar>\r\n            </MainNavbarWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainNavbar;","import React from \"react\";\r\nimport { DashboardWrapper } from \"./Dashboard.style\";\r\nimport { Row, Card, CardBody, Col, CardHeader } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUsers, faSitemap, faChartLine, faUserTie, faRupeeSign } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { greenColor } from \"../../../constants/constants\";\r\nimport MainNavbar from \"../MainNavbar\";\r\n\r\nconst bar = {\r\n  labels: ['Computer', 'IT', 'EC', 'Electrical', 'Civil', 'Automobile', 'Machanical'],\r\n  datasets: [\r\n    {\r\n      label: 'Placed Students',\r\n      backgroundColor: \"rgb(10, 196, 158)\",\r\n      borderColor: greenColor,\r\n      borderWidth: 2,\r\n      hoverBackgroundColor: greenColor,\r\n      barPercentage: 0.5,\r\n      // categoryPercentage:0.5,\r\n      // barThickness: 6,\r\n      // hoverBorderColor: 'rgba(255,99,132,1)',\r\n      data: [65, 59, 80, 80, 56, 55, 21],\r\n    },\r\n  ],\r\n};\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <DashboardWrapper>\r\n        <div className=\"background-style\">\r\n          <MainNavbar title=\"Dashboard\" />\r\n\r\n          <Row className=\"m-1 mt-5\">\r\n            <Col>\r\n              <Card className=\"m-0 card-style\">\r\n                <CardBody>\r\n                  <Row>\r\n                    <div className=\"m-3 mr-4 card-left-icon\">\r\n                      <FontAwesomeIcon icon={faSitemap} size=\"2x\" />\r\n                    </div>\r\n                    <div className=\"mt-2 card-right-text\">\r\n                      Departments\r\n                      <br />\r\n                      <span>7</span>\r\n                    </div>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card className=\"m-0 card-style\">\r\n                <CardBody>\r\n                  <Row>\r\n                    <div className=\"m-3 mr-4 card-left-icon\">\r\n                      <FontAwesomeIcon icon={faUsers} size=\"2x\" />\r\n                    </div>\r\n                    <div className=\"mt-2  card-right-text\">\r\n                      Total Students\r\n                      <br />\r\n                      <span>4</span>\r\n                    </div>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card className=\"m-0 card-style\">\r\n                <CardBody>\r\n                  <Row>\r\n                    <div className=\"m-3 mr-4 card-left-icon\">\r\n                      <FontAwesomeIcon icon={faChartLine} size=\"2x\" />\r\n                    </div>\r\n                    <div className=\"mt-2 card-right-text\">\r\n                      Placed Student\r\n                      <br />\r\n                      <span>3</span>\r\n                    </div>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card className=\"m-0 card-style\">\r\n                <CardBody>\r\n                  <Row>\r\n                    <div className=\"m-3 mr-4 card-left-icon\">\r\n                      <FontAwesomeIcon icon={faRupeeSign} size=\"2x\" />\r\n                    </div>\r\n                    <div className=\"mt-2  card-right-text\">\r\n                      Highest Package\r\n                      <br />\r\n                      <span>7.00</span> LPA\r\n                    </div>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card className=\"m-0 card-style\">\r\n                <CardBody>\r\n                  <Row>\r\n                    <div className=\"m-3 mr-4 card-left-icon\">\r\n                      <FontAwesomeIcon icon={faUserTie} size=\"2x\" />\r\n                    </div>\r\n                    <div className=\"mt-2  card-right-text\">\r\n                      Campus Drives\r\n                      <br />\r\n                      <span>5</span>\r\n                    </div>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card className=\"m-4 mt-4\">\r\n            <CardHeader>\r\n              PLACEMENT RECORD\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div>\r\n                <Bar data={bar} width={100} height={30} />\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n\r\n        </div>\r\n      </DashboardWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import styled from \"styled-components\";\r\nimport { greenColor } from \"../../../../constants/constants\";\r\n\r\nexport const FilterWrapper = styled.div`\r\n.filter-row{\r\n    margin:0;\r\n    padding:0;\r\n    font-size:13px;\r\n}\r\n\r\n.filter-col{\r\n    border-right:1px solid;\r\n    border-right-color:rgb(213,213,213);\r\n}\r\n\r\n.card-footer-button{\r\n    background-color:${greenColor};\r\n    margin:3px;\r\n}\r\n\r\n.input-group{\r\n    width:90px;\r\n    height:50px;\r\n}\r\n\r\n.input-addon{\r\n    height:31px;\r\n}\r\n`;","import React from 'react';\r\nimport { Card, CardFooter, Row, Col, FormGroup, Label, InputGroup, InputGroupAddon, InputGroupText, Input, Button } from 'reactstrap';\r\nimport { FilterWrapper } from './Filter.style';\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            <FilterWrapper>\r\n                <div>\r\n                    <Card>\r\n                        <Row className=\"filter-row\">\r\n                            <Col className=\"filter-col\" size=\"sm\">\r\n                                <FormGroup>\r\n                                    <Label><b>CTC:</b></Label>\r\n                                    <InputGroup className=\"input-group\" size=\"sm\">\r\n                                        <InputGroupAddon className=\"input-addon\" addonType=\"prepend\">\r\n                                            <InputGroupText>Min:</InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input maxLength=\"4\" />\r\n                                    </InputGroup>\r\n                                    <InputGroup className=\"input-group\" size=\"sm\">\r\n                                        <InputGroupAddon className=\"input-addon\" addonType=\"prepend\">\r\n                                            <InputGroupText>Max:</InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input maxLength=\"4\" />\r\n                                    </InputGroup>\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col className=\"filter-col\">\r\n                                <FormGroup>\r\n                                    <Label><b>Location:</b></Label>\r\n                                    <Input type=\"select\" multiple size=\"sm\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                        <option>6</option>\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col className=\"filter-col\">\r\n                                <FormGroup size=\"sm\">\r\n                                    <Label for=\"checkbox2\"><b>Technology:</b></Label>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" id=\"checkbox2\" />\r\n                                            Java\r\n                                                    </Label><br />\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" id=\"checkbox2\" />\r\n                                            Python\r\n                                                    </Label><br />\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" id=\"checkbox2\" />\r\n                                            React\r\n                                                    </Label>\r\n                                    </FormGroup>\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                            <Col className=\"filter-col\">\r\n                                <FormGroup size=\"sm\">\r\n                                    <Label for=\"checkbox3\"><b>Vanue:</b></Label>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" id=\"checkbox3\" />\r\n                                            On-Campus\r\n                                                    </Label><br />\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" id=\"checkbox3\" />\r\n                                            Off-Campus\r\n                                                </Label><br />\r\n                                    </FormGroup>\r\n                                </FormGroup>\r\n                            </Col>\r\n\r\n                            <CardFooter>\r\n\r\n                                <Button size=\"sm\" className=\"card-footer-button\" onClick={props.toggleFilter}>Apply</Button><br />\r\n                                <Button size=\"sm\" onClick={props.toggleFilter}>Cancel</Button><br />\r\n                                <Button size=\"sm\" className=\"card-footer-button\" onClick={props.toggleFilter}>Reset</Button>\r\n\r\n                            </CardFooter>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n            \r\n            </FilterWrapper>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import styled from \"styled-components\";\r\nimport { whiteColor, greenColor, greenColorLight } from \"../../../../constants/constants\";\r\n\r\nexport const PDtableWrapper = styled.div`\r\n.table-style{\r\n    // background-color:Black; \r\n    // color:white;\r\n    font-size:10pt;\r\n    text-align:center;\r\n}\r\n\r\n.table-style thead{\r\n    background-image: linear-gradient(to bottom, rgb(108,108,108) , rgb(69,69,69)); \r\n    color:${whiteColor}\r\n}\r\n\r\n.table-style thead tr th{\r\n    margin:10px;\r\n    padding:9px;\r\n} \r\n\r\n.table-style tbody tr td,th{\r\n    margin:0;\r\n    padding:3px;\r\n}\r\n\r\n.badge-style{\r\n  font-size:15px;\r\n}\r\n\r\n.table-style tbody tr th{\r\n    background-color:${whiteColor};\r\n}\r\n\r\n.bttn{\r\n    background-color:${greenColor}\r\n}\r\n\r\n.bttn:hover{\r\n    background-color:${greenColorLight};\r\n}\r\n`;","import React, { useState,useEffect} from 'react';\r\nimport { Table, Button, Badge, Modal, ModalHeader, ModalBody, ModalFooter, ButtonGroup } from 'reactstrap';\r\nimport Logo from \"../../../../images/capgemini_logo.png\"\r\nimport { TableArray } from '../TableArray';\r\nimport { greenColor, whiteColor,serverApi,campusDriveApi, getDriveById  } from '../../../../constants/constants';\r\nimport { PDtableWrapper } from './PDtable.style';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from \"axios\";\r\nconst PDtable = (props) => {\r\n    let rowNumber = 1;\r\n    const [isOpenModal, setisOpenModal] = useState(false);\r\n    const toggleModal = () => setisOpenModal(!isOpenModal);\r\n\r\n    const openModalById=(id)=>{\r\n        setisOpenModal(true);\r\n        axios.defaults.headers.common = { 'api_key': `${token}`, \"id\" : id }\r\n        axios.post(`${serverApi}${getDriveById}`,axios.defaults.headers.common).then(res => {\r\n            console.log(res)\r\n            if (res.status === 200) {\r\n                console.log(\"response\", res)\r\n                setDataModal(res.data.data);\r\n            } else {\r\n                console.log(\"else\", res.status)\r\n                alert(res.data.message)\r\n            }\r\n        }).catch(err => alert(err.response.data.message))\r\n    }\r\n    const [tableArray, setTableArray] = useState([]);\r\n    \r\n    const [dataModal,setDataModal]=useState([]);\r\n\r\n    let token = localStorage.getItem(\"token\");\r\n    useEffect(() => {\r\n        // setTableArray(TableArray);\r\n\r\n        axios.defaults.headers.common = { 'api_key': `${token}` }\r\n        axios.get(`${serverApi}${campusDriveApi}`).then(res => {\r\n            console.log(res)\r\n            if (res.status === 200) {\r\n                console.log(\"response\", res)\r\n                setTableArray(res.data.data);\r\n            } else {\r\n                console.log(\"else\", res.status)\r\n                alert(res.data.message)\r\n            }\r\n        }).catch(err => alert(err.response.data.message))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <PDtableWrapper>\r\n                <Table className=\"table-style\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Logo</th>\r\n                            <th>Company</th>\r\n                            <th>Position</th>\r\n                            <th>CTC</th>\r\n                            <th>Location</th>\r\n                            <th>Technology</th>\r\n                            <th>Venue</th>\r\n                            <th>Deadline</th>\r\n                            <th>Details</th>\r\n                            <th>Applications</th>\r\n                            <th>Student List</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableArray.map((props) => {\r\n                            return (\r\n                                <tr>\r\n                                    <th scope=\"row\">{rowNumber++}</th>\r\n                                    <td><img src={Logo} alt=\"NA\" height=\"30\" width=\"30\" /></td>\r\n                                    <td><b>{props.company_name}</b></td>\r\n                                    <td>{props.position}</td>\r\n                                    <td>{props.ctc}</td>\r\n                                    <td>{props.location}</td>\r\n                                    <td>{props.technologies}</td>\r\n                                    <td className=\"badge-style\">\r\n                                        <Badge color={(props.venue === \"LDRP\" ? \"primary\" : \"warning\")}>\r\n                                            {props.venue}\r\n                                        </Badge>\r\n                                    </td>\r\n\r\n                                    {/* <td className=\"badge-style\">\r\n                                        <Badge color={props.status ? \"success\" : \"danger\"}>\r\n                                            {props.status ? \"APPLIED\" : \"NOT APPLIED\"}\r\n                                        </Badge>\r\n                                    </td> */}\r\n                                    <td>{props.deadline}</td>\r\n                                    <td><Button size=\"sm\" className=\"bttn\" onClick={()=>{openModalById(props.id)}}>View</Button></td>\r\n                                    <td>0</td>\r\n                                    <td><Button size=\"sm\" className=\"bttn\">Show</Button></td>\r\n                                    <td><ButtonGroup>\r\n                                        <Button size=\"sm\" className=\"bttn\" ><FontAwesomeIcon icon={faEdit}/></Button>\r\n                                        <Button size=\"sm\" color=\"danger\"><FontAwesomeIcon icon={faTrashAlt}/></Button>\r\n                                    </ButtonGroup></td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Modal isOpen={isOpenModal} toggle={toggleModal}>\r\n                    <ModalHeader\r\n                        style={{ backgroundColor: greenColor }}\r\n                    >\r\n                        <strong style={{ color: whiteColor }} >{dataModal.company_name}</strong>\r\n                    </ModalHeader>\r\n                    <ModalBody\r\n                        style={{ backgroundColor: whiteColor }}\r\n                    >\r\n                        <b>Position:</b>{dataModal.position}<br />\r\n                        <b>CTC:</b>{dataModal.ctc}<br />\r\n                        <b>Locations:</b>{dataModal.location}<br />\r\n                        <b>Technologies:</b>{dataModal.technologies}<br />\r\n                        <b>Venue:</b>{dataModal.venue}<br />\r\n                        <b>Deadline:</b>{dataModal.deadline}<br />\r\n                        <b>Minimum Requirements:</b><br />\r\n                        <b>Min. CPI:</b>{dataModal.min_cpi}<br />\r\n                        <b>Min. 10th + 12th Average:</b>{dataModal.aggregate_10_12}<br />\r\n                        <b>Allowed Backlogs:</b>{dataModal.backlogs}<br />\r\n                    </ModalBody>\r\n                    <ModalFooter style={{ backgroundColor: whiteColor }}>\r\n                        <Button style={{ backgroundColor: greenColor }} size=\"sm\" onClick={toggleModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </PDtableWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PDtable;","import React, { useState } from \"react\"\r\nimport { Collapse } from \"reactstrap\";\r\n\r\nimport MainNavbar from \"../MainNavbar\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport PDtable from \"./PDtable/PDtable\";\r\n\r\nconst PlacementDrives = () => {\r\n\r\n    const [isOpenFilter, setisOpenFilter] = useState(false);\r\n    const toggleFilter = () => setisOpenFilter(!isOpenFilter);\r\n\r\n    return (\r\n        <div>\r\n            <MainNavbar title=\"Placement Drives\" toggleFilter={toggleFilter} />\r\n\r\n            <Collapse isOpen={isOpenFilter}>\r\n                <Filter toggleFilter={toggleFilter} />\r\n            </Collapse>\r\n\r\n            <PDtable />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlacementDrives;","import styled from \"styled-components\"\r\nimport { greenColor, whiteColor, fontBlackColor } from \"../../../constants/constants\";\r\n\r\nexport const ProfileWrapper=styled.div`\r\n\r\n.card-profile{\r\n    font-size:13px;\r\n    width:70%;\r\n    margin:auto;\r\n    margin-top:20px;\r\n}\r\n\r\n.card-profile-header{\r\n    background-color:${greenColor};\r\n    color:white;\r\n}\r\n\r\n.table-profile{\r\n    margin-top:10px;\r\n    font-size:13px;\r\n}\r\n\r\n.table-profile tbody tr th{\r\n    color:rgb(100,100,100);\r\n    width:35%;\r\n}\r\n\r\n.table-profile tbody tr th,td{\r\n    margin:0px;\r\n    padding:4px;\r\n\r\n}\r\n\r\n.table-profile tbody tr td{\r\n    color:${fontBlackColor};\r\n    font-weight:bold;\r\n}\r\n\r\n#rawHeader td{\r\n    background-color:${whiteColor};\r\n    color:${greenColor};\r\n}\r\n\r\n#eduTable tbody tr th{\r\n    width:15%;\r\n}\r\n#eduTable{\r\n    text-align:center;\r\n}\r\n \r\n//----------edit profilr-----------\r\n\r\n.edit-input-style{\r\n    width:50%;\r\n    height:25px;\r\n}\r\n#input-long{\r\n    width:100%;\r\n    margin-bottom:7px;\r\n\r\n    // height:25px;\r\n}\r\n\r\n`;","import React from \"react\";\r\nimport MainNavbar from \"../MainNavbar\";\r\nimport { ProfileWrapper } from \"./Profile.style\";\r\nimport { Card, CardHeader, CardBody, Row, Col, Table } from \"reactstrap\";\r\nimport Avatar from \"react-avatar\";\r\n// import Logo from \"../../../images/ldrp_logo.png\"\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <ProfileWrapper>\r\n            <MainNavbar title=\"Profile\" />\r\n            <Card className=\"card-profile\">\r\n                <CardHeader className=\"card-profile-header\">\r\n                    <strong>Personal Details</strong>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Row>\r\n                        <Col>\r\n                            <div>\r\n                                <Avatar\r\n                                    width={390}\r\n                                    height={295}\r\n                                    // round={true}\r\n                                    // src={Logo}\r\n                                    style={{\r\n                                        marginLeft: \"50px\",\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Table borderless className=\"table-profile\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <td>TPO</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Reg. No.</th>\r\n                                            <td>213168541</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>College</th>\r\n                                            <td>LDRP</td>\r\n                                        </tr>\r\n                                        \r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div>\r\n                                <Table borderless className=\"table-profile\">\r\n                                    <tbody>\r\n                                        <tr id=\"rawHeader\">\r\n                                            <td>Contact Info</td>\r\n                                            <td></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Mobile No.</th>\r\n                                            <td>+91 8000671044</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Email-id</th>\r\n                                            <td>shurvir104@gmail.com</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Address</th>\r\n                                            <td>fsda vavbvvsfdffvbvzvxcvvvz</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n        </ProfileWrapper>\r\n    )\r\n}\r\nexport default Profile;\r\n","import React from 'react';\r\nimport MainNavbar from '../MainNavbar';\r\nimport { ProfileWrapper } from '../Profile/Profile.style';\r\nimport { Card, CardHeader, CardBody, Row, Col, Table, Input, CardFooter, Button } from \"reactstrap\";\r\nimport Avatar from \"react-avatar\";\r\nconst EditProfile = () => {\r\n\r\n    // useEffect(() => {\r\n\r\n    //     axios.defaults.headers.common = { 'api_key': `${token}` }\r\n    //     axios.post(`${serverApi}${userById}`, axios.defaults.headers.common).then(res => {\r\n    //         console.log(res)\r\n    //         if (res.status === 200) {\r\n    //             console.log(\"response\", res)\r\n    //             setFullName(`${res.data.data.first_name} ${res.data.data.last_name}`)\r\n    //             setEnroll(res.data.data.enroll)\r\n    //             setDepartment(res.data.data.department)\r\n    //             setpYear(res.data.data.batch)\r\n    //         } else {\r\n    //             console.log(\"else\", res.status)\r\n    //             alert(res.data.message)\r\n    //         }\r\n    //     }).catch(err => alert(err.response.data.message))\r\n\r\n    // }, [])\r\n\r\n    return (\r\n        <div>\r\n            <ProfileWrapper>\r\n                <MainNavbar title=\"Edit Profile\" />\r\n\r\n                <Card className=\"card-profile\">\r\n                    <CardHeader className=\"card-profile-header\">\r\n                        <strong>Personal Details</strong>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <Row>\r\n                            <Col>\r\n                                <div>\r\n                                    <Avatar\r\n                                        width={390}\r\n                                        height={295}\r\n                                        // round={true}\r\n                                        // src={Logo}\r\n                                        style={{\r\n                                            marginLeft: \"50px\",\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <Table borderless className=\"table-profile\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th>Name</th>\r\n                                                <td>TPO</td>\r\n                                            </tr>\r\n\r\n                                            <tr>\r\n                                                <th>College</th>\r\n                                                <td>LDRP</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </Col>\r\n                            <Col>\r\n                                <div>\r\n                                    <Table borderless className=\"table-profile\">\r\n                                        <tbody>\r\n                                            <tr id=\"rawHeader\">\r\n                                                <td>Contact Info</td>\r\n                                                <td></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Mobile No.</th>\r\n                                                <td ><Row>\r\n                                                    +91 <Input type=\"text\"\r\n                                                        maxLength=\"10\"\r\n                                                        size=\"sm\"\r\n                                                        className=\"edit-input-style\"\r\n                                                    />\r\n                                                </Row>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Email-id</th>\r\n                                                <td>\r\n                                                    <Input type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        id=\"input-long\"\r\n                                                        className=\"edit-input-style\"\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Address</th>\r\n                                                <td>\r\n                                                    <Input type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        id=\"input-long\"\r\n                                                        className=\"edit-input-style\"\r\n                                                    />\r\n                                                    <Input type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        id=\"input-long\"\r\n                                                        className=\"edit-input-style\"\r\n                                                    />\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                                <div>\r\n                                    <Table borderless className=\"table-profile\">\r\n                                        <tbody>\r\n                                            <tr id=\"rawHeader\">\r\n                                                <td>Placement Info</td>\r\n                                                <td></td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Status</th>\r\n                                                <td>PLACED</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th>Company</th>\r\n                                                <td>Capgemini</td>\r\n                                            </tr>\r\n\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                        <Button size=\"sm\">Save</Button>{' '}\r\n                        <Button size=\"sm\">Cancel</Button>\r\n                    </CardFooter>\r\n                </Card>\r\n            </ProfileWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditProfile;","import styled from \"styled-components\";\r\nimport { greenColor, fontBlackColor, whiteColor } from \"../../../constants/constants\";\r\n\r\nexport const AddDriveWrapper = styled.div`\r\n.background-style{\r\n    height: 230vh;\r\n    width:100%;\r\n    backdround-size:cover;\r\n    // background-color:${greenColor};\r\n\r\n}\r\n\r\n.card-adddrive{\r\n    font-size:13px;\r\n    width:70%;\r\n    margin:auto;\r\n    margin-top:20px;\r\n}\r\n\r\n.card-header-adddrive{\r\n    background-color:${greenColor};\r\n    color:white;\r\n}\r\n\r\n.table-adddrive{\r\n    margin-top:10px;\r\n    font-size:13px;\r\n}\r\n\r\n.table-adddrive tbody tr th{\r\n    color:rgb(100,100,100);\r\n    width:15%;\r\n}\r\n\r\n// .table-adddrive tbody tr td{\r\n//     width:10%;\r\n// }\r\n\r\n.table-adddrive tbody tr th,td{\r\n    margin:0px;\r\n    padding:7px;\r\n}\r\n\r\n.table-adddrive tbody tr td{\r\n    color:${fontBlackColor};\r\n    font-weight:bold;\r\n}\r\n\r\n.edit-input-style{\r\n    width:40%;\r\n    height:25px;\r\n}\r\n\r\n.edit-input-style:focus{\r\n    box-shadow: 0 0 0 2px rgba(1,162,129,0.2);\r\n}\r\n\r\n.eligi-table {\r\n    width:65%;\r\n}\r\n\r\n#input-xshort{\r\n    width:11%;\r\n}\r\n\r\n#input-location{\r\n    margin-bottom:5px;\r\n    width:20%;\r\n}\r\n\r\n.bttn{\r\n    background-color:${whiteColor};\r\n    border:none;\r\n    color:${fontBlackColor};\r\n    margin-right:30px;\r\n}\r\n\r\n.bttn:active{\r\n    background-color:${greenColor};\r\n    // border:none;\r\n    color:${whiteColor};\r\n    // margin-right:30px;\r\n}\r\n\r\n.add-other-style{\r\n    font-size:11px;\r\n    color:${greenColor}; \r\n    width:9%;\r\n}\r\n\r\n.add-other-style:hover{\r\n    background-color:${greenColor};\r\n    color:${whiteColor};\r\n    cursor: pointer\r\n}\r\n\r\n`;","import React, { useState } from 'react';\r\nimport MainNavbar from '../MainNavbar';\r\nimport { Card, CardHeader, CardBody, Table, Input, CardFooter, Button, Row, ButtonGroup } from 'reactstrap';\r\nimport { AddDriveWrapper } from './AddDrive.style';\r\nimport { serverApi, addDriveApi } from '../../../constants/constants';\r\nimport axios from \"axios\";\r\n\r\nconst AddDrive = () => {\r\n\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n\r\n    // const [elegi_departments, setElgiDepartments] = useState([]);\r\n\r\n    // const onCheckboxBtnClick = (selected) => {\r\n    //     const index = elegi_departments.indexOf(selected);\r\n    //     if (index < 0) {\r\n    //         elegi_departments.push(selected);\r\n    //     } else {\r\n    //         elegi_departments.splice(index, 1);\r\n    //     }\r\n    //     setElgiDepartments([...elegi_departments]);\r\n    // }\r\n\r\n    // const add_locationField = () => {\r\n    //     var div1 = document.createElement('div');\r\n    //     div1.innerHTML = document.getElementById('hidden-location-input').innerHTML;\r\n    //     document.getElementById('location').appendChild(div1);\r\n    // }\r\n\r\n    // const add_technologyField = () => {\r\n    //     var div1 = document.createElement('div');\r\n    //     div1.innerHTML = document.getElementById('hidden-location-input').innerHTML;\r\n    //     document.getElementById('technology').appendChild(div1);\r\n    // }\r\n\r\n    const [location, setLocation] = useState(\"\");\r\n    const [technologies, setTechnologies] = useState(\"\");\r\n\r\n    const [company_name, setCompanyName] = useState(\"\");\r\n    const [position, setPosition] = useState(\"\");\r\n    const [ctc, setCtc] = useState();\r\n\r\n    const [vanue, setVanue] = useState(\"\");\r\n    // const [part_clgs, setPartClgs] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    const [marks_avg, setMarksAvg] = useState();\r\n    const [min_cpi, setMinCpi] = useState();\r\n    const [min_backlog, setMinBacklog] = useState();\r\n    const [deadline, setDeadline] = useState(\"\");\r\n\r\n    const handleAdd = () => {\r\n        axios.defaults.headers.common = {\r\n            \"Content-Type\": \"application/json\",\r\n            \"api_key\": `${token}`\r\n        }\r\n        const data = {\r\n            company_name: company_name,\r\n            position: position,\r\n            ctc: ctc,\r\n            location: location,\r\n            technologies: technologies,\r\n            venue: vanue,\r\n            // part_clgs:part_clgs,\r\n            // elegi_departments:elegi_departments,\r\n            description: description,\r\n            aggregate_10_12: marks_avg,\r\n            min_cpi: min_cpi,\r\n            backlog: min_backlog,\r\n            deadline:deadline\r\n\r\n        }\r\n        axios.post(`${serverApi}${addDriveApi}`, data, axios.defaults.headers.common).then(res => {\r\n            console.log(res.status)\r\n            if (res.status === 200) {\r\n                // localStorage.setItem(\"token\", res.data.data.token)\r\n                console.log(\"response\", res)\r\n            } else {\r\n                console.log(\"else\", res.status)\r\n                alert(res.data.message)\r\n            }\r\n        }).catch(err => alert(err.response.data.message))\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AddDriveWrapper>\r\n                <div className=\"background-style\">\r\n                    <MainNavbar title=\"Add Drive\" />\r\n\r\n                    <Card className=\"card-adddrive\">\r\n                        <CardHeader className=\"card-header-adddrive\">\r\n                            <strong>ADD DRIVE</strong>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <div>\r\n                                <Table bordered className=\"table-adddrive\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <th>Company Name</th>\r\n                                            <td>\r\n                                                <Input type=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    // id=\"input-long\"\r\n                                                    onChange={(e) => { setCompanyName(e.target.value) }}\r\n                                                    value={company_name}\r\n                                                    className=\"edit-input-style\"\r\n                                                />\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        {/* <tr>\r\n                                            <th>Logo</th>\r\n                                            <td>\r\n                                                <Input type=\"file\"\r\n                                                    size=\"sm\"\r\n                                                // id=\"input-long\"\r\n\r\n                                                // className=\"edit-input-style\"\r\n                                                />\r\n                                            </td>\r\n                                        </tr> */}\r\n                                        <tr>\r\n                                            <th>Position</th>\r\n                                            <td>\r\n                                                <Input type=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    // id=\"input-long\"\r\n                                                    value={position}\r\n                                                    onChange={(e) => { setPosition(e.target.value) }}\r\n                                                    className=\"edit-input-style\"\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>CTC <small>(in LPA)</small></th>\r\n                                            <td>\r\n\r\n                                                <Input type=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    id=\"input-xshort\"\r\n                                                    maxLength=\"4\"\r\n                                                    placeholder=\"ex.: 3.80\"\r\n                                                    className=\"edit-input-style\"\r\n                                                    value={ctc}\r\n                                                    onChange={(e) => { setCtc(e.target.value) }}\r\n                                                />\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Location</th>\r\n                                            <td>\r\n                                                <div id=\"location\" >\r\n                                                    <Input type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        id=\"input-location\"\r\n                                                        placeholder=\"ex.: Ahmedabad\"\r\n                                                        className=\"edit-input-style\"\r\n                                                        onChange={(e) => { setLocation(e.target.value) }}\r\n                                                    />\r\n                                                </div>\r\n                                                {/* <div className=\"add-other-style\" onClick={add_locationField}>Add other</div> */}\r\n\r\n                                                {/* div to be copied */}\r\n                                                {/* <div id=\"hidden-location-input\" style={{ display: \"none\" }}>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    id=\"input-location\"\r\n                                                    onBlur={(e) => { location.push(e.target.value) }}\r\n                                                    className=\"edit-input-style\"\r\n                                                />\r\n                                            </div>\r\n                                            <p>Selected: {JSON.stringify(location)}</p> */}\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Technologies</th>\r\n                                            <td>\r\n                                                <div id=\"technology\">\r\n                                                    <Input\r\n                                                        type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        id=\"input-location\"\r\n                                                        placeholder=\"ex.: Python\"\r\n                                                        className=\"edit-input-style\"\r\n                                                        value={technologies}\r\n                                                        onChange={(e) => { setTechnologies(e.target.value) }}\r\n                                                    />\r\n                                                </div>\r\n                                                {/* <div className=\"add-other-style\" onClick={add_technologyField}>Add other</div> */}\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <th>Vanue</th>\r\n                                            <td>\r\n                                                <Input type=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    // id=\"input-long\"\r\n                                                    className=\"edit-input-style\"\r\n                                                    value={vanue}\r\n                                                    onChange={(e) => { setVanue(e.target.value) }}\r\n\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                        {/* <tr>\r\n                                        <th>Participant colleges</th>\r\n                                        <td>\r\n                                            <Input type=\"text\"\r\n                                                size=\"sm\"\r\n                                                // id=\"input-long\"\r\n                                                className=\"edit-input-style\"\r\n                                                value={part_clgs}\r\n                                                onChange={(e) => { setPartClgs(e.target.value) }}\r\n\r\n                                            />\r\n                                        </td>\r\n                                    </tr> */}\r\n                                        {/* <tr>\r\n                                        <th>Eligible Departments</th>\r\n                                        <td>\r\n                                            <ButtonGroup>\r\n                                                <Button size=\"sm\" className=\"bttn\" onClick={() => onCheckboxBtnClick(\"computer\")} active={elegi_departments.includes(\"computer\")}>Computer</Button>\r\n                                                <Button size=\"sm\" className=\"bttn\" onClick={() => onCheckboxBtnClick(\"it\")} active={elegi_departments.includes(\"it\")}>IT</Button>\r\n                                                <Button size=\"sm\" className=\"bttn\" onClick={() => onCheckboxBtnClick(\"ec\")} active={elegi_departments.includes(\"ec\")}>EC</Button>\r\n                                                <Button size=\"sm\" className=\"bttn\" onClick={() => onCheckboxBtnClick(\"ele\")} active={elegi_departments.includes(\"ele\")}>Ele.</Button>\r\n                                                <Button size=\"sm\" className=\"bttn\" onClick={() => onCheckboxBtnClick(\"civil\")} active={elegi_departments.includes(\"civil\")}>Civil</Button>\r\n                                                <Button size=\"sm\" className=\"bttn\" onClick={() => onCheckboxBtnClick(\"auto\")} active={elegi_departments.includes(\"auto\")}>Auto</Button>\r\n                                                <Button size=\"sm\" className=\"bttn\" onClick={() => onCheckboxBtnClick(\"me\")} active={elegi_departments.includes(\"me\")}>Machanical</Button>\r\n                                            </ButtonGroup>\r\n                                            <p>Selected: {JSON.stringify(elegi_departments)}</p>\r\n                                        </td>\r\n                                    </tr> */}\r\n                                        <tr>\r\n                                            <th>Description</th>\r\n                                            <td>\r\n                                                <Input type=\"textarea\"\r\n                                                    size=\"sm\"\r\n                                                    // id=\"input-long\"\r\n                                                    // className=\"edit-input-style\"\r\n                                                    value={description}\r\n                                                    onChange={(e) => { setDescription(e.target.value) }}\r\n\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>Eligibility Criteria</th>\r\n                                            <td>\r\n                                                <Table bordered className=\"eligi-table\" >\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <th>Category</th>\r\n                                                            <th>Min. Requirement</th>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td>10th + 12th average</td>\r\n                                                            <td>\r\n                                                                <Input type=\"text\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"ex.: 87\"\r\n                                                                    maxLength=\"5\"\r\n                                                                    value={marks_avg}\r\n                                                                    onChange={(e) => { setMarksAvg(e.target.value) }}\r\n                                                                    className=\"edit-input-style\"\r\n                                                                />\r\n                                                            </td>\r\n\r\n                                                        </tr>\r\n                                                        {/* <tr>\r\n                                                        <td>12th (%)</td>\r\n                                                        <td><Input type=\"text\"\r\n                                                            size=\"sm\"\r\n                                                            placeholder=\"ex.: 85.05\"\r\n                                                            maxLength=\"5\"\r\n                                                            className=\"edit-input-style\"\r\n                                                        /> %</td>\r\n                                                    </tr> */}\r\n                                                        <tr>\r\n                                                            <td>CPI</td>\r\n                                                            <td><Input type=\"text\"\r\n                                                                size=\"sm\"\r\n                                                                maxLength=\"4\"\r\n                                                                placeholder=\"ex.: 8.32\"\r\n                                                                className=\"edit-input-style\"\r\n                                                                value={min_cpi}\r\n                                                                onChange={(e) => { setMinCpi(e.target.value) }}\r\n                                                            /></td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td>Backlogs</td>\r\n                                                            <td><Input type=\"text\"\r\n                                                                size=\"sm\"\r\n                                                                maxLength=\"2\"\r\n                                                                placeholder=\"ex.:1\"\r\n                                                                className=\"edit-input-style\"\r\n                                                                value={min_backlog}\r\n                                                                onChange={(e) => { setMinBacklog(e.target.value) }}\r\n\r\n                                                            /></td>\r\n                                                        </tr>\r\n                                                        {/* <tr>\r\n                                                            <td>Allowed solved Backlogs</td>\r\n                                                            <td><Input type=\"text\"\r\n                                                                size=\"sm\"\r\n                                                                maxLength=\"2\"\r\n                                                                placeholder=\"ex.:1\"\r\n                                                                className=\"edit-input-style\"\r\n                                                            /></td>\r\n                                                        </tr> */}\r\n                                                    </tbody>\r\n\r\n                                                </Table>\r\n                                            </td>\r\n                                        </tr>\r\n                                        {/* <tr>\r\n                                            <th>Add Documents</th>\r\n                                            <td>\r\n                                                <Input type=\"file\"\r\n                                                    size=\"sm\"\r\n                                                // id=\"input-long\"\r\n                                                // className=\"edit-input-style\"\r\n                                                />\r\n                                            </td>\r\n                                        </tr> */}\r\n                                        <tr>\r\n                                            <th>DeadLine of Registration:</th>\r\n                                            <td>\r\n                                                <Input type=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    // id=\"input-long\"\r\n                                                    className=\"edit-input-style\"\r\n                                                    value={deadline}\r\n                                                    onChange={(e) => { setDeadline(e.target.value) }}\r\n\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button size=\"sm\" onClick={handleAdd}>Add</Button>{' '}\r\n                            <Button size=\"sm\" >Reset</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </div>\r\n            </AddDriveWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddDrive;","import styled from \"styled-components\"\r\nimport { whiteColor, greenColor, greenColorLight } from \"../../../../constants/constants\";\r\n\r\nexport const SLtableWrapper = styled.div`\r\n.table-style{\r\n    // background-color:Black; \r\n    // color:white;\r\n    font-size:10pt;\r\n    text-align:center;\r\n    width:70%;\r\n    margin:auto;\r\n}\r\n\r\n.table-style thead{\r\n    background-image: linear-gradient(to bottom, rgb(108,108,108) , rgb(69,69,69)); \r\n    color:${whiteColor}\r\n}\r\n\r\n.table-style thead tr th{\r\n    margin:10px;\r\n    padding:9px;\r\n} \r\n\r\n.table-style tbody tr td,th{\r\n    margin:0;\r\n    padding:3px;\r\n}\r\n\r\n.table-style tbody tr th{\r\n    background-color:${whiteColor};\r\n}\r\n\r\n.bttn{\r\n    background-color:${greenColor}\r\n}\r\n\r\n.bttn:hover{\r\n    background-color:${greenColorLight};\r\n}\r\n`;","export const StudentArray=[\r\n    {\r\n        enrollment:\"1620BECE30163\",\r\n        studentName:\"shurvir sisodiya\"\r\n    }\r\n];","import React from 'react';\r\nimport { SLtableWrapper } from './SLtable.style';\r\nimport { StudentArray } from './StudentArray';\r\nimport { Button, Table } from 'reactstrap';\r\n\r\nconst SLtable = () => {\r\n    let rowNumber=1;\r\n    return (\r\n        <div>\r\n            <SLtableWrapper>\r\n                <Table className=\"table-style\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Enrollment No.</th>\r\n                            <th>Name</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {StudentArray.map((props) => {\r\n                            return (\r\n                                <tr>\r\n                                    <th scope=\"row\">{rowNumber++}</th>\r\n                                    <td>{props.enrollment}</td>\r\n                                    <td><b>{props.studentName}</b></td>\r\n                                    <td>\r\n                                        <Button size=\"sm\" className=\"bttn\">Disaprove</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </SLtableWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SLtable;","import React from 'react';\r\nimport MainNavbar from \"../MainNavbar\";\r\nimport SLtable from './SLtable/SLtable';\r\n\r\nconst StudentList = () => {\r\n    \r\n    return (\r\n        <div>\r\n            <MainNavbar title=\"Student List\"/>\r\n            <SLtable />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StudentList;","export const tableArray = [    \r\n    {\r\n        enroll: \"1620BECE30169\",\r\n        student_name: \"Tej Viramgama\",\r\n        department:'Computer',\r\n        year: \"2020\",\r\n        cgpa: \"8.23\",\r\n        email: \"tej@gmail.com\",\r\n        contact_no:\"7895464132\",\r\n        status: true,\r\n        company_name:'OpenExcel',\r\n        technology:'Springboot'\r\n    }, \r\n    {\r\n        enroll: \"1620BECE30163\",\r\n        student_name: \"Shurvir Sisodiya\",\r\n        department:'Computer',\r\n        year: \"2020\",\r\n        cgpa: \"8.40\",\r\n        email: \"shurvirsinh104@gmail.com\",\r\n        contact_no:\"8945612300\",\r\n        status: false,\r\n        company_name:'-',\r\n        technology:'-'\r\n    },\r\n    {\r\n        enroll: \"1620BECE30173\",\r\n        student_name: \"Urvik Sorthia\",\r\n        department:'Computer',\r\n        year: \"2020\",\r\n        cgpa: \"8.50\",\r\n        email: \"urvik@gmail.com\",\r\n        contact_no:\"2323323232\",\r\n        status: true,\r\n        company_name:'Meditab',\r\n        technology:'.NET'\r\n    },\r\n    {\r\n        enroll: \"1620BECE30040\",\r\n        student_name: 'Nisarg Patel',\r\n        department:'Computer',\r\n        year: \"2020\",\r\n        cgpa: \"8.30\",\r\n        email: \"nisarg@gmail.com\",\r\n        contact_no:\"9865323232\",\r\n        status: true,\r\n        company_name:'Tatvik',\r\n        technology:'Python'\r\n    },\r\n];","import React from 'react';\r\nimport { Table, Button, Badge, Modal, ModalHeader, ModalBody, ModalFooter, ButtonGroup } from 'reactstrap';\r\nimport { tableArray } from './tableArray'\r\n// import { greenColor, whiteColor,serverApi,campusDriveApi, getDriveById  } from '../../../../constants/constants';\r\nimport { PDtableWrapper } from '../PlacementDrives/PDtable/PDtable.style';\r\n\r\n// import axios from \"axios\";\r\nconst SLtable = (props) => {\r\n    let rowNumber = 1;\r\n\r\n    return (\r\n        <div>\r\n            <PDtableWrapper>\r\n                <Table className=\"table-style\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th>#</th>\r\n                            {/* <th>Student Name</th> */}\r\n                            <th>Enrl No.</th>\r\n                            <th>Name</th>\r\n                            <th>Department</th>\r\n                            <th>Year</th>\r\n                            <th>CGPA</th>\r\n                            <th>Email id</th>\r\n                            <th>Contact no</th>\r\n                            <th>Status</th>\r\n                            <th>Company</th>\r\n                            <th>Technology</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableArray.map((props) => {\r\n                            return (\r\n                                <tr>\r\n                                    <th scope=\"row\">{rowNumber++}</th>\r\n                                    {/* <td><img src={Logo} alt=\"NA\" height=\"30\" width=\"30\" /></td> */}\r\n                                    <td><b>{props.enroll}</b></td>\r\n                                    <td>{props.student_name}</td>\r\n                                    <td>{props.department}</td>\r\n                                    <td>{props.year}</td>\r\n                                    <td>{props.cgpa}</td>\r\n                                    <td>{props.email}</td>\r\n                                    <td>{props.contact_no}</td>\r\n                                    <td className=\"badge-style\">\r\n                                        <Badge color={(props.status ? \"success\" : \"danger\")}>\r\n                                            {props.status ? 'Placed' : 'Unplaced'}\r\n                                        </Badge>\r\n                                    </td>\r\n                                    <td>{props.company_name}</td>\r\n                                    <td>{props.technology}</td>    \r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </PDtableWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SLtable;","import React, { useState } from \"react\"\r\nimport MainNavbar from \"../MainNavbar\";\r\nimport SLtable from \"./SLtable\";\r\n// import PDtable from \"./PDtable/PDtable\";\r\n\r\nconst StudentLog = () => {\r\n\r\n    return (\r\n        <div>\r\n            <MainNavbar title=\"Student Log\" />\r\n            \r\n            <SLtable />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentLog;\r\n","import React from \"react\";\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport PlacementDrives from \"./PlacementDrives/PlacementDrives\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport EditProfile from \"./EditProfile/EditProfile\";\r\nimport AddDrive from \"./AddDrive/AddDrive\";\r\nimport StudentList from \"./StudentList/StudentList\";\r\nimport StudentLog from \"./StudentLog/StudentLog\";\r\n\r\nconst Main = () => {\r\n  let match = useRouteMatch();\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={`${match.path}`} component={Dashboard} />\r\n        <Route exact path={`${match.path}/placement-drives`} component={PlacementDrives} /> \r\n        <Route exact path={`${match.path}/profile`} component={Profile} /> \r\n        <Route exact path={`${match.path}/edit-profile`} component={EditProfile} /> \r\n        <Route exact path={`${match.path}/add-drive`} component={AddDrive} />\r\n        <Route exact path={`${match.path}/student-list`} component={StudentList} />\r\n        <Route exact path={`${match.path}/student-log`} component={StudentLog} />\r\n\r\n\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import styled from \"styled-components\"\r\n\r\nexport const LoginScreenAdminWrapper = styled.div`\r\n.sidebar-style {\r\n    display: grid;\r\n    grid-template-columns: 15% 85%;\r\n  }\r\n`;","import React, { useState } from \"react\";\r\nimport NavBar from \"./Navbar/NavBar\";\r\nimport SideBar from \"./Sidebar/SideBar\";\r\nimport Main from \"./Main/Main\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LoginScreenAdminWrapper } from \"./LoginScreen.style\";\r\n\r\nconst LoginScreenAdmin = () => {\r\n  const [isLogout, setisLogout] = useState(false);\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\")\r\n    setisLogout(true);\r\n  }\r\n  if (isLogout)\r\n    return(<Redirect to=\"/\"/>)\r\n  else\r\n      return (\r\n      <div>\r\n        <LoginScreenAdminWrapper>\r\n          <div className=\"sidebar-style\">\r\n            <div>\r\n              <SideBar />\r\n            </div>\r\n            <div>\r\n              <NavBar logout={logout} />\r\n              <Main />\r\n            </div>\r\n          </div>\r\n        </LoginScreenAdminWrapper>\r\n      </div>\r\n      );\r\n  };\r\n  \r\n  export default LoginScreenAdmin;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport LoginHandles from './components/login/LoginHandles'\r\nimport Register from './components/register/Register';\r\nimport LoginScreen from './components/loginscreen/LoginScreen';\r\nimport Protected from './components/Protection/Protected';\r\nimport Login_Protected from './components/Protection/Login_Protected';\r\nimport ForgotPassword from './components/forgotpassword/ForgotPassword';\r\nimport LoginScreenAdmin from './components/loginscreenAdmin/LoginScreen';\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div>     \r\n        <Router >\r\n          <div>\r\n          <Switch>\r\n            <Route path=\"/placement-portal/register\">\r\n              <Protected Target={Register} />\r\n            </Route>\r\n\r\n            <Route path=\"/placement-portal/loginscreen-admin\">\r\n              <Login_Protected Target={LoginScreenAdmin} />\r\n            </Route>\r\n\r\n            <Route path=\"/placement-portal/loginscreen\">\r\n              <Login_Protected Target={LoginScreen} />\r\n            </Route>\r\n\r\n            <Route path=\"/placement-portal/fpassword\">\r\n              <ForgotPassword />\r\n            </Route>\r\n\r\n            <Route path=\"/placement-portal\">\r\n              <Protected Target={LoginHandles} />\r\n            </Route>\r\n          </Switch>\r\n          </div>\r\n        </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/ldrp_logo.a972e5a0.png\";","module.exports = __webpack_public_path__ + \"static/media/capgemini_logo.39fe7084.png\";"],"sourceRoot":""}